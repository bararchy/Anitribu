//====== Copyright © 2004-2013, Troika Games, Inc. All rights reserved. =======
//
// Purpose: Vampire Bloodlines game definition file (.fgd) 
// Version: 0.92 beta
// Edition: Original VtMB
// Written: Psycho-A
//
//=============================================================================

// define common classes and entities
@include "vampire-base.fgd"

// enable dispensable extra entites
@include "vampire-adds.fgd"

// if you wanna test something...
//@include "halflife2.fgd"



//*******************************************************************************************************************
//*******************************************************************************************************************
//
// Main Classes
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//====================================================================================================================
// CLASS: VEnableDisable [VTMB-specific]
//====================================================================================================================

@BaseClass = VEnableDisable
[
	start_enabled(choices) : "Start Enabled" : 1 =
	[
		0 : "No"
		1 : "Yes"
	]

	// Inputs
	input Enable(void) : "Enable this entity."
	input Disable(void) : "Disable this entity."
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
//
// ITEMS
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//====================================================================================================================
// CLASS: VItemContainer [VTMB-specific]
//====================================================================================================================

@BaseClass base(Targetname,Studiomodel,VUseIcons) studioprop() = VItemContainer
[
	model(studio) : "Model" : "models/scenery/misc/safe/safe.mdl" : "Model using for container. For custom (not listed here) models, use a full model paths."
	equip0(choices) : "Equipment #1" : "item_g_lockpick" : "This is the name of item that will be placed into container. See 'vdata/items/*.txt' for detailed item list." = 
	[
		"item_a_body_armor" : "item_a_body_armor"
		"item_a_hvy_cloth" : "item_a_hvy_cloth"
		"item_a_hvy_leather" : "item_a_hvy_leather"
		"item_a_lt_cloth" : "item_a_lt_cloth"
		"item_a_lt_leather" : "item_a_lt_leather"
		"item_d_animalism" : "item_d_animalism"
		"item_d_dementation" : "item_d_dementation"
		"item_d_dominate" : "item_d_dominate"
		"item_d_holy_light" : "item_d_holy_light"
		"item_d_thaumaturgy" : "item_d_thaumaturgy"
		"item_g_animaltrainingbook" : "item_g_animaltrainingbook"
		"item_g_astrolite" : "item_g_astrolite"
		"item_g_bach_journal" : "item_g_bach_journal"
		"item_g_badlucktalisman" : "item_g_badlucktalisman"
		"item_g_bailbond_receipt" : "item_g_bailbond_receipt"
		"item_g_bertrams_cd" : "item_g_bertrams_cd"
		"item_g_bloodpack" : "item_g_bloodpack"
		"item_g_bluebloodpack" : "item_g_bluebloodpack"
		"item_g_brotherhood_flyer" : "item_g_brotherhood_flyer"
		"item_g_car_stereo" : "item_g_car_stereo"
		"item_g_cash_box" : "item_g_cash_box"
		"item_g_chewinggum" : "item_g_chewinggum"
		"item_g_computerbookhighgrade" : "item_g_computerbookhighgrade"
		"item_g_computerbooklowgrade" : "item_g_computerbooklowgrade"
		"item_g_driver_license_gimble" : "item_g_driver_license_gimble"
		"item_g_drugs_drug_box" : "item_g_drugs_drug_box"
		"item_g_drugs_morphine_bottle" : "item_g_drugs_morphine_bottle"
		"item_g_drugs_perscription_bottle" : "item_g_drugs_perscription_bottle"
		"item_g_drugs_pill_bottle" : "item_g_drugs_pill_bottle"
		"item_g_edane_print_report" : "item_g_edane_print_report"
		"item_g_edane_report" : "item_g_edane_report"
		"item_g_eldervitaepack" : "item_g_eldervitaepack"
		"item_g_eyes" : "item_g_eyes"
		"item_g_gargoyle_book" : "item_g_gargoyle_book"
		"item_g_garys_cd" : "item_g_garys_cd"
		"item_g_garys_film" : "item_g_garys_film"
		"item_g_garys_photo" : "item_g_garys_photo"
		"item_g_garys_tape" : "item_g_garys_tape"
		"item_g_ghost_pendant" : "item_g_ghost_pendant"
		"item_g_giovanni_invitation_maria" : "item_g_giovanni_invitation_maria"
		"item_g_giovanni_invitation_victor" : "item_g_giovanni_invitation_victor"
		"item_g_guy_magazine" : "item_g_guy_magazine"
		"item_g_hannahs_appt_book" : "item_g_hannahs_appt_book"
		"item_g_hatters_screenplay" : "item_g_hatters_screenplay"
		"item_g_horrortape_1" : "item_g_horrortape_1"
		"item_g_horrortape_2" : "item_g_horrortape_2"
		"item_g_idol_cat" : "item_g_idol_cat"
		"item_g_idol_crane" : "item_g_idol_crane"
		"item_g_idol_dragon" : "item_g_idol_dragon"
		"item_g_idol_elephant" : "item_g_idol_elephant"
		"item_g_jumbles_flyer" : "item_g_jumbles_flyer"
		"item_g_junkyard_businesscard" : "item_g_junkyard_businesscard"
		"item_g_keyring" : "item_g_keyring"
		"item_g_larry_briefcase" : "item_g_larry_briefcase"
		"item_g_lillyonbeachphoto" : "item_g_lillyonbeachphoto"
		"item_g_lilly_diary" : "item_g_lilly_diary"
		"item_g_lilly_photo" : "item_g_lilly_photo"
		"item_g_lilly_purse" : "item_g_lilly_purse"
		"item_g_linedpaper" : "item_g_linedpaper"
		"item_g_locket" : "item_g_locket"
		"item_g_lockpick" : "item_g_lockpick"
		"item_g_mercurio_journal" : "item_g_mercurio_journal"
		"item_g_milligans_businesscard" : "item_g_milligans_businesscard"
		"item_g_oh_diary" : "item_g_oh_diary"
		"item_g_pisha_book" : "item_g_pisha_book"
		"item_g_pisha_fetish" : "item_g_pisha_fetish"
		"item_g_pulltoy" : "item_g_pulltoy"
		"item_g_ring03" : "item_g_ring03"
		"item_g_ring_gold" : "item_g_ring_gold"
		"item_g_ring_serial_killer_1" : "item_g_ring_serial_killer_1"
		"item_g_ring_serial_killer_2" : "item_g_ring_serial_killer_2"
		"item_g_ring_silver" : "item_g_ring_silver"
		"item_g_sewerbook_1" : "item_g_sewerbook_1"
		"item_g_stake" : "item_g_stake"
		"item_g_vampyr_apocrypha" : "item_g_vampyr_apocrypha"
		"item_g_vv_photo" : "item_g_vv_photo"
		"item_g_wallet" : "item_g_wallet"
		"item_g_warrens4_passkey" : "item_g_warrens4_passkey"
		"item_g_warr_clipboard" : "item_g_warr_clipboard"
		"item_g_warr_ledger_1" : "item_g_warr_ledger_1"
		"item_g_warr_ledger_2" : "item_g_warr_ledger_2"
		"item_g_watch_fancy" : "item_g_watch_fancy"
		"item_g_watch_normal" : "item_g_watch_normal"
		"item_g_werewolf_bloodpack" : "item_g_werewolf_bloodpack"
		"item_g_wireless_camera_1" : "item_g_wireless_camera_1"
		"item_g_wireless_camera_2" : "item_g_wireless_camera_2"
		"item_g_wireless_camera_3" : "item_g_wireless_camera_3"
		"item_g_wireless_camera_4" : "item_g_wireless_camera_4"
		"item_i_written" : "item_i_written"
		"item_k_ash_cell_key" : "item_k_ash_cell_key"
		"item_k_carson_apartment_key" : "item_k_carson_apartment_key"
		"item_k_chinese_theatre_key" : "item_k_chinese_theatre_key"
		"item_k_clinic_cs_key" : "item_k_clinic_cs_key"
		"item_k_clinic_maintenance_key" : "item_k_clinic_maintenance_key"
		"item_k_clinic_stairs_key" : "item_k_clinic_stairs_key"
		"item_k_edane_key" : "item_k_edane_key"
		"item_k_empire_jezebel_key" : "item_k_empire_jezebel_key"
		"item_k_empire_mafia_key" : "item_k_empire_mafia_key"
		"item_k_fu_cell_key" : "item_k_fu_cell_key"
		"item_k_fu_office_key" : "item_k_fu_office_key"
		"item_k_gallery_noir_key" : "item_k_gallery_noir_key"
		"item_k_gimble_key" : "item_k_gimble_key"
		"item_k_hannahs_safe_key" : "item_k_hannahs_safe_key"
		"item_k_hitman_ji_key" : "item_k_hitman_ji_key"
		"item_k_hitman_lu_key" : "item_k_hitman_lu_key"
		"item_k_kiki_key" : "item_k_kiki_key"
		"item_k_leopold_int_key" : "item_k_leopold_int_key"
		"item_k_lilly_key" : "item_k_lilly_key"
		"item_k_lucky_star_murder_key" : "item_k_lucky_star_murder_key"
		"item_k_malcolm_office_key" : "item_k_malcolm_office_key"
		"item_k_malkavian_refrigerator_key" : "item_k_malkavian_refrigerator_key"
		"item_k_murietta_key" : "item_k_murietta_key"
		"item_k_museum_basement_key" : "item_k_museum_basement_key"
		"item_k_museum_office_key" : "item_k_museum_office_key"
		"item_k_museum_storage_key" : "item_k_museum_storage_key"
		"item_k_museum_storeroom_key" : "item_k_museum_storeroom_key"
		"item_k_netcafe_office_key" : "item_k_netcafe_office_key"
		"item_k_oceanhouse_basement_key" : "item_k_oceanhouse_basement_key"
		"item_k_oceanhouse_sewer_key" : "item_k_oceanhouse_sewer_key"
		"item_k_oceanhouse_upstairs_key" : "item_k_oceanhouse_upstairs_key"
		"item_k_oh_front_key" : "item_k_oh_front_key"
		"item_k_sarcophagus_key" : "item_k_sarcophagus_key"
		"item_k_shrekhub_four_key" : "item_k_shrekhub_four_key"
		"item_k_shrekhub_one_key" : "item_k_shrekhub_one_key"
		"item_k_shrekhub_three_key" : "item_k_shrekhub_three_key"
		"item_k_skyline_haven_key" : "item_k_skyline_haven_key"
		"item_k_tatoo_parlor_key" : "item_k_tatoo_parlor_key"
		"item_k_tawni_apartment_key" : "item_k_tawni_apartment_key"
		"item_k_tutorial_chopshop_stairs_key" : "item_k_tutorial_chopshop_stairs_key"
		"item_m_money_clip" : "item_m_money_clip"
		"item_m_money_envelope" : "item_m_money_envelope"
		"item_m_wallet" : "item_m_wallet"
		"item_p_gargoyle_talisman" : "item_p_gargoyle_talisman"
		"item_p_occult_blood_buff" : "item_p_occult_blood_buff"
		"item_p_occult_dexterity" : "item_p_occult_dexterity"
		"item_p_occult_dodge" : "item_p_occult_dodge"
		"item_p_occult_experience" : "item_p_occult_experience"
		"item_p_occult_frenzy" : "item_p_occult_frenzy"
		"item_p_occult_hacking" : "item_p_occult_hacking"
		"item_p_occult_heal_rate" : "item_p_occult_heal_rate"
		"item_p_occult_lockpicking" : "item_p_occult_lockpicking"
		"item_p_occult_obfuscate" : "item_p_occult_obfuscate"
		"item_p_occult_passive_durations" : "item_p_occult_passive_durations"
		"item_p_occult_presence" : "item_p_occult_presence"
		"item_p_occult_regen" : "item_p_occult_regen"
		"item_p_occult_strength" : "item_p_occult_strength"
		"item_p_occult_thaum_damage" : "item_p_occult_thaum_damage"
		"item_p_research_hg_computers" : "item_p_research_hg_computers"
		"item_p_research_hg_dodge" : "item_p_research_hg_dodge"
		"item_p_research_hg_firearms" : "item_p_research_hg_firearms"
		"item_p_research_hg_melee" : "item_p_research_hg_melee"
		"item_p_research_lg_computers" : "item_p_research_lg_computers"
		"item_p_research_lg_dodge" : "item_p_research_lg_dodge"
		"item_p_research_lg_firearms" : "item_p_research_lg_firearms"
		"item_p_research_lg_stealth" : "item_p_research_lg_stealth"
		"item_p_research_mg_brawl" : "item_p_research_mg_brawl"
		"item_p_research_mg_finance" : "item_p_research_mg_finance"
		"item_p_research_mg_melee" : "item_p_research_mg_melee"
		"item_p_research_mg_security" : "item_p_research_mg_security"
		"item_s_physicshand" : "item_s_physicshand"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"weapon_pistol" : "weapon_pistol"
	]
	equip1(choices) : "Equipment #2" : : "This is the name of item that will be placed into container. See 'vdata/items/*.txt' for detailed item list." = 
	[
		"item_a_body_armor" : "item_a_body_armor"
		"item_a_hvy_cloth" : "item_a_hvy_cloth"
		"item_a_hvy_leather" : "item_a_hvy_leather"
		"item_a_lt_cloth" : "item_a_lt_cloth"
		"item_a_lt_leather" : "item_a_lt_leather"
		"item_d_animalism" : "item_d_animalism"
		"item_d_dementation" : "item_d_dementation"
		"item_d_dominate" : "item_d_dominate"
		"item_d_holy_light" : "item_d_holy_light"
		"item_d_thaumaturgy" : "item_d_thaumaturgy"
		"item_g_animaltrainingbook" : "item_g_animaltrainingbook"
		"item_g_astrolite" : "item_g_astrolite"
		"item_g_bach_journal" : "item_g_bach_journal"
		"item_g_badlucktalisman" : "item_g_badlucktalisman"
		"item_g_bailbond_receipt" : "item_g_bailbond_receipt"
		"item_g_bertrams_cd" : "item_g_bertrams_cd"
		"item_g_bloodpack" : "item_g_bloodpack"
		"item_g_bluebloodpack" : "item_g_bluebloodpack"
		"item_g_brotherhood_flyer" : "item_g_brotherhood_flyer"
		"item_g_car_stereo" : "item_g_car_stereo"
		"item_g_cash_box" : "item_g_cash_box"
		"item_g_chewinggum" : "item_g_chewinggum"
		"item_g_computerbookhighgrade" : "item_g_computerbookhighgrade"
		"item_g_computerbooklowgrade" : "item_g_computerbooklowgrade"
		"item_g_driver_license_gimble" : "item_g_driver_license_gimble"
		"item_g_drugs_drug_box" : "item_g_drugs_drug_box"
		"item_g_drugs_morphine_bottle" : "item_g_drugs_morphine_bottle"
		"item_g_drugs_perscription_bottle" : "item_g_drugs_perscription_bottle"
		"item_g_drugs_pill_bottle" : "item_g_drugs_pill_bottle"
		"item_g_edane_print_report" : "item_g_edane_print_report"
		"item_g_edane_report" : "item_g_edane_report"
		"item_g_eldervitaepack" : "item_g_eldervitaepack"
		"item_g_eyes" : "item_g_eyes"
		"item_g_gargoyle_book" : "item_g_gargoyle_book"
		"item_g_garys_cd" : "item_g_garys_cd"
		"item_g_garys_film" : "item_g_garys_film"
		"item_g_garys_photo" : "item_g_garys_photo"
		"item_g_garys_tape" : "item_g_garys_tape"
		"item_g_ghost_pendant" : "item_g_ghost_pendant"
		"item_g_giovanni_invitation_maria" : "item_g_giovanni_invitation_maria"
		"item_g_giovanni_invitation_victor" : "item_g_giovanni_invitation_victor"
		"item_g_guy_magazine" : "item_g_guy_magazine"
		"item_g_hannahs_appt_book" : "item_g_hannahs_appt_book"
		"item_g_hatters_screenplay" : "item_g_hatters_screenplay"
		"item_g_horrortape_1" : "item_g_horrortape_1"
		"item_g_horrortape_2" : "item_g_horrortape_2"
		"item_g_idol_cat" : "item_g_idol_cat"
		"item_g_idol_crane" : "item_g_idol_crane"
		"item_g_idol_dragon" : "item_g_idol_dragon"
		"item_g_idol_elephant" : "item_g_idol_elephant"
		"item_g_jumbles_flyer" : "item_g_jumbles_flyer"
		"item_g_junkyard_businesscard" : "item_g_junkyard_businesscard"
		"item_g_keyring" : "item_g_keyring"
		"item_g_larry_briefcase" : "item_g_larry_briefcase"
		"item_g_lillyonbeachphoto" : "item_g_lillyonbeachphoto"
		"item_g_lilly_diary" : "item_g_lilly_diary"
		"item_g_lilly_photo" : "item_g_lilly_photo"
		"item_g_lilly_purse" : "item_g_lilly_purse"
		"item_g_linedpaper" : "item_g_linedpaper"
		"item_g_locket" : "item_g_locket"
		"item_g_lockpick" : "item_g_lockpick"
		"item_g_mercurio_journal" : "item_g_mercurio_journal"
		"item_g_milligans_businesscard" : "item_g_milligans_businesscard"
		"item_g_oh_diary" : "item_g_oh_diary"
		"item_g_pisha_book" : "item_g_pisha_book"
		"item_g_pisha_fetish" : "item_g_pisha_fetish"
		"item_g_pulltoy" : "item_g_pulltoy"
		"item_g_ring03" : "item_g_ring03"
		"item_g_ring_gold" : "item_g_ring_gold"
		"item_g_ring_serial_killer_1" : "item_g_ring_serial_killer_1"
		"item_g_ring_serial_killer_2" : "item_g_ring_serial_killer_2"
		"item_g_ring_silver" : "item_g_ring_silver"
		"item_g_sewerbook_1" : "item_g_sewerbook_1"
		"item_g_stake" : "item_g_stake"
		"item_g_vampyr_apocrypha" : "item_g_vampyr_apocrypha"
		"item_g_vv_photo" : "item_g_vv_photo"
		"item_g_wallet" : "item_g_wallet"
		"item_g_warrens4_passkey" : "item_g_warrens4_passkey"
		"item_g_warr_clipboard" : "item_g_warr_clipboard"
		"item_g_warr_ledger_1" : "item_g_warr_ledger_1"
		"item_g_warr_ledger_2" : "item_g_warr_ledger_2"
		"item_g_watch_fancy" : "item_g_watch_fancy"
		"item_g_watch_normal" : "item_g_watch_normal"
		"item_g_werewolf_bloodpack" : "item_g_werewolf_bloodpack"
		"item_g_wireless_camera_1" : "item_g_wireless_camera_1"
		"item_g_wireless_camera_2" : "item_g_wireless_camera_2"
		"item_g_wireless_camera_3" : "item_g_wireless_camera_3"
		"item_g_wireless_camera_4" : "item_g_wireless_camera_4"
		"item_i_written" : "item_i_written"
		"item_k_ash_cell_key" : "item_k_ash_cell_key"
		"item_k_carson_apartment_key" : "item_k_carson_apartment_key"
		"item_k_chinese_theatre_key" : "item_k_chinese_theatre_key"
		"item_k_clinic_cs_key" : "item_k_clinic_cs_key"
		"item_k_clinic_maintenance_key" : "item_k_clinic_maintenance_key"
		"item_k_clinic_stairs_key" : "item_k_clinic_stairs_key"
		"item_k_edane_key" : "item_k_edane_key"
		"item_k_empire_jezebel_key" : "item_k_empire_jezebel_key"
		"item_k_empire_mafia_key" : "item_k_empire_mafia_key"
		"item_k_fu_cell_key" : "item_k_fu_cell_key"
		"item_k_fu_office_key" : "item_k_fu_office_key"
		"item_k_gallery_noir_key" : "item_k_gallery_noir_key"
		"item_k_gimble_key" : "item_k_gimble_key"
		"item_k_hannahs_safe_key" : "item_k_hannahs_safe_key"
		"item_k_hitman_ji_key" : "item_k_hitman_ji_key"
		"item_k_hitman_lu_key" : "item_k_hitman_lu_key"
		"item_k_kiki_key" : "item_k_kiki_key"
		"item_k_leopold_int_key" : "item_k_leopold_int_key"
		"item_k_lilly_key" : "item_k_lilly_key"
		"item_k_lucky_star_murder_key" : "item_k_lucky_star_murder_key"
		"item_k_malcolm_office_key" : "item_k_malcolm_office_key"
		"item_k_malkavian_refrigerator_key" : "item_k_malkavian_refrigerator_key"
		"item_k_murietta_key" : "item_k_murietta_key"
		"item_k_museum_basement_key" : "item_k_museum_basement_key"
		"item_k_museum_office_key" : "item_k_museum_office_key"
		"item_k_museum_storage_key" : "item_k_museum_storage_key"
		"item_k_museum_storeroom_key" : "item_k_museum_storeroom_key"
		"item_k_netcafe_office_key" : "item_k_netcafe_office_key"
		"item_k_oceanhouse_basement_key" : "item_k_oceanhouse_basement_key"
		"item_k_oceanhouse_sewer_key" : "item_k_oceanhouse_sewer_key"
		"item_k_oceanhouse_upstairs_key" : "item_k_oceanhouse_upstairs_key"
		"item_k_oh_front_key" : "item_k_oh_front_key"
		"item_k_sarcophagus_key" : "item_k_sarcophagus_key"
		"item_k_shrekhub_four_key" : "item_k_shrekhub_four_key"
		"item_k_shrekhub_one_key" : "item_k_shrekhub_one_key"
		"item_k_shrekhub_three_key" : "item_k_shrekhub_three_key"
		"item_k_skyline_haven_key" : "item_k_skyline_haven_key"
		"item_k_tatoo_parlor_key" : "item_k_tatoo_parlor_key"
		"item_k_tawni_apartment_key" : "item_k_tawni_apartment_key"
		"item_k_tutorial_chopshop_stairs_key" : "item_k_tutorial_chopshop_stairs_key"
		"item_m_money_clip" : "item_m_money_clip"
		"item_m_money_envelope" : "item_m_money_envelope"
		"item_m_wallet" : "item_m_wallet"
		"item_p_gargoyle_talisman" : "item_p_gargoyle_talisman"
		"item_p_occult_blood_buff" : "item_p_occult_blood_buff"
		"item_p_occult_dexterity" : "item_p_occult_dexterity"
		"item_p_occult_dodge" : "item_p_occult_dodge"
		"item_p_occult_experience" : "item_p_occult_experience"
		"item_p_occult_frenzy" : "item_p_occult_frenzy"
		"item_p_occult_hacking" : "item_p_occult_hacking"
		"item_p_occult_heal_rate" : "item_p_occult_heal_rate"
		"item_p_occult_lockpicking" : "item_p_occult_lockpicking"
		"item_p_occult_obfuscate" : "item_p_occult_obfuscate"
		"item_p_occult_passive_durations" : "item_p_occult_passive_durations"
		"item_p_occult_presence" : "item_p_occult_presence"
		"item_p_occult_regen" : "item_p_occult_regen"
		"item_p_occult_strength" : "item_p_occult_strength"
		"item_p_occult_thaum_damage" : "item_p_occult_thaum_damage"
		"item_p_research_hg_computers" : "item_p_research_hg_computers"
		"item_p_research_hg_dodge" : "item_p_research_hg_dodge"
		"item_p_research_hg_firearms" : "item_p_research_hg_firearms"
		"item_p_research_hg_melee" : "item_p_research_hg_melee"
		"item_p_research_lg_computers" : "item_p_research_lg_computers"
		"item_p_research_lg_dodge" : "item_p_research_lg_dodge"
		"item_p_research_lg_firearms" : "item_p_research_lg_firearms"
		"item_p_research_lg_stealth" : "item_p_research_lg_stealth"
		"item_p_research_mg_brawl" : "item_p_research_mg_brawl"
		"item_p_research_mg_finance" : "item_p_research_mg_finance"
		"item_p_research_mg_melee" : "item_p_research_mg_melee"
		"item_p_research_mg_security" : "item_p_research_mg_security"
		"item_s_physicshand" : "item_s_physicshand"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"weapon_pistol" : "weapon_pistol"
	]
	equip2(choices) : "Equipment #3" : : "This is the name of item that will be placed into container. See 'vdata/items/*.txt' for detailed item list." = 
	[
		"item_a_body_armor" : "item_a_body_armor"
		"item_a_hvy_cloth" : "item_a_hvy_cloth"
		"item_a_hvy_leather" : "item_a_hvy_leather"
		"item_a_lt_cloth" : "item_a_lt_cloth"
		"item_a_lt_leather" : "item_a_lt_leather"
		"item_d_animalism" : "item_d_animalism"
		"item_d_dementation" : "item_d_dementation"
		"item_d_dominate" : "item_d_dominate"
		"item_d_holy_light" : "item_d_holy_light"
		"item_d_thaumaturgy" : "item_d_thaumaturgy"
		"item_g_animaltrainingbook" : "item_g_animaltrainingbook"
		"item_g_astrolite" : "item_g_astrolite"
		"item_g_bach_journal" : "item_g_bach_journal"
		"item_g_badlucktalisman" : "item_g_badlucktalisman"
		"item_g_bailbond_receipt" : "item_g_bailbond_receipt"
		"item_g_bertrams_cd" : "item_g_bertrams_cd"
		"item_g_bloodpack" : "item_g_bloodpack"
		"item_g_bluebloodpack" : "item_g_bluebloodpack"
		"item_g_brotherhood_flyer" : "item_g_brotherhood_flyer"
		"item_g_car_stereo" : "item_g_car_stereo"
		"item_g_cash_box" : "item_g_cash_box"
		"item_g_chewinggum" : "item_g_chewinggum"
		"item_g_computerbookhighgrade" : "item_g_computerbookhighgrade"
		"item_g_computerbooklowgrade" : "item_g_computerbooklowgrade"
		"item_g_driver_license_gimble" : "item_g_driver_license_gimble"
		"item_g_drugs_drug_box" : "item_g_drugs_drug_box"
		"item_g_drugs_morphine_bottle" : "item_g_drugs_morphine_bottle"
		"item_g_drugs_perscription_bottle" : "item_g_drugs_perscription_bottle"
		"item_g_drugs_pill_bottle" : "item_g_drugs_pill_bottle"
		"item_g_edane_print_report" : "item_g_edane_print_report"
		"item_g_edane_report" : "item_g_edane_report"
		"item_g_eldervitaepack" : "item_g_eldervitaepack"
		"item_g_eyes" : "item_g_eyes"
		"item_g_gargoyle_book" : "item_g_gargoyle_book"
		"item_g_garys_cd" : "item_g_garys_cd"
		"item_g_garys_film" : "item_g_garys_film"
		"item_g_garys_photo" : "item_g_garys_photo"
		"item_g_garys_tape" : "item_g_garys_tape"
		"item_g_ghost_pendant" : "item_g_ghost_pendant"
		"item_g_giovanni_invitation_maria" : "item_g_giovanni_invitation_maria"
		"item_g_giovanni_invitation_victor" : "item_g_giovanni_invitation_victor"
		"item_g_guy_magazine" : "item_g_guy_magazine"
		"item_g_hannahs_appt_book" : "item_g_hannahs_appt_book"
		"item_g_hatters_screenplay" : "item_g_hatters_screenplay"
		"item_g_horrortape_1" : "item_g_horrortape_1"
		"item_g_horrortape_2" : "item_g_horrortape_2"
		"item_g_idol_cat" : "item_g_idol_cat"
		"item_g_idol_crane" : "item_g_idol_crane"
		"item_g_idol_dragon" : "item_g_idol_dragon"
		"item_g_idol_elephant" : "item_g_idol_elephant"
		"item_g_jumbles_flyer" : "item_g_jumbles_flyer"
		"item_g_junkyard_businesscard" : "item_g_junkyard_businesscard"
		"item_g_keyring" : "item_g_keyring"
		"item_g_larry_briefcase" : "item_g_larry_briefcase"
		"item_g_lillyonbeachphoto" : "item_g_lillyonbeachphoto"
		"item_g_lilly_diary" : "item_g_lilly_diary"
		"item_g_lilly_photo" : "item_g_lilly_photo"
		"item_g_lilly_purse" : "item_g_lilly_purse"
		"item_g_linedpaper" : "item_g_linedpaper"
		"item_g_locket" : "item_g_locket"
		"item_g_lockpick" : "item_g_lockpick"
		"item_g_mercurio_journal" : "item_g_mercurio_journal"
		"item_g_milligans_businesscard" : "item_g_milligans_businesscard"
		"item_g_oh_diary" : "item_g_oh_diary"
		"item_g_pisha_book" : "item_g_pisha_book"
		"item_g_pisha_fetish" : "item_g_pisha_fetish"
		"item_g_pulltoy" : "item_g_pulltoy"
		"item_g_ring03" : "item_g_ring03"
		"item_g_ring_gold" : "item_g_ring_gold"
		"item_g_ring_serial_killer_1" : "item_g_ring_serial_killer_1"
		"item_g_ring_serial_killer_2" : "item_g_ring_serial_killer_2"
		"item_g_ring_silver" : "item_g_ring_silver"
		"item_g_sewerbook_1" : "item_g_sewerbook_1"
		"item_g_stake" : "item_g_stake"
		"item_g_vampyr_apocrypha" : "item_g_vampyr_apocrypha"
		"item_g_vv_photo" : "item_g_vv_photo"
		"item_g_wallet" : "item_g_wallet"
		"item_g_warrens4_passkey" : "item_g_warrens4_passkey"
		"item_g_warr_clipboard" : "item_g_warr_clipboard"
		"item_g_warr_ledger_1" : "item_g_warr_ledger_1"
		"item_g_warr_ledger_2" : "item_g_warr_ledger_2"
		"item_g_watch_fancy" : "item_g_watch_fancy"
		"item_g_watch_normal" : "item_g_watch_normal"
		"item_g_werewolf_bloodpack" : "item_g_werewolf_bloodpack"
		"item_g_wireless_camera_1" : "item_g_wireless_camera_1"
		"item_g_wireless_camera_2" : "item_g_wireless_camera_2"
		"item_g_wireless_camera_3" : "item_g_wireless_camera_3"
		"item_g_wireless_camera_4" : "item_g_wireless_camera_4"
		"item_i_written" : "item_i_written"
		"item_k_ash_cell_key" : "item_k_ash_cell_key"
		"item_k_carson_apartment_key" : "item_k_carson_apartment_key"
		"item_k_chinese_theatre_key" : "item_k_chinese_theatre_key"
		"item_k_clinic_cs_key" : "item_k_clinic_cs_key"
		"item_k_clinic_maintenance_key" : "item_k_clinic_maintenance_key"
		"item_k_clinic_stairs_key" : "item_k_clinic_stairs_key"
		"item_k_edane_key" : "item_k_edane_key"
		"item_k_empire_jezebel_key" : "item_k_empire_jezebel_key"
		"item_k_empire_mafia_key" : "item_k_empire_mafia_key"
		"item_k_fu_cell_key" : "item_k_fu_cell_key"
		"item_k_fu_office_key" : "item_k_fu_office_key"
		"item_k_gallery_noir_key" : "item_k_gallery_noir_key"
		"item_k_gimble_key" : "item_k_gimble_key"
		"item_k_hannahs_safe_key" : "item_k_hannahs_safe_key"
		"item_k_hitman_ji_key" : "item_k_hitman_ji_key"
		"item_k_hitman_lu_key" : "item_k_hitman_lu_key"
		"item_k_kiki_key" : "item_k_kiki_key"
		"item_k_leopold_int_key" : "item_k_leopold_int_key"
		"item_k_lilly_key" : "item_k_lilly_key"
		"item_k_lucky_star_murder_key" : "item_k_lucky_star_murder_key"
		"item_k_malcolm_office_key" : "item_k_malcolm_office_key"
		"item_k_malkavian_refrigerator_key" : "item_k_malkavian_refrigerator_key"
		"item_k_murietta_key" : "item_k_murietta_key"
		"item_k_museum_basement_key" : "item_k_museum_basement_key"
		"item_k_museum_office_key" : "item_k_museum_office_key"
		"item_k_museum_storage_key" : "item_k_museum_storage_key"
		"item_k_museum_storeroom_key" : "item_k_museum_storeroom_key"
		"item_k_netcafe_office_key" : "item_k_netcafe_office_key"
		"item_k_oceanhouse_basement_key" : "item_k_oceanhouse_basement_key"
		"item_k_oceanhouse_sewer_key" : "item_k_oceanhouse_sewer_key"
		"item_k_oceanhouse_upstairs_key" : "item_k_oceanhouse_upstairs_key"
		"item_k_oh_front_key" : "item_k_oh_front_key"
		"item_k_sarcophagus_key" : "item_k_sarcophagus_key"
		"item_k_shrekhub_four_key" : "item_k_shrekhub_four_key"
		"item_k_shrekhub_one_key" : "item_k_shrekhub_one_key"
		"item_k_shrekhub_three_key" : "item_k_shrekhub_three_key"
		"item_k_skyline_haven_key" : "item_k_skyline_haven_key"
		"item_k_tatoo_parlor_key" : "item_k_tatoo_parlor_key"
		"item_k_tawni_apartment_key" : "item_k_tawni_apartment_key"
		"item_k_tutorial_chopshop_stairs_key" : "item_k_tutorial_chopshop_stairs_key"
		"item_m_money_clip" : "item_m_money_clip"
		"item_m_money_envelope" : "item_m_money_envelope"
		"item_m_wallet" : "item_m_wallet"
		"item_p_gargoyle_talisman" : "item_p_gargoyle_talisman"
		"item_p_occult_blood_buff" : "item_p_occult_blood_buff"
		"item_p_occult_dexterity" : "item_p_occult_dexterity"
		"item_p_occult_dodge" : "item_p_occult_dodge"
		"item_p_occult_experience" : "item_p_occult_experience"
		"item_p_occult_frenzy" : "item_p_occult_frenzy"
		"item_p_occult_hacking" : "item_p_occult_hacking"
		"item_p_occult_heal_rate" : "item_p_occult_heal_rate"
		"item_p_occult_lockpicking" : "item_p_occult_lockpicking"
		"item_p_occult_obfuscate" : "item_p_occult_obfuscate"
		"item_p_occult_passive_durations" : "item_p_occult_passive_durations"
		"item_p_occult_presence" : "item_p_occult_presence"
		"item_p_occult_regen" : "item_p_occult_regen"
		"item_p_occult_strength" : "item_p_occult_strength"
		"item_p_occult_thaum_damage" : "item_p_occult_thaum_damage"
		"item_p_research_hg_computers" : "item_p_research_hg_computers"
		"item_p_research_hg_dodge" : "item_p_research_hg_dodge"
		"item_p_research_hg_firearms" : "item_p_research_hg_firearms"
		"item_p_research_hg_melee" : "item_p_research_hg_melee"
		"item_p_research_lg_computers" : "item_p_research_lg_computers"
		"item_p_research_lg_dodge" : "item_p_research_lg_dodge"
		"item_p_research_lg_firearms" : "item_p_research_lg_firearms"
		"item_p_research_lg_stealth" : "item_p_research_lg_stealth"
		"item_p_research_mg_brawl" : "item_p_research_mg_brawl"
		"item_p_research_mg_finance" : "item_p_research_mg_finance"
		"item_p_research_mg_melee" : "item_p_research_mg_melee"
		"item_p_research_mg_security" : "item_p_research_mg_security"
		"item_s_physicshand" : "item_s_physicshand"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"weapon_pistol" : "weapon_pistol"
	]
	equip3(choices) : "Equipment #4" : : "This is the name of item that will be placed into container. See 'vdata/items/*.txt' for detailed item list." = 
	[
		"item_a_body_armor" : "item_a_body_armor"
		"item_a_hvy_cloth" : "item_a_hvy_cloth"
		"item_a_hvy_leather" : "item_a_hvy_leather"
		"item_a_lt_cloth" : "item_a_lt_cloth"
		"item_a_lt_leather" : "item_a_lt_leather"
		"item_d_animalism" : "item_d_animalism"
		"item_d_dementation" : "item_d_dementation"
		"item_d_dominate" : "item_d_dominate"
		"item_d_holy_light" : "item_d_holy_light"
		"item_d_thaumaturgy" : "item_d_thaumaturgy"
		"item_g_animaltrainingbook" : "item_g_animaltrainingbook"
		"item_g_astrolite" : "item_g_astrolite"
		"item_g_bach_journal" : "item_g_bach_journal"
		"item_g_badlucktalisman" : "item_g_badlucktalisman"
		"item_g_bailbond_receipt" : "item_g_bailbond_receipt"
		"item_g_bertrams_cd" : "item_g_bertrams_cd"
		"item_g_bloodpack" : "item_g_bloodpack"
		"item_g_bluebloodpack" : "item_g_bluebloodpack"
		"item_g_brotherhood_flyer" : "item_g_brotherhood_flyer"
		"item_g_car_stereo" : "item_g_car_stereo"
		"item_g_cash_box" : "item_g_cash_box"
		"item_g_chewinggum" : "item_g_chewinggum"
		"item_g_computerbookhighgrade" : "item_g_computerbookhighgrade"
		"item_g_computerbooklowgrade" : "item_g_computerbooklowgrade"
		"item_g_driver_license_gimble" : "item_g_driver_license_gimble"
		"item_g_drugs_drug_box" : "item_g_drugs_drug_box"
		"item_g_drugs_morphine_bottle" : "item_g_drugs_morphine_bottle"
		"item_g_drugs_perscription_bottle" : "item_g_drugs_perscription_bottle"
		"item_g_drugs_pill_bottle" : "item_g_drugs_pill_bottle"
		"item_g_edane_print_report" : "item_g_edane_print_report"
		"item_g_edane_report" : "item_g_edane_report"
		"item_g_eldervitaepack" : "item_g_eldervitaepack"
		"item_g_eyes" : "item_g_eyes"
		"item_g_gargoyle_book" : "item_g_gargoyle_book"
		"item_g_garys_cd" : "item_g_garys_cd"
		"item_g_garys_film" : "item_g_garys_film"
		"item_g_garys_photo" : "item_g_garys_photo"
		"item_g_garys_tape" : "item_g_garys_tape"
		"item_g_ghost_pendant" : "item_g_ghost_pendant"
		"item_g_giovanni_invitation_maria" : "item_g_giovanni_invitation_maria"
		"item_g_giovanni_invitation_victor" : "item_g_giovanni_invitation_victor"
		"item_g_guy_magazine" : "item_g_guy_magazine"
		"item_g_hannahs_appt_book" : "item_g_hannahs_appt_book"
		"item_g_hatters_screenplay" : "item_g_hatters_screenplay"
		"item_g_horrortape_1" : "item_g_horrortape_1"
		"item_g_horrortape_2" : "item_g_horrortape_2"
		"item_g_idol_cat" : "item_g_idol_cat"
		"item_g_idol_crane" : "item_g_idol_crane"
		"item_g_idol_dragon" : "item_g_idol_dragon"
		"item_g_idol_elephant" : "item_g_idol_elephant"
		"item_g_jumbles_flyer" : "item_g_jumbles_flyer"
		"item_g_junkyard_businesscard" : "item_g_junkyard_businesscard"
		"item_g_keyring" : "item_g_keyring"
		"item_g_larry_briefcase" : "item_g_larry_briefcase"
		"item_g_lillyonbeachphoto" : "item_g_lillyonbeachphoto"
		"item_g_lilly_diary" : "item_g_lilly_diary"
		"item_g_lilly_photo" : "item_g_lilly_photo"
		"item_g_lilly_purse" : "item_g_lilly_purse"
		"item_g_linedpaper" : "item_g_linedpaper"
		"item_g_locket" : "item_g_locket"
		"item_g_lockpick" : "item_g_lockpick"
		"item_g_mercurio_journal" : "item_g_mercurio_journal"
		"item_g_milligans_businesscard" : "item_g_milligans_businesscard"
		"item_g_oh_diary" : "item_g_oh_diary"
		"item_g_pisha_book" : "item_g_pisha_book"
		"item_g_pisha_fetish" : "item_g_pisha_fetish"
		"item_g_pulltoy" : "item_g_pulltoy"
		"item_g_ring03" : "item_g_ring03"
		"item_g_ring_gold" : "item_g_ring_gold"
		"item_g_ring_serial_killer_1" : "item_g_ring_serial_killer_1"
		"item_g_ring_serial_killer_2" : "item_g_ring_serial_killer_2"
		"item_g_ring_silver" : "item_g_ring_silver"
		"item_g_sewerbook_1" : "item_g_sewerbook_1"
		"item_g_stake" : "item_g_stake"
		"item_g_vampyr_apocrypha" : "item_g_vampyr_apocrypha"
		"item_g_vv_photo" : "item_g_vv_photo"
		"item_g_wallet" : "item_g_wallet"
		"item_g_warrens4_passkey" : "item_g_warrens4_passkey"
		"item_g_warr_clipboard" : "item_g_warr_clipboard"
		"item_g_warr_ledger_1" : "item_g_warr_ledger_1"
		"item_g_warr_ledger_2" : "item_g_warr_ledger_2"
		"item_g_watch_fancy" : "item_g_watch_fancy"
		"item_g_watch_normal" : "item_g_watch_normal"
		"item_g_werewolf_bloodpack" : "item_g_werewolf_bloodpack"
		"item_g_wireless_camera_1" : "item_g_wireless_camera_1"
		"item_g_wireless_camera_2" : "item_g_wireless_camera_2"
		"item_g_wireless_camera_3" : "item_g_wireless_camera_3"
		"item_g_wireless_camera_4" : "item_g_wireless_camera_4"
		"item_i_written" : "item_i_written"
		"item_k_ash_cell_key" : "item_k_ash_cell_key"
		"item_k_carson_apartment_key" : "item_k_carson_apartment_key"
		"item_k_chinese_theatre_key" : "item_k_chinese_theatre_key"
		"item_k_clinic_cs_key" : "item_k_clinic_cs_key"
		"item_k_clinic_maintenance_key" : "item_k_clinic_maintenance_key"
		"item_k_clinic_stairs_key" : "item_k_clinic_stairs_key"
		"item_k_edane_key" : "item_k_edane_key"
		"item_k_empire_jezebel_key" : "item_k_empire_jezebel_key"
		"item_k_empire_mafia_key" : "item_k_empire_mafia_key"
		"item_k_fu_cell_key" : "item_k_fu_cell_key"
		"item_k_fu_office_key" : "item_k_fu_office_key"
		"item_k_gallery_noir_key" : "item_k_gallery_noir_key"
		"item_k_gimble_key" : "item_k_gimble_key"
		"item_k_hannahs_safe_key" : "item_k_hannahs_safe_key"
		"item_k_hitman_ji_key" : "item_k_hitman_ji_key"
		"item_k_hitman_lu_key" : "item_k_hitman_lu_key"
		"item_k_kiki_key" : "item_k_kiki_key"
		"item_k_leopold_int_key" : "item_k_leopold_int_key"
		"item_k_lilly_key" : "item_k_lilly_key"
		"item_k_lucky_star_murder_key" : "item_k_lucky_star_murder_key"
		"item_k_malcolm_office_key" : "item_k_malcolm_office_key"
		"item_k_malkavian_refrigerator_key" : "item_k_malkavian_refrigerator_key"
		"item_k_murietta_key" : "item_k_murietta_key"
		"item_k_museum_basement_key" : "item_k_museum_basement_key"
		"item_k_museum_office_key" : "item_k_museum_office_key"
		"item_k_museum_storage_key" : "item_k_museum_storage_key"
		"item_k_museum_storeroom_key" : "item_k_museum_storeroom_key"
		"item_k_netcafe_office_key" : "item_k_netcafe_office_key"
		"item_k_oceanhouse_basement_key" : "item_k_oceanhouse_basement_key"
		"item_k_oceanhouse_sewer_key" : "item_k_oceanhouse_sewer_key"
		"item_k_oceanhouse_upstairs_key" : "item_k_oceanhouse_upstairs_key"
		"item_k_oh_front_key" : "item_k_oh_front_key"
		"item_k_sarcophagus_key" : "item_k_sarcophagus_key"
		"item_k_shrekhub_four_key" : "item_k_shrekhub_four_key"
		"item_k_shrekhub_one_key" : "item_k_shrekhub_one_key"
		"item_k_shrekhub_three_key" : "item_k_shrekhub_three_key"
		"item_k_skyline_haven_key" : "item_k_skyline_haven_key"
		"item_k_tatoo_parlor_key" : "item_k_tatoo_parlor_key"
		"item_k_tawni_apartment_key" : "item_k_tawni_apartment_key"
		"item_k_tutorial_chopshop_stairs_key" : "item_k_tutorial_chopshop_stairs_key"
		"item_m_money_clip" : "item_m_money_clip"
		"item_m_money_envelope" : "item_m_money_envelope"
		"item_m_wallet" : "item_m_wallet"
		"item_p_gargoyle_talisman" : "item_p_gargoyle_talisman"
		"item_p_occult_blood_buff" : "item_p_occult_blood_buff"
		"item_p_occult_dexterity" : "item_p_occult_dexterity"
		"item_p_occult_dodge" : "item_p_occult_dodge"
		"item_p_occult_experience" : "item_p_occult_experience"
		"item_p_occult_frenzy" : "item_p_occult_frenzy"
		"item_p_occult_hacking" : "item_p_occult_hacking"
		"item_p_occult_heal_rate" : "item_p_occult_heal_rate"
		"item_p_occult_lockpicking" : "item_p_occult_lockpicking"
		"item_p_occult_obfuscate" : "item_p_occult_obfuscate"
		"item_p_occult_passive_durations" : "item_p_occult_passive_durations"
		"item_p_occult_presence" : "item_p_occult_presence"
		"item_p_occult_regen" : "item_p_occult_regen"
		"item_p_occult_strength" : "item_p_occult_strength"
		"item_p_occult_thaum_damage" : "item_p_occult_thaum_damage"
		"item_p_research_hg_computers" : "item_p_research_hg_computers"
		"item_p_research_hg_dodge" : "item_p_research_hg_dodge"
		"item_p_research_hg_firearms" : "item_p_research_hg_firearms"
		"item_p_research_hg_melee" : "item_p_research_hg_melee"
		"item_p_research_lg_computers" : "item_p_research_lg_computers"
		"item_p_research_lg_dodge" : "item_p_research_lg_dodge"
		"item_p_research_lg_firearms" : "item_p_research_lg_firearms"
		"item_p_research_lg_stealth" : "item_p_research_lg_stealth"
		"item_p_research_mg_brawl" : "item_p_research_mg_brawl"
		"item_p_research_mg_finance" : "item_p_research_mg_finance"
		"item_p_research_mg_melee" : "item_p_research_mg_melee"
		"item_p_research_mg_security" : "item_p_research_mg_security"
		"item_s_physicshand" : "item_s_physicshand"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"weapon_pistol" : "weapon_pistol"
	]
	equip4(choices) : "Equipment #5" : : "This is the name of item that will be placed into container. See 'vdata/items/*.txt' for detailed item list." = 
	[
		"item_a_body_armor" : "item_a_body_armor"
		"item_a_hvy_cloth" : "item_a_hvy_cloth"
		"item_a_hvy_leather" : "item_a_hvy_leather"
		"item_a_lt_cloth" : "item_a_lt_cloth"
		"item_a_lt_leather" : "item_a_lt_leather"
		"item_d_animalism" : "item_d_animalism"
		"item_d_dementation" : "item_d_dementation"
		"item_d_dominate" : "item_d_dominate"
		"item_d_holy_light" : "item_d_holy_light"
		"item_d_thaumaturgy" : "item_d_thaumaturgy"
		"item_g_animaltrainingbook" : "item_g_animaltrainingbook"
		"item_g_astrolite" : "item_g_astrolite"
		"item_g_bach_journal" : "item_g_bach_journal"
		"item_g_badlucktalisman" : "item_g_badlucktalisman"
		"item_g_bailbond_receipt" : "item_g_bailbond_receipt"
		"item_g_bertrams_cd" : "item_g_bertrams_cd"
		"item_g_bloodpack" : "item_g_bloodpack"
		"item_g_bluebloodpack" : "item_g_bluebloodpack"
		"item_g_brotherhood_flyer" : "item_g_brotherhood_flyer"
		"item_g_car_stereo" : "item_g_car_stereo"
		"item_g_cash_box" : "item_g_cash_box"
		"item_g_chewinggum" : "item_g_chewinggum"
		"item_g_computerbookhighgrade" : "item_g_computerbookhighgrade"
		"item_g_computerbooklowgrade" : "item_g_computerbooklowgrade"
		"item_g_driver_license_gimble" : "item_g_driver_license_gimble"
		"item_g_drugs_drug_box" : "item_g_drugs_drug_box"
		"item_g_drugs_morphine_bottle" : "item_g_drugs_morphine_bottle"
		"item_g_drugs_perscription_bottle" : "item_g_drugs_perscription_bottle"
		"item_g_drugs_pill_bottle" : "item_g_drugs_pill_bottle"
		"item_g_edane_print_report" : "item_g_edane_print_report"
		"item_g_edane_report" : "item_g_edane_report"
		"item_g_eldervitaepack" : "item_g_eldervitaepack"
		"item_g_eyes" : "item_g_eyes"
		"item_g_gargoyle_book" : "item_g_gargoyle_book"
		"item_g_garys_cd" : "item_g_garys_cd"
		"item_g_garys_film" : "item_g_garys_film"
		"item_g_garys_photo" : "item_g_garys_photo"
		"item_g_garys_tape" : "item_g_garys_tape"
		"item_g_ghost_pendant" : "item_g_ghost_pendant"
		"item_g_giovanni_invitation_maria" : "item_g_giovanni_invitation_maria"
		"item_g_giovanni_invitation_victor" : "item_g_giovanni_invitation_victor"
		"item_g_guy_magazine" : "item_g_guy_magazine"
		"item_g_hannahs_appt_book" : "item_g_hannahs_appt_book"
		"item_g_hatters_screenplay" : "item_g_hatters_screenplay"
		"item_g_horrortape_1" : "item_g_horrortape_1"
		"item_g_horrortape_2" : "item_g_horrortape_2"
		"item_g_idol_cat" : "item_g_idol_cat"
		"item_g_idol_crane" : "item_g_idol_crane"
		"item_g_idol_dragon" : "item_g_idol_dragon"
		"item_g_idol_elephant" : "item_g_idol_elephant"
		"item_g_jumbles_flyer" : "item_g_jumbles_flyer"
		"item_g_junkyard_businesscard" : "item_g_junkyard_businesscard"
		"item_g_keyring" : "item_g_keyring"
		"item_g_larry_briefcase" : "item_g_larry_briefcase"
		"item_g_lillyonbeachphoto" : "item_g_lillyonbeachphoto"
		"item_g_lilly_diary" : "item_g_lilly_diary"
		"item_g_lilly_photo" : "item_g_lilly_photo"
		"item_g_lilly_purse" : "item_g_lilly_purse"
		"item_g_linedpaper" : "item_g_linedpaper"
		"item_g_locket" : "item_g_locket"
		"item_g_lockpick" : "item_g_lockpick"
		"item_g_mercurio_journal" : "item_g_mercurio_journal"
		"item_g_milligans_businesscard" : "item_g_milligans_businesscard"
		"item_g_oh_diary" : "item_g_oh_diary"
		"item_g_pisha_book" : "item_g_pisha_book"
		"item_g_pisha_fetish" : "item_g_pisha_fetish"
		"item_g_pulltoy" : "item_g_pulltoy"
		"item_g_ring03" : "item_g_ring03"
		"item_g_ring_gold" : "item_g_ring_gold"
		"item_g_ring_serial_killer_1" : "item_g_ring_serial_killer_1"
		"item_g_ring_serial_killer_2" : "item_g_ring_serial_killer_2"
		"item_g_ring_silver" : "item_g_ring_silver"
		"item_g_sewerbook_1" : "item_g_sewerbook_1"
		"item_g_stake" : "item_g_stake"
		"item_g_vampyr_apocrypha" : "item_g_vampyr_apocrypha"
		"item_g_vv_photo" : "item_g_vv_photo"
		"item_g_wallet" : "item_g_wallet"
		"item_g_warrens4_passkey" : "item_g_warrens4_passkey"
		"item_g_warr_clipboard" : "item_g_warr_clipboard"
		"item_g_warr_ledger_1" : "item_g_warr_ledger_1"
		"item_g_warr_ledger_2" : "item_g_warr_ledger_2"
		"item_g_watch_fancy" : "item_g_watch_fancy"
		"item_g_watch_normal" : "item_g_watch_normal"
		"item_g_werewolf_bloodpack" : "item_g_werewolf_bloodpack"
		"item_g_wireless_camera_1" : "item_g_wireless_camera_1"
		"item_g_wireless_camera_2" : "item_g_wireless_camera_2"
		"item_g_wireless_camera_3" : "item_g_wireless_camera_3"
		"item_g_wireless_camera_4" : "item_g_wireless_camera_4"
		"item_i_written" : "item_i_written"
		"item_k_ash_cell_key" : "item_k_ash_cell_key"
		"item_k_carson_apartment_key" : "item_k_carson_apartment_key"
		"item_k_chinese_theatre_key" : "item_k_chinese_theatre_key"
		"item_k_clinic_cs_key" : "item_k_clinic_cs_key"
		"item_k_clinic_maintenance_key" : "item_k_clinic_maintenance_key"
		"item_k_clinic_stairs_key" : "item_k_clinic_stairs_key"
		"item_k_edane_key" : "item_k_edane_key"
		"item_k_empire_jezebel_key" : "item_k_empire_jezebel_key"
		"item_k_empire_mafia_key" : "item_k_empire_mafia_key"
		"item_k_fu_cell_key" : "item_k_fu_cell_key"
		"item_k_fu_office_key" : "item_k_fu_office_key"
		"item_k_gallery_noir_key" : "item_k_gallery_noir_key"
		"item_k_gimble_key" : "item_k_gimble_key"
		"item_k_hannahs_safe_key" : "item_k_hannahs_safe_key"
		"item_k_hitman_ji_key" : "item_k_hitman_ji_key"
		"item_k_hitman_lu_key" : "item_k_hitman_lu_key"
		"item_k_kiki_key" : "item_k_kiki_key"
		"item_k_leopold_int_key" : "item_k_leopold_int_key"
		"item_k_lilly_key" : "item_k_lilly_key"
		"item_k_lucky_star_murder_key" : "item_k_lucky_star_murder_key"
		"item_k_malcolm_office_key" : "item_k_malcolm_office_key"
		"item_k_malkavian_refrigerator_key" : "item_k_malkavian_refrigerator_key"
		"item_k_murietta_key" : "item_k_murietta_key"
		"item_k_museum_basement_key" : "item_k_museum_basement_key"
		"item_k_museum_office_key" : "item_k_museum_office_key"
		"item_k_museum_storage_key" : "item_k_museum_storage_key"
		"item_k_museum_storeroom_key" : "item_k_museum_storeroom_key"
		"item_k_netcafe_office_key" : "item_k_netcafe_office_key"
		"item_k_oceanhouse_basement_key" : "item_k_oceanhouse_basement_key"
		"item_k_oceanhouse_sewer_key" : "item_k_oceanhouse_sewer_key"
		"item_k_oceanhouse_upstairs_key" : "item_k_oceanhouse_upstairs_key"
		"item_k_oh_front_key" : "item_k_oh_front_key"
		"item_k_sarcophagus_key" : "item_k_sarcophagus_key"
		"item_k_shrekhub_four_key" : "item_k_shrekhub_four_key"
		"item_k_shrekhub_one_key" : "item_k_shrekhub_one_key"
		"item_k_shrekhub_three_key" : "item_k_shrekhub_three_key"
		"item_k_skyline_haven_key" : "item_k_skyline_haven_key"
		"item_k_tatoo_parlor_key" : "item_k_tatoo_parlor_key"
		"item_k_tawni_apartment_key" : "item_k_tawni_apartment_key"
		"item_k_tutorial_chopshop_stairs_key" : "item_k_tutorial_chopshop_stairs_key"
		"item_m_money_clip" : "item_m_money_clip"
		"item_m_money_envelope" : "item_m_money_envelope"
		"item_m_wallet" : "item_m_wallet"
		"item_p_gargoyle_talisman" : "item_p_gargoyle_talisman"
		"item_p_occult_blood_buff" : "item_p_occult_blood_buff"
		"item_p_occult_dexterity" : "item_p_occult_dexterity"
		"item_p_occult_dodge" : "item_p_occult_dodge"
		"item_p_occult_experience" : "item_p_occult_experience"
		"item_p_occult_frenzy" : "item_p_occult_frenzy"
		"item_p_occult_hacking" : "item_p_occult_hacking"
		"item_p_occult_heal_rate" : "item_p_occult_heal_rate"
		"item_p_occult_lockpicking" : "item_p_occult_lockpicking"
		"item_p_occult_obfuscate" : "item_p_occult_obfuscate"
		"item_p_occult_passive_durations" : "item_p_occult_passive_durations"
		"item_p_occult_presence" : "item_p_occult_presence"
		"item_p_occult_regen" : "item_p_occult_regen"
		"item_p_occult_strength" : "item_p_occult_strength"
		"item_p_occult_thaum_damage" : "item_p_occult_thaum_damage"
		"item_p_research_hg_computers" : "item_p_research_hg_computers"
		"item_p_research_hg_dodge" : "item_p_research_hg_dodge"
		"item_p_research_hg_firearms" : "item_p_research_hg_firearms"
		"item_p_research_hg_melee" : "item_p_research_hg_melee"
		"item_p_research_lg_computers" : "item_p_research_lg_computers"
		"item_p_research_lg_dodge" : "item_p_research_lg_dodge"
		"item_p_research_lg_firearms" : "item_p_research_lg_firearms"
		"item_p_research_lg_stealth" : "item_p_research_lg_stealth"
		"item_p_research_mg_brawl" : "item_p_research_mg_brawl"
		"item_p_research_mg_finance" : "item_p_research_mg_finance"
		"item_p_research_mg_melee" : "item_p_research_mg_melee"
		"item_p_research_mg_security" : "item_p_research_mg_security"
		"item_s_physicshand" : "item_s_physicshand"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"weapon_pistol" : "weapon_pistol"
	]
	soundgroup(choices) : "Sound Group" : "metal_file_cabinet" : "The group of sounds relative to 'sound/usable/openable/<groupname>/*.wav' that specifies action sounds." = 
	[
		"metal_chest" : "Metal Chest"
		"metal_file_cabinet" : "Metal File Cabinet"
		"push_arm_door" : "Push Arm Door"
		"wood_drawer" : "Wood Drawer"
		"wooden_chest" : "Wooden Chest"
	]
	health(integer) : "Container Health [-?]" : 0 : "[VTMB] Unknown yet..."
	lootable_type(choices) : "Lootable Type [-?]" : 3 : "[VTMB] Unknown yet..." = 
	[
		0 : "Type 0 [unknown]"
		1 : "Type 1 [unknown]"
		2 : "Type 2 [unknown]"
		3 : "Type 3 [unknown]"
		4 : "Type 4 [unknown]"
	]
	
	move_dest(angle) : "Move Destination (Y Z X)" : "0 0 0" : "This entity's move direction [not tested]."
	move_speed(integer) : "Move Speed (Units/Sec)" : 45 : "Speed of entity's moving."
	rot_axis(choices) : "Rotation Axis (Y/Z/X)" : 1 : "Defines axis if this prop rotates [not tested]." = 
	[
		0 : "Y"
		1 : "Z"
		2 : "X"
	]
	rot_dist(integer) : "Rotation Angle" : 90 : "Max allowed rotation angle."
	rot_speed(integer) : "Rotation Speed" : 45 : "Speed of rotation moving."
	use_pref(choices) : "Use Pref. [-?]" : 0 : "[VTMB] Unknown yet..." = 
	[
		0 : "0 [unknown]"
		1 : "1 [unknown]"
	]
	disablereceiveshadows(choices) : "Disable Receiving Shadows" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	solid(choices) : "Collisions" : 0 =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
	]

	// Inputs
	input AddEntityToContainer(void) : "Add selected entity to container."
	input SpawnItemInContainer(void) : "Spawn selected entity in container."
	input DeleteItems(void) : "Delete selected items in container."
	input HumanityAdd(void) : "Add humanity point to player."
	input Bloodloss(void) : "Take away blood point [-?]."
	input Bloodgain(void) : "Gain blood level [-?]."
	input ClearActiveDisciplines(void) : "Clear currently launched disciplines."
	input physdamagescale(float) : "Sets the value that scales damage energy when this character is hit by a physics object. NOTE: 0 means this feature is disabled for backwards compatibility."
	input Inventory_Remove(void) : "[VTMB: untested connection]"
	input MoneyAdd(void) : "Add amount of money."
	input MoneyRemove(void) : "Remove amount of money."
	input BarterBegin(void) : "Begin barter process..."
	input BarterEnd(void) : "End barter process..."
	input BloodHeal(void) : "Player will be healing by blood."
	input FrenzyCheck(void) : "[VTMB: untested connection]"
	input FrenzyTrigger(void) : "[VTMB: untested connection]"
	input HungerCheck(void) : "[VTMB: untested connection]"
	input FrenzyUpdate(void) : "[VTMB: untested connection]"
	input PlayFloat(void) : "[VTMB: untested connection]"
	input WillTalk(void) : "Make NPC talk [-?]"
	input ChangeMasqueradeLevel(void) : "Change player's Masquerade level."
	input FadeHeadAsCameraTarget(void) : "[VTMB: untested connection]"
	input FadeBodyAsCameraTarget(void) : "[VTMB: untested connection]"
	input SetHeadAsCameraTarget(void) : "[VTMB: untested connection]"
	input SetBodyAsCameraTarget(void) : "[VTMB: untested connection]"
	input LookAtEntityEye(void) : "[VTMB: untested connection]"
	input LookAtEntityCenter(void) : "[VTMB: untested connection]"
	input LookAtEntityOrigin(void) : "[VTMB: untested connection]"
	input LookAtEntityDefault(void) : "[VTMB: untested connection]"
	
	// Outputs
	output OnPlayerPickup(void) : "Fired whenever the player picks up this item (with +USE)."
	output OnItemInsert(void) : "Fired when item was inserted (by player) into container."
	output OnItemRemove(void) : "Fired when item was taked away (by player) from container."
	output OnBreak(void) : "Fired when container breaks."
	output OnSellWeapon(void) : "Fired when player sell weapon."
	output OnBarterClose(void) : "Fired when barter process end."
]





//====================================================================================================================
// item_container [VTMB-specific]
//====================================================================================================================

@PointClass base(VItemContainer) studioprop() = item_container : 
	"[VTMB] A dynamic item that can contain other items, like weapons, supply e.t.c."
[
]




//====================================================================================================================
// item_container_animated [VTMB-specific]
//====================================================================================================================
@PointClass base(VItemContainer) studioprop() = item_container_animated : 
	"[VTMB] A dynamic item that can contain other items, like weapons, supply e.t.c. Same as 'item_container' but supports dynamic properties like animations and damage."
[
	npc_opaque(choices) : "NPC Opacity [-?]" : 1 : "Should be NPC opaque or not [not tested]." = 
	[
		0 : "No"
		1 : "Yes"
	]
	dmgmodel(studio) : "Damaged State Model" : : "Model that spawns when this container damaged."
]








//====================================================================================================================
// Items & Weapons [VTMB-specific]
//====================================================================================================================

// armor
@PointClass base(Item) studio("models/scenery/misc/armor/RiotGear/RiotGear.mdl")= item_a_body_armor : "This protective vest is worn under clothing, for that extra ounce of 'not gonna die today'." []
@PointClass base(Item) studio("models/scenery/misc/armor/ClothesHeavy/ClothesHeavy.mdl")= item_a_hvy_cloth : "This is a set of heavy clothing, which acts as armor. Heavy clothing armor has an armor rating of 2." []
@PointClass base(Item) studio("models/scenery/misc/armor/LeatherHeavy/LeatherHeavy.mdl")= item_a_hvy_leather : "This is a set of heavy leather armor. Heavy leather armor has an armor rating of 4, but hinders movement, resulting in a -2 penalty to Dexterity. Some examples of heavy leather armor are studded or reinforced leather jackets, girded leather pants, and hard leather gloves and boots." []
@PointClass base(Item) studio("models/scenery/misc/armor/ClothesLight/ClothesLight.mdl")= item_a_lt_cloth : "This is the most basic and unrestrictive armor. There are no stat penalites for equipping it. Examples of cloth armor would be t-shirts, khakis, sun dresses, and pleated skirts." []

// disciplines
@PointClass base(Item) = item_d_animalism : "Animalism discipline." []
@PointClass base(Item) = item_d_dementation : "Dementation discipline." []
@PointClass base(Item) = item_d_dominate : "Domination discipline." []
@PointClass base(Item) studio("models/weapons/holylight/view/v_holylight.mdl")= item_d_holy_light : "Holy Light discipline." []
@PointClass base(Item) studio("models/weapons/thaumaturgy/view/v_thaumaturgy.mdl")= item_d_thaumaturgy : "Thaumaturgy discipline." []

// equipment
@PointClass base(Item) studio("models/items/bloodpack/ground/bloodpack.mdl")= item_g_bluebloodpack : "Blood Pack.\n\nA bag of blood routinely used in hospitals for transfusions. Using it restores blood points." []
@PointClass base(Item) studio("models/items/bloodpack/ground/bloodpack.mdl")= item_g_bluebloodpack : "Blue Blood Pack.\n\nA bag of blood from only the finest human specimens. Drinking it restores blood points." []
@PointClass base(Item) studio("models/items/bloodpack/ground/bloodpack.mdl")= item_g_eldervitaepack : "Elder Vitae.\n\nThis bag contains extremely potent blood. The hows and wheres of its origin are probably best left unexplored." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_g_keyring : "Keyring.\n\nRing that saves all found keys." []
@PointClass base(Item) studio("models/weapons/lockpicks/world/w_lockpicks.mdl")= item_g_lockpick : "Lockpick.\n\Tool of the trade for locksmiths and burglars. A lockpick is used to push the pins inside a lock into their correct position until the lock is 'open'. It takes a lot of experience to use these well." []
@PointClass base(Item) studio("models/items/Wallet/Ground/Wallet.mdl")= item_g_wallet : "Wallet.\n\nYour wallet." []
@PointClass base(Item) studio("models/items/sewerbook/Ground/sewerbook.mdl")= item_g_sewerbook_1: "Sewer Works Manual.\n\nA guide to sewer mains in the greater Los Angeles area. With references such as these, Nosferatu turn sluiceways and sludgepools into highways and havens. For global travel, enter the sewers and use one of the maps found on the wall." []

// questline items
@PointClass base(Item) studio("models/items/AnimalTrainingBook/Ground/AnimalTrainingBook.mdl")= item_g_animaltrainingbook : "Animal Training Book.\n\nGallery Noir's Charity Money." []
@PointClass base(Item) studio("models/items/Astrolite/Ground/Astrolite.mdl")= item_g_astrolite : "Astrolite.\n\nA powerful liquid explosive made from over-the-counter chemicals." []
@PointClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_bach_journal : "Journal.\n\nThis journal is inscribed with the initials 'G.B.'." []
@PointClass base(Item) studio("models/items/Talisman/ground/Talisman.mdl")= item_g_badlucktalisman : "Bad Luck Talisman.\n\nA talisman that Mr. Ox asked you to put in Shu's locker at the Lotus Blossom." []
@PointClass base(Item) studio("models/items/BailBond/Ground/BailBond.mdl")= item_g_bailbond_receipt : "Bail Bond.\n\nThis is the receipt for a bail bond. The bail bond was for a one Rolf Toten." []
@PointClass base(Item) studio("models/items/cdcase/Ground/cdcase.mdl")= item_g_bertrams_cd : "CD-ROM.\n\nA label on the CD says 'B. Tung'." []
@PointClass base(Item) studio("models/items/brotherhoodflyer/Ground/brotherhoodflyer.mdl")= item_g_brotherhood_flyer : "Brotherhood Flyer.\n\nThe writing on this flyer reads 'I am Enlightened'." []
@PointClass base(Item) studio("models/items/License/Ground/License.mdl")= item_g_driver_license_gimble : "Driver's License.\n\nA California driver's license. The name on the license is Virgil Crumb." []
@PointClass base(Item) studio("models/items/manifest/Ground/manifest_g.mdl")= item_g_edane_print_report : "Ship Manifest.\n\nAnkaran Site transport to Los Angeles: Ankaran Sarcophagus, 3 crates - pottery/tablets, 1 box - unidentified." []
@PointClass base(Item) studio("models/items/clipboard/ground/clipboard.mdl")= item_g_edane_report : "Police Report.\n\nA copy of the Initial Police Report for the Elizabeth Dane, signed by members of the USCG, NCIS, and LAHP agencies. Despite strong evidence of amazing physical violence, not a single body has been found, no survivors have been located, and there are no signs of large-scale theft." []
@PointClass base(Item) studio("models/items/Eyeballs/Ground/Eyeballs.mdl")= item_g_eyes : "Ox' Eyes.\n\nEyeballs... eyeballs?" []
@PointClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_gargoyle_book : "Thaumaturgical Creatures.\n\nRegent's book." []
@PointClass base(Item) studio("models/items/Pendant/ground/Pendant.mdl")= item_g_ghost_pendant : "Pendant.\n\nThis exquisite pendant looks polished though it was found in the charred ruins of the Ocean House. When you hold it in your palm for a few seconds, you're overwhelmed with a sense of profound sadness." []
@PointClass base(Item) studio("models/items/invitation/ground/invitation.mdl")= item_g_giovanni_invitation_maria : "Giovanni Invitation.\n\nMaria Giovanni's invitation." []
@PointClass base(Item) studio("models/items/invitation/ground/invitation.mdl")= item_g_giovanni_invitation_victor : "Giovanni Invitation.\n\nVictor Giovanni's invitation." []
@PointClass base(Item) studio("models/items/guymag/Ground/guymag.mdl")= item_g_guy_magazine : "Guy Magazine, Spring Edition.\n\nThis looks to be a copy of the Spring Edition of Guy Magazine. On the cover is a beautiful girl, scantily clad. The copy reads, 'IMALIA. Rough, Tough and in the Buff!'." []
@PointClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_hannahs_appt_book : "Hanna's Appointment Book." []
@PointClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_hatters_screenplay : "Screenplay.\n\nDavid Hatter's screenplay. It is tentatively titled 'Humanity Vs. The Vampire Lords'." []
@PointClass base(Item) studio("models/items/HorrorTape_1/Ground/HorrorTape_1.mdl")= item_g_horrortape_1 : "Horror Tape Part 1.\n\nA battered videocassette. The labeling is cheap and worn, you can barely make out the logo, which looks somewhat like 'DMP'. It appears this tape has changed hands more than a few times." []
@PointClass base(Item) studio("models/items/HorrorTape_2/Ground/HorrorTape_2.mdl")= item_g_horrortape_2 : "Horror Tape Part 2.\n\nA battered videocassette. A battered videocassette. The labeling is cheap and worn. You hope it's one of the muppet movies." []
@PointClass base(Item) studio("models/items/jadecat/Ground/jadecat.mdl")= item_g_idol_cat : "Jade Cat.\n\nThis is a beautifully-crafted jade statue." []
@PointClass base(Item) studio("models/items/jadecrane/Ground/jadecrane.mdl")= item_g_idol_crane : "Jade Crane.\n\nThis is a beautifully-crafted jade statue." []
@PointClass base(Item) studio("models/items/jadedragon/Ground/jadedragon.mdl")= item_g_idol_dragon : "Jade Dragon.\n\nThis is a beautifully-crafted jade statue." []
@PointClass base(Item) studio("models/items/jadeelephant/Ground/jadeelephant.mdl")= item_g_idol_elephant : "Jade Elephant.\n\nThis is a beautifully-crafted jade statue." []
@PointClass base(Item) studio("models/items/Flyer/ground/flyer.mdl")= item_g_jumbles_flyer : "Flyer.\n\nThe writing below the symbol says 'I am Enlightened!'." []
@PointClass base(Item) studio("models/items/businesscard/Ground/businesscard2.mdl")= item_g_junkyard_businesscard : "Brothers Salvage.\n\nThe card reads 'Brothers Salvage, Santa Monica'." []
@PointClass base(Item) studio("models/items/briefcase/Ground/briefcase.mdl")= item_g_larry_briefcase : "Briefcase.\n\nA briefcase with contents unknown. Larry asked you to grab this from an exchange in the parking garage, which you obviously did." []
@PointClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_lilly_diary : "Diary.\n\nThis seems to be Lilly's diary." []
@PointClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_lilly_diary : "Diary.\n\nThis seems to be Lilly's diary." []
@PointClass base(Item) studio("models/items/LillyOnBeachPhoto/Ground/LillyOnBeachPhoto.mdl")= item_g_lilly_photo : "Girl's Photo.\n\nA photo of a young woman. The message on the back of the photo reads 'August 03, Santa Monica, Lily'." []
@PointClass base(Item) studio("models/items/Purse/Ground/Purse.mdl")= item_g_lilly_purse : "Purse.\n\nA purse left by Lilly behind in the Diner." []
@PointClass base(Item) studio("models/items/LillyOnBeachPhoto/Ground/LillyOnBeachPhoto.mdl")= item_g_lillyonbeachphoto : "Lilly on the Beach Photo.\n\nGallery Noir's Charity Money." []
@PointClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_mercurio_journal : "Mercurio's Journal.\n\nFollowing instructions on how to proceed." []
@PointClass base(Item) studio("models/items/businesscard/Ground/businesscard.mdl")= item_g_milligans_businesscard : "Business Card.\n\nThis is a business card for 'Haunted LA'. The name on the card is Simon Milligan. The address listed is Skyline Apartments, Apt. 1, Downtown Los Angeles, CA." []
@PointClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_oh_diary : "Diary.\n\nThis is the Ocean House's charred remains of what looks like a diary." []
@PointClass base(Item) studio("models/items/skinbook/Ground/skinbook.mdl")= item_g_pisha_book : "Giovanni Book.\n\nBook - Voce de Morte by Vincetti Marcus Giovanni, Consigliare." []
@PointClass base(Item) studio("models/items/FetishStatue/ground/FetishStatue.mdl")= item_g_pisha_fetish : "Fetish Statue.\n\nYou can tell just from holding it, that there is something definitely odd and supernatural within it." []
@PointClass base(Item) studio("models/items/bloodpack/ground/bloodpack.mdl")= item_g_werewolf_bloodpack : "Werewolf Blood.\n\nBlood allegedly taken from of a werewolf." []
@PointClass base(Item) studio("models/items/webcam/Ground/webcam.mdl")= item_g_wireless_camera_1 : "Web Camera.\n\nThis is a remote web camera." []
@PointClass base(Item) studio("models/items/webcam/Ground/webcam.mdl")= item_g_wireless_camera_2 : "Web Camera.\n\nThis is a remote web camera." []
@PointClass base(Item) studio("models/items/webcam/Ground/webcam.mdl")= item_g_wireless_camera_3 : "Web Camera.\n\nThis is a remote web camera." []
@PointClass base(Item) studio("models/items/webcam/Ground/webcam.mdl")= item_g_wireless_camera_4 : "Web Camera.\n\nThis is a remote web camera." []

// keys
@PointClass base(Item) studio("models/items/sewercard/Ground/sewercard.mdl")= item_g_warrens4_passkey : "Warrens Pass Key.\n\nThis looks to be a magnetic swipe key." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_ash_cell_key : "Ash's Cell Key.\n\nKey to the locked cell." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_carson_apartment_key : "Carson's Apartment Key.\n\nYou're not sure what this key is for." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_chinese_theatre_key : "Chinese Theatre Key.\n\nKey to unlock front door of Chinese Theatre." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_clinic_cs_key : "Clinic Guard's Keys.\n\nIt's just a key, there's not much to say about it." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_clinic_maintenance_key : "Maintenance Room Key.\n\nIt's just a key, there's not much to say about it." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_clinic_stairs_key : "Clinic Stairs Key.\n\nIt's just a key, there's not much to say about it." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_edane_key : "Record Room Key.\n\nKey to the Elizabeth Dane's records room." []
@PointClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_empire_jezebel_key : "Jezebel Locke's Key.\n\nYou're not sure what this key is for." []
@PointClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_empire_mafia_key : "Empire Mafia Key.\n\nYou're not sure what this key is for." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_fu_cell_key : "Barrabus' Cell Key.\n\nKey to the locked cell." []
@PointClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_fu_office_key : "Fu Syndicate Office Key.\n\nOffice Keycard." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_gallery_noir_key : "Gallery Noir's Key.\n\nIt's just a key, there's not much to say about it." []
@PointClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_gimble_key : "Foxy Boxes' Key.\n\nIt's just a key, there's not much to say about it." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_hannahs_safe_key : "Safe Key.\n\nThis is the key to Hannah's safe." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_hitman_ji_key : "Ji Wen Ja's key.\n\nKey to Ji Wen Ja's secret stash." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_hitman_lu_key : "Lu Fang's key.\n\nKey to Lu Fang's secret stash." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_kiki_key : "Padlock Key.\n\nKey to unlock Kiki's Room." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_leopold_int_key : "Society of Leopold Interior Key.\n\nTo the Wine Cellar." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_lilly_key : "Lily's Key - looks like a car key.\n\nYou're not sure what this key is for." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_lucky_star_murder_key : "Luckee Star Room Key.\n\nProperty of Luckee Star, Hollywood." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_malcolm_office_key : "Malcolm's Office Key.\n\nIt's just a key, there's not much to say about it." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_malkavian_refrigerator_key : "Laboratory Refrigerator Key.\n\nIt's just a key, there's not much to say about it." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_murietta_key : "Spare Key.\n\nThis looks like someone's spare key." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_museum_basement_key : "Museum Basement Key.\n\nKey to the museum basement." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_museum_office_key : "Museum Office Key.\n\nKey to the museum's administrative offices." []
@PointClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_museum_storage_key : "Museum Storage Key.\n\nKey to the museum's storage area." []
@PointClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_museum_storeroom_key : "Museum Workroom Key.\n\nKey to the museum's workroom." []
@PointClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_netcafe_office_key : "Internet Cafe Key.\n\nKey to the office of the Internet Cafe." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_oceanhouse_basement_key : "Boiler Room Key." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_oceanhouse_sewer_key : "Sewer Key.\n\nThis looks like someone's spare key." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_oceanhouse_upstairs_key : "Upstairs Room Key." []
@PointClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_oh_front_key : "Ocean House Front Door Key." []
@PointClass base(Item) studio("models/scenery/furniture/Sarcophagus/Sarcophagus_KEY.mdl")= item_k_sarcophagus_key : "Sarcophagus Key.\n\nA brilliant example of ancient engineering and a significant archaeological find. But as with any key, this one is most coveted for what it grants access to." []
@PointClass base(Item) studio("models/items/orangecomputing/Ground/orangecomputing.mdl")= item_k_shrekhub_one_key : "Megahurtz Access Card.\n\nKey to Megahurtz Computing." []
@PointClass base(Item) studio("models/items/kamikazizen/Ground/kamikazizen.mdl")= item_k_shrekhub_four_key : "Kamikazi Zen Access Card.\n\nKey to the door of Kamikazi Zen." []
@PointClass base(Item) studio("models/items/metalhead/Ground/metalhead.mdl")= item_k_shrekhub_three_key : "Metalhead Access Card.\n\nKey to the door of Metalhead industries." []
@PointClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_skyline_haven_key : "Skyline Apartments, Unit 4.\n\nThis is the key to your haven downtown." []
@PointClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_tatoo_parlor_key : "Tattoo Parlor Key.\n\nYou're not sure what this key is for." []
@PointClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_tawni_apartment_key : "Tawni's Apartment Key." []
@PointClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_tutorial_chopshop_stairs_key : "Chopshop Key.\n\nKey to the stairwell at the back of the chopshop." []

// selling items
@PointClass base(Item) studio("models/items/carstereo/Ground/carstereo.mdl")= item_g_car_stereo : "Car Stereo [Item for sale].\n\nA popular model car stereo that might be worth something to someone who asks few questions about its origin." []
@PointClass base(Item) studio("models/items/Cashbox/Ground/CashBox.mdl")= item_g_cash_box : "Cash Box.\n\nGallery Noir's Charity Money." []
@PointClass base(Item) studio("models/items/ChewingGum/Ground/ChewingGum.mdl")= item_g_chewinggum : "Chewing Gum [Item for sale].\n\nGallery Noir's Charity Money." []
@PointClass base(Item) studio("models/items/ComputerBookHighGrade/Ground/ComputerBookHighGrade.mdl")= item_g_computerbookhighgrade : "Computer Book High Grade [Item for sale].\n\nGallery Noir's Charity Money." []
@PointClass base(Item) studio("models/items/ComputerBookLowGrade/Ground/ComputerBookLowGrade.mdl")= item_g_computerbooklowgrade : "Computer Book LOW Grade [Item for sale].\n\nGallery Noir's Charity Money." []
@PointClass base(Item) studio("models/items/Drugs/ground/DrugBox.mdl")= item_g_drugs_drug_box : "Drug Box [Item for sale].\n\nVivitrazac. Take one before 'relations'. Allow six to eight hours for swelling to subside." []
@PointClass base(Item) studio("models/items/Drugs/ground/MorphineBottle.mdl")= item_g_drugs_morphine_bottle : "Morphine Bottle [Item for sale].\n\nUsed to ease the suffering of sufficiently painful wounds." []
@PointClass base(Item) studio("models/items/Drugs/ground/PerscriptionBottle.mdl")= item_g_drugs_perscription_bottle : "Prescription Bottle [Item for sale].\n\nOrthotricyclin. Failure to take as prescribed could result in eighteen years of responsibility." []
@PointClass base(Item) studio("models/items/Drugs/ground/PillBottle.mdl")= item_g_drugs_pill_bottle : "Pill Bottle [Item for sale].\n\nEstrogen. Caution: Do not take if male." []
@PointClass base(Item) studio("models/items/LinedPaper/Ground/LinedPaper.mdl")= item_g_linedpaper : "Lined Paper.\n\This looks like a pad of lined paper." []
@PointClass base(Item) studio("models/items/PullToy/Ground/PullToy.mdl")= item_g_pulltoy : "PullToy [Item for sale]." []
@PointClass base(Item) studio("models/items/Rings/Ground/Ring01.mdl")= item_g_ring_gold : "Gold Ring [Item for sale].\n\nThis looks to be a class ring." []
@PointClass base(Item) studio("models/items/Rings/Ground/Ring01.mdl")= item_g_ring_serial_killer_1 : "Gold Ring [Item for sale].\n\nThis looks to be a class ring... for the SERIEL KILLAH! #1." []
@PointClass base(Item) studio("models/items/Rings/Ground/Ring01.mdl")= item_g_ring_serial_killer_2 : "Gold Ring [Item for sale].\n\nThis looks to be a class ring... for the SERIEL KILLAH! #2." []
@PointClass base(Item) studio("models/items/Rings/Ground/Ring02.mdl")= item_g_ring_silver : "Silver Ring [Item for sale].\n\nLooks like an engagement ring for a girl who's a single day's ATM limit special." []
@PointClass base(Item) studio("models/items/Rings/Ground/Ring03.mdl")= item_g_ring03 : "Fancy Ring [Item for sale].\n\nThis is a beautifully-crafted ring, seemingly slipped from the fingers of royalty." []
@PointClass base(Item) studio("models/items/Watch/Ground/Watch.mdl")= item_g_watch_fancy : "Fancy Watch [Item for sale].\n\nThe faceplate says Quantam Limited Edition. This is the kind of watch that comes with its own matching luxury vehicle." []
@PointClass base(Item) studio("models/items/Watch/Ground/Watch_02.mdl")= item_g_watch_normal : "Normal Watch [Item for sale].\n\nThis is a replica of a much nicer watch." []
@PointClass base(Item) studio("models/items/MoneyClip/Ground/MoneyClip.mdl")= item_m_money_clip : "Money Clip.\n\nA money clip with an indeterminate amount of cash." [ starting_money(integer) : "Starting Money Amount" : 100 : "Amount of money put into this clip." ]
@PointClass base(Item) studio("models/items/MoneyEnvelope/Ground/MoneyEnvelope.mdl")= item_m_money_envelope : "Money Envelope.\n\nAn envelope containing a bit of cash." [ starting_money(integer) : "Starting Money Amount" : 100 : "Amount of money put into this envelope." ]
@PointClass base(Item) studio("models/items/Wallet/Ground/Wallet.mdl")= item_m_wallet : "Wallet.\n\Not your wallet." [ starting_money(integer) : "Starting Money Amount" : 100 : "Amount of money put into this wallet." ]

// collectable items
@PointClass base(Item) studio("models/items/locket/Ground/locket.mdl")= item_g_locket : "Antique Locket.\n\This locket is old and slightly tarnished. It might be your imagination, but it seems to radiate an unnatural heat." []
@PointClass base(Item) studio("models/items/garysphoto/Ground/garysphoto.mdl")= item_g_garys_photo : "Photo.\n\nA blurry photo of what looks to be a Nosferatu." []
@PointClass base(Item) studio("models/items/cdcase/Ground/cdcase.mdl")= item_g_garys_cd : "CD-ROM.\n\nThere's an illegible handwritten label. Looks like a data CD." []
@PointClass base(Item) studio("models/items/HorrorTape_2/Ground/HorrorTape_2.mdl")= item_g_garys_film : "Film Tape.\n\nA battered film tape. Tap Hotel. Shuffle Step." []
@PointClass base(Item) studio("models/items/HorrorTape_2/Ground/HorrorTape_2.mdl")= item_g_garys_tape : "Video Tape.\n\nJock Shot's Swimsuit Shoot. 98 percent chance that someone has gone wild." []
@PointClass base(Item) studio("models/items/stake/Ground/stake.mdl")= item_g_stake : "Wooden Stake." []
@PointClass base(Item) studio("models/items/LillyOnBeachPhoto/Ground/VV_Photo.mdl")= item_g_vv_photo : "VV's Autographed Photo.\n\nI'm delivering a memento of moi to your haven, but this should tide you over for now. Love, VV." []
@PointClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_vampyr_apocrypha : "Vampyr Apocrypha.\n\nThis book is titled 'Vampyr Apocrypha'. Unidentified Sarcophagus, Discovered by Julius of Gaul, 1068 AD near Ankara, Ottoman Empire..." []
@PointClass base(Item) studio("models/items/Clipboard/Ground/Clipboard.mdl")= item_g_warr_clipboard : "Clipboard.\n\nThis looks like the clipboard of an employee of the Los Angeles Department of Water and Power, Spring 2003." []
@PointClass base(Item) studio("models/items/dayplanner/ground/dayplanner.mdl")= item_g_warr_ledger_1 : "Ledger.\n\nThis looks to be the weekly log of the Los Angeles Department of Water and Power, 1957." []
@PointClass base(Item) studio("models/items/dayplanner/ground/dayplanner2.mdl")= item_g_warr_ledger_2 : "Ledger.\n\nThis looks to be the weekly log of Douglas Streets, foreman of the Los Angeles Department of Water and Power, 1919." []

// occult items
@PointClass base(Item) studio("models/items/occult_gargoyle/ground/pendant.mdl")= item_p_gargoyle_talisman : "Rune of the Third Eye.\n\nThis strange talisman is unusually heavy, emanating a palpable power. It reduces the amount of damage done by Gargoyles." []
@PointClass base(Item) studio("models/items/occult/ground/organ.mdl")= item_p_occult_blood_buff : "Bloodstar.\n\nAll Kindred have the innate power to push their undead bodies to the height of mortal capacity, but only for a moment and at a dire cost of blood. This eldritch talisman was crafted to boost this ability. Blood Buff has twice the duration." []
@PointClass base(Item) studio("models/items/occult/ground/birdskull.mdl")= item_p_occult_dexterity : "Fae Charm.\n\nThis grim totem makes you feel light as a bird. Plus one to Dexterity." []
@PointClass base(Item) studio("models/items/occult/ground/thorn.mdl")= item_p_occult_dodge : "Weekapaug Thistle.\n\nThis petrified reed was not meant to fall into the hands of the damned, but vampires can benefit from its shamanistic magick all the same. Increases Defense by 1 point." []
@PointClass base(Item) studio("models/items/occult/ground/handle.mdl")= item_p_occult_experience : "Saulocept.\n\nAs long as you possess Saulocept you will gain an extra point of experience every time you are awarded 3 or more experience. Saulocept may or may not have other effects." []
@PointClass base(Item) studio("models/items/occult_Fang/ground/fang.mdl")= item_p_occult_frenzy : "Tarulfang.\n\nThis heavy fang could only have belonged to a ferocious predatory beast. You feel at ease knowing there's one less of those in the world. Decreases your chance to Frenzy." []
@PointClass base(Item) studio("models/weapons/lockpicks/world/w_lockpicks.mdl")= item_p_occult_hacking : "Occult Hacking.\n\nBlah blah, hacking buff." []
@PointClass base(Item) studio("models/items/occult/ground/bone.mdl")= item_p_occult_heal_rate : "Mummywrap Fetish.\n\nGazing upong this mummified fetish you feel a rush of vitality to your undead flesh. Increases passive healing rate." []
@PointClass base(Item) studio("models/weapons/lockpicks/world/w_lockpicks.mdl")= item_p_occult_lockpicking : "Occult Lockpicking.\n\nBlah blah, lockpicking buff." []
@PointClass base(Item) studio("models/items/occult/ground/ring.mdl")= item_p_occult_obfuscate : "Zharalketh.\n\nSliding on this ring you feel the same stomach-dropping sensation you had when you first invoked Obfuscate. As long as you wear Zharalketh you will be able to maintain Obfuscate longer." []
@PointClass base(Item) studio("models/items/occult/ground/amber.mdl")= item_p_occult_passive_durations : "Galdjum.\n\nHolding this rough-hewn amber stone gives you a sense of peace, and even glimmer of hope for salvation. You are able hold the effect of passive disciplines longer as long as you possess Galdjum. Their durations are increase 25 percent." []
@PointClass base(Item) studio("models/items/occult_alamut/ground/alamut.mdl")= item_p_occult_presence : "Key of Alamut.\n\nThese wands have been carried by the feared assassins of Clan Assamite for millenia. One of only a handful still in existence, this Key of Alamut gives it's owner extraordinary resilience to damage. Increases all Soak ratings by 1." []
@PointClass base(Item) studio("models/items/occult_chalice/ground/chalice.mdl")= item_p_occult_regen : "The Odious Chalice.\n\nThe perverse creation of a Tzimisce fleshcrafter, this abomination is forced to live a tortured eternity in servitude to the damned. As you kill enemies, the Chalice will fill with blood. Use the Chalice to feed from it and gain its stored vitae." []
@PointClass base(Item) studio("models/items/occult/ground/marble.mdl")= item_p_occult_strength : "Heart of Eliza.\n\nThis glassy stone appears to have a liquid core. The stone itself is milky translucent, rock solid, and unlike anything you've seen. Possession of the Heart of Eliza conveys a Melee bonus of one." []
@PointClass base(Item) studio("models/items/occult/ground/pendant.mdl")= item_p_occult_thaum_damage : "Daimonori.\n\nThis pendant is hot to the touch, a heat that seeps into your core and fills you with a new confidence. You're unsure if this power is entirely your own, but its intoxicating lure is seemingly beyond your power to resist. Increases the damage of all Thaumaturgy effects." []

// research books
@PointClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_hg_computers : "The Cowboy's Guide to Cyberspace by Case.\n\nRequires Research 9." []
@PointClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_hg_dodge : "Dodge II.\n\nA handbook from Les Assasins De Roullents, a Quebecois terrorist organization. This manual holds the secrets to dodging bullets, trains, and other projectiles. Requires Research 8." []
@PointClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_hg_firearms : "Art of the Quick-Draw by Ned Nederlander.\n\nRequires Research 10." []
@PointClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_hg_melee : "Bustin' It: Harmful If Swallowed Hint Book.\n\nThe only official strategy guide with all the hottest tricks and tips for Bustin' It... Requires Research 9." []
@PointClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_lg_computers : "Computers for Grandma.\n\nReading this will boost your computer skill. Research of at least 2 is required." []
@PointClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_lg_dodge : "Scarlet Torkelson: Circus Performer.\n\nBiography of 1930s circus performer Scarlet 'the perforated lady' Torkelson. Best known as the assistant to 'Shakey Sil' Manfretti, the notorious epileptic knife-thrower." []
@PointClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_lg_firearms : "So You Wanna' Shoot Things?.\n\nFirst, get a gun, preferably something for home defense, like an automatic rifle. Second, check to see if the gun is loaded, if not, do so... This book increases firearms skill." []
@PointClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_lg_stealth : "Peepin' - A Voyeur Field Guide.\n\nEvery good voyeur needs to develop a sneaking game... This book ups your stealth skill." []
@PointClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_mg_brawl : "Brawling Manual.\n\nNo Means No: A Woman's Guide to Self Defense on the College Campus." []
@PointClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_mg_finance : "Finance Manual.\n\nABC - Always Be Closing: Mitch & Murray's Leads to the California Real Estate Market." []
@PointClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_mg_melee : "Kendo for Advanced Students.\n\nIf you have gained the insight, willpower, and form from your first two years of Kendo, you are now ready for the secrets of the kendo masters... This book ups your melee skill." []
@PointClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_mg_security : "Security Manual.\n\nSobchak's Guide to Personal and Home Security." []

// other items
@PointClass base(Item) = item_i_written : "Written [not tested]." []
@PointClass base(Item) = item_s_physicshand : "Physics Hand [not tested]." []

// weapons
@PointClass base(Item) studio("models/weapons/baseball_bat/ground/g_baseball_bat.mdl")= item_w_baseball_bat : "Baseball Bat.\n\nOnce, the signature crack of this equipment conjured images of America's pastime, it has evolved into the brutal chorus of a thugsong." []
@PointClass base(Item) studio("models/weapons/baton/ground/g_baton.mdl")= item_w_baton : "Police Baton." []
@PointClass base(Item) studio("models/weapons/bushhook/world/g_bushhook.mdl")= item_w_bush_hook : "Bush Hook.\n\nPrimarily used by gardeners, when used for intents other than its original purpose, the results are frequently gory." []
@PointClass base(Item) studio("models/weapons/anaconda/ground/g_anaconda.mdl")= item_w_colt_anaconda : "Colt Anaconda.\n\nA .44 magnum revolver. Feelin' lucky punk? A large caliber monster with the power to stop almost anyone dead in his tracks. Alternate Fire Mode: Fan." []
@PointClass base(Item) studio("models/weapons/crossbow/ground/g_crossbow.mdl")= item_w_crossbow : "Crossbow.\n\nA modern variant of an ancient Chinese weapon. Fires silently, but has to be cocked before each shot." []
@PointClass base(Item) studio("models/weapons/crossbow/ground/g_crossbow.mdl")= item_w_crossbow_flaming : "Flaming Crossbow.\n\nA modern variant of an ancient Chinese weapon. Fires silently, but has to be cocked before each shot." []
@PointClass base(Item) studio("models/weapons/desert_eagle/ground/g_desert_eagle.mdl")= item_w_deserteagle : "McLusky .50 Caliber.\n\nThe McLusky is one of the few gas-operated handguns ever produced, and one of the most powerful and heavy pistols available on the market." []
@PointClass base(Item) studio("models/weapons/fire_axe/ground/g_fire_axe.mdl")= item_w_fireaxe : "Fire Axe.\n\nTruly, a tool for madmen. Who else would attack fire with a blade?" []
@PointClass base(Item) studio("models/weapons/flamethrower/ground/g_flamethrower_r.mdl")= item_w_flamethrower : "Flamethrower.\n\nFlamethrowers,in one form or another, have been used since ancient times. It propels burning fuel in a several foot arc, scorching everything in its path." []
@PointClass base(Item) studio("models/weapons/pistol_glock/ground/g_pistol_glock.mdl")= item_w_glock_17c : "Brokk 17c.\n\nA 9mm standard pistol with a polymer grip and guide rod (instead of metal) that makes it lighter than other pistols. It can be found in use by most law enforcement agencies..." []
@PointClass base(Item) studio("models/weapons/grenade/pineapple/ground/g_pineapple.mdl")= item_w_grenade_frag : "Fragmentation Grenade.\n\nPull pin for fun and profit." []
@PointClass base(Item) studio("models/weapons/m37/world/w_m37.mdl")= item_w_ithaca_m_37 : "Utica M37.\n\nThe 12 gauge M37 is designed for close quarters use as a home defense weapon. Tried and true service for military and law enforcement, the m37 features all metal parts and a bottom feed and ejector for both rights and lefties. It has moderate recoil and is fairly light for ease of use." []
@PointClass base(Item) studio("models/weapons/katana/world/g_katana.mdl")= item_w_katana : "Katana.\n\nA light, slightly curved traditional Japanese sword designed for quick slashing attacks. To Kindred, a competent swordsman is far more dangerous than a sharpshooter." []
@PointClass base(Item) studio("models/weapons/knife/world/g_knife.mdl")= item_w_knife : "Knife.\n\nSome knives, throughout their entire existence, are never used for any malicious purpose. This ain't one of them." []
@PointClass base(Item) studio("models/weapons/submachine_mac10/ground/g_submachine_mac10.mdl")= item_w_mac_10 : "Braddock 9mm.\n\nA small, light machine pistol that fires a 9mm pistol round, not made for accuracy as much as to deliver the largest amount of ordinance in the shortest period of time..." []
@PointClass base(Item) studio("models/items/occult_katana/ground/katana.mdl")= item_w_occultblade : "Tal'mahe'Ra Blade.\n\nThis sword was forged by the Tal'mahe'Ra, a vanished sect of Kindred that purportedly ventured into the lands of the dead. It seems unaturally light and attacks twice as fast as a normal blade." []
@PointClass base(Item) studio("models/weapons/rifle_rem700/ground/g_rifle_rem700.mdl")= item_w_remington_m_700 : "'Jaime Sue'.\n\nThis is a standard rifle for sport hunting. It features a zoom mode for killing made easy." []
@PointClass base(Item) studio("models/weapons/severed_arm/ground/g_severed_arm.mdl")= item_w_severed_arm : "A severed arm.\n\nAlthough the previous owner probably misses it, you can still put it to good use." []
@PointClass base(Item) studio("models/weapons/katana/world/g_katana.mdl")= item_w_sheriff_sword : "Sheriff Sword [Unused weapon].\n\nYou shouldn't have this!" []
@PointClass base(Item) studio("models/weapons/sledgehammer/ground/g_sledgehammer.mdl")= item_w_sledgehammer : "Sledgehammer.\n\nA heavy hammer ostensibly used for construction. Great for getting that song out of someone's head, as well as anything else inside." []
@PointClass base(Item) studio("models/weapons/rifle_steyraug/ground/g_rifle_steyraug_r.mdl")= item_w_steyr_aug : "Steyr Aug.\n\nEven if the Steyr Aug was lackluster as a weapon, it would still have a lot going for it aesthetically, but this lightweight Austrian sub-machine gun has proved reliable and effective, making it a popular weapon in militaries around the world..." []
@PointClass base(Item) studio("models/weapons/supershotgun/ground/g_supershotgun.mdl")= item_w_supershotgun : "Jaegerspas XV.\n\nThe Jaegerspas automatic shotgun looks and fires more like an assault rifle than a traditional shotgun. It delivers bursts of deadly shot at a devastating pace. The Jaegerspas has both semi-automatic and pump action functionality." []
@PointClass base(Item) studio("models/weapons/ThirtyEight/ground/g_ThirtyEight.mdl")= item_w_thirtyeight : "Thirtyeight.\n\nThis is a cheap, small-caliber handgun used by start-up hoods in alleys across the country. Also known as a purse gun." []
@PointClass base(Item) studio("models/weapons/throwing_star/ground/g_throwing_star.mdl")= item_w_throwing_star : "Throwing Star.\n\nWhen you wish upon a throwing star, you wish you had infomodel, wieldmodels and a projectile model so you could finish implemented the damn thing." []
@PointClass base(Item) studio("models/weapons/tireiron/world/g_tireiron.mdl")= item_w_tire_iron : "Tire Iron.\n\nHeavy, metal, blunt. Could be used for fixing a flat, sure." []
@PointClass base(Item) studio("models/weapons/torch/ground/g_torch.mdl")= item_w_torch : "Torch.\n\nFor when you want to get medieval on someone's ass." []
@PointClass base(Item) studio("models/weapons/submachine_uzi/ground/g_uzi.mdl")= item_w_uzi : "Lassiter Killmatic.\n\nThe Lassiter Killmatic was developed to be a reliable and compact gun, robust enough to take a lot of punishment, and accurate enough to dish it out in a hurry... Limited recoil and climb make one-handed firing feasible." []

// unused weapons
@PointClass base(Item) = item_w_chang_blade : "Chang Brothers Blade [Unused weapon].\n\nBlade used by Chang Brother's Boss." []
@PointClass base(Item) = item_w_chang_claw : "Chang Brothers Claws [Unused weapon].\n\nClaw used by Chang Brother's Boss." []
@PointClass base(Item) = item_w_claws : "Claws [Unused weapon]." []
@PointClass base(Item) = item_w_claws_ghoul : "Ghoul Claws [Unused weapon]." []
@PointClass base(Item) = item_w_claws_protean4 : "Claws [Unused weapon].\n\nProtean 4." []
@PointClass base(Item) = item_w_claws_protean5 : "Claws [Unused weapon].\n\nProtean 5." []
@PointClass base(Item) = item_w_gargoyle_fist : "Gargoyle Melee [Unused weapon]." []
@PointClass base(Item) = item_w_hengeyokai_fist : "Hengeyokai Fists [Unused weapon]." []
@PointClass base(Item) = item_w_manbat_claw : "ManBat Melee [Unused weapon]." []
@PointClass base(Item) = item_w_mingxiao_melee : "Ming Xiao Melee [Unused weapon]." []
@PointClass base(Item) = item_w_mingxiao_spit : "Ming Xiao's Spit [Unused weapon]." []
@PointClass base(Item) = item_w_mingxiao_tentacle : "Ming Xiao Tentacles [Unused weapon]." []
@PointClass base(Item) = item_w_sabbatleader_attack : "Sabbat Leader Attack [Unused weapon]." []
@PointClass base(Item) = item_w_tzimisce_melee : "Tzimisce Melee [Unused weapon]." []
@PointClass base(Item) = item_w_tzimisce2_claw : "Tzimisce 2 Claw [Unused weapon]." []
@PointClass base(Item) = item_w_tzimisce2_head : "Tzimisce 2 Head [Unused weapon]." []
@PointClass base(Item) = item_w_tzimisce3_claw : "Tzimisce 3 Claw [Unused weapon]." []
@PointClass base(Item) = item_w_unarmed : "Unarmed [Unused].\n\nNo weapon readied." []
@PointClass base(Item) = item_w_werewolf_attacks : "Werewolf Attack [Unused weapon]." []
@PointClass base(Item) = item_w_wolf_head : "Wolf Head [Unused weapon]." []

//@PointClass base(Item) = weapon_physcannon : "HL2 Physcannon [not used directly]." []
//@PointClass base(Item) = weapon_physgun : "HL2 Physgun [not used directly]." []
//@PointClass base(Item) studio("models/weapons/pistol/world/w_pistol.mdl")= weapon_pistol : "HL2 Pistol [Unused]." []

@PointClass base(Item) studio("models/weapons/katana/world/g_katana.mdl")= item_w_avamp_blade : "Asian Vampire Blade [Unused weapon].\n\nBlade used by Asian Vampire Boss." []
@PointClass base(Item) studio("models/scenery/misc/changball/changball.mdl")= item_w_chang_energy_ball : "Fragmentation Grenade [Unused weapon].\n\nPull pin for fun and profit." []
@PointClass base(Item) studio("models/scenery/misc/gio_spirit/gio_spirit.mdl")= item_w_chang_ghost : "Chang Ghost Projectile [Unused weapon].\n\nSpawned when a coffin is broken open." []
@PointClass base(Item) studio("models/weapons/fists/info/i_fists.mdl")= item_w_fists : "Fists (Unarmed).\n\nNo weapon readied." []
@PointClass base(Item) studio("models/weapons/rifle_rem700/ground/g_rifle_rem700_bach.mdl")= item_w_rem_m_700_bach : "Bach's 700P Rifle [Unused weapon].\n\nThis is a standard tactical rifle most commonly employed by SWAT teams.  It features a 20X Scope to pick off beads of sweat off the target's forehead." []
@PointClass base(Item) studio("models/weapons/fists/info/i_fists.mdl")= item_w_zombie_fists : "Zombie fists [Unused weapon]." []








































//*******************************************************************************************************************
//*******************************************************************************************************************
//
// SOUND
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// ambient_location [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname) iconsprite("editor/info_target.vmt") sphere() = ambient_location : 
	"[VTMB] A point entity that uses as location of ambient sound (untested - 'info_target'-like?)."
[
	radius(integer) : "Audible Radius" : 600 : "Maximum distance at which this sound is audible."
	groupid(integer) : "Group ID" : 1 : "Maximum distance at which this sound is audible."
]




//===================================================================================================================
// ambient_soundscheme [VTMB-specific, soundscape-based]
//===================================================================================================================

@PointClass base(Targetname,VEnableDisable) iconsprite("editor/env_soundscape.vmt") = ambient_soundscheme : 
	"[VTMB] An 'env_soundscape'-analogue entity to control sound in an area. The active soundscheme at any time is the last one that had line-of-sight to the player, and was within the radius."
[
	scheme_file(choices) : "SoundScheme File" : "sm_hub_streets" : "The name of the SoundScheme to use. Corresponds to an entry in the sound/schemes/*.txt file.\n\nIf you are using a custom scheme file (not presented in list) - please, use the full moddir-relative paths, like 'sound/Schemes/MyScheme.txt'." =
	[
		"sound/schemes/609.txt" : "609" 
		"sound/schemes/alley.txt" : "alley" 
		"sound/schemes/asphole_sounds.txt" : "asphole_sounds" 
		"sound/schemes/beachhouse.txt" : "beachhouse" 
		"sound/schemes/beachhouse_dennis_talk_temp.txt" : "beachhouse_dennis_talk_temp" 
		"sound/schemes/ch_hub_1.txt" : "ch_hub_1" 
		"sound/schemes/ch_temple_4.txt" : "ch_temple_4" 
		"sound/schemes/ch_zhaos_1.txt" : "ch_zhaos_1" 
		"sound/schemes/cops_outside.txt" : "cops_outside" 
		"sound/schemes/c_theater1.txt" : "c_theater1" 
		"sound/schemes/c_theater2.txt" : "c_theater2" 
		"sound/schemes/elizabethdane_exterior.txt" : "elizabethdane_exterior" 
		"sound/schemes/elizabethdane_interior.txt" : "elizabethdane_interior" 
		"sound/schemes/epicdemo.txt" : "epicdemo" 
		"sound/schemes/glaze.txt" : "glaze" 
		"sound/schemes/glaze2.txt" : "glaze2" 
		"sound/schemes/gp_giovanni_1.txt" : "gp_giovanni_1" 
		"sound/schemes/gp_giovanni_2.txt" : "gp_giovanni_2" 
		"sound/schemes/gp_giovanni_2a.txt" : "gp_giovanni_2a" 
		"sound/schemes/gp_giovanni_2b.txt" : "gp_giovanni_2b" 
		"sound/schemes/gp_giovanni_3.txt" : "gp_giovanni_3" 
		"sound/schemes/gp_giovanni_4.txt" : "gp_giovanni_4" 
		"sound/schemes/gp_giovanni_5.txt" : "gp_giovanni_5" 
		"sound/schemes/hollow_interior.txt" : "hollow_interior" 
		"sound/schemes/hollywood_main.txt" : "hollywood_main" 
		"sound/schemes/hw_609_1_exterior.txt" : "hw_609_1_exterior" 
		"sound/schemes/hw_609_1_interior.txt" : "hw_609_1_interior" 
		"sound/schemes/hw_ash_sewer_1.txt" : "hw_ash_sewer_1" 
		"sound/schemes/hw_ash_sewer_2.txt" : "hw_ash_sewer_2" 
		"sound/schemes/hw_ash_sewer_3.txt" : "hw_ash_sewer_3" 
		"sound/schemes/hw_asphole_1.txt" : "hw_asphole_1" 
		"sound/schemes/hw_cemetery.txt" : "hw_cemetery" 
		"sound/schemes/hw_chinese_1_boss.txt" : "hw_chinese_1_boss" 
		"sound/schemes/hw_chinese_1_int.txt" : "hw_chinese_1_int" 
		"sound/schemes/hw_chinese_1_post.txt" : "hw_chinese_1_post" 
		"sound/schemes/hw_jewelry_1.txt" : "hw_jewelry_1" 
		"sound/schemes/hw_luckystar_1.txt" : "hw_luckystar_1" 
		"sound/schemes/hw_luckystar_1_exterior.txt" : "hw_luckystar_1_exterior" 
		"sound/schemes/hw_metalhead_1.txt" : "hw_metalhead_1" 
		"sound/schemes/hw_sewer_1.txt" : "hw_sewer_1" 
		"sound/schemes/hw_warrens4_base.txt" : "hw_warrens4_base" 
		"sound/schemes/hw_warrens_1.txt" : "hw_warrens_1" 
		"sound/schemes/hw_warrens_2.txt" : "hw_warrens_2" 
		"sound/schemes/hw_warrens_3.txt" : "hw_warrens_3" 
		"sound/schemes/hw_warrens_4.txt" : "hw_warrens_4" 
		"sound/schemes/hw_warrens_5.txt" : "hw_warrens_5" 
		"sound/schemes/hw_warrens_base.txt" : "hw_warrens_base" 
		"sound/schemes/hw_warrens_quiet.txt" : "hw_warrens_quiet" 
		"sound/schemes/la_abandoned_building_1.txt" : "la_abandoned_building_1" 
		"sound/schemes/la_bradbury_2.txt" : "la_bradbury_2" 
		"sound/schemes/la_bradbury_3.txt" : "la_bradbury_3" 
		"sound/schemes/la_bradbury_3_boss.txt" : "la_bradbury_3_boss" 
		"sound/schemes/la_chantry_1.txt" : "la_chantry_1" 
		"sound/schemes/la_confession_1.txt" : "la_confession_1" 
		"sound/schemes/la_crackhouse_1.txt" : "la_crackhouse_1" 
		"sound/schemes/la_empire_1.txt" : "la_empire_1" 
		"sound/schemes/la_empire_2.txt" : "la_empire_2" 
		"sound/schemes/la_expipe_1.txt" : "la_expipe_1" 
		"sound/schemes/la_hospital_1.txt" : "la_hospital_1" 
		"sound/schemes/la_hub_1.txt" : "la_hub_1" 
		"sound/schemes/la_malkavian_1.txt" : "la_malkavian_1" 
		"sound/schemes/la_malkavian_2.txt" : "la_malkavian_2" 
		"sound/schemes/la_malkavian_2_outside.txt" : "la_malkavian_2_outside" 
		"sound/schemes/la_malkavian_3.txt" : "la_malkavian_3" 
		"sound/schemes/la_malkavian_4.txt" : "la_malkavian_4" 
		"sound/schemes/la_malkavian_4_fire.txt" : "la_malkavian_4_fire" 
		"sound/schemes/la_malkavian_5.txt" : "la_malkavian_5" 
		"sound/schemes/la_museum_1.txt" : "la_museum_1" 
		"sound/schemes/la_plaguebearer_sewer.txt" : "la_plaguebearer_sewer" 
		"sound/schemes/la_plaguebearer_sewer_2.txt" : "la_plaguebearer_sewer_2" 
		"sound/schemes/la_plaguebearer_sewer_base.txt" : "la_plaguebearer_sewer_base" 
		"sound/schemes/la_sewer_1.txt" : "la_sewer_1" 
		"sound/schemes/la_skyline_1.txt" : "la_skyline_1" 
		"sound/schemes/la_ventruelobby_1.txt" : "la_ventruelobby_1" 
		"sound/schemes/la_ventrue_1_chambers.txt" : "la_ventrue_1_chambers" 
		"sound/schemes/la_ventrue_2.txt" : "la_ventrue_2" 
		"sound/schemes/la_ventrue_3.txt" : "la_ventrue_3" 
		"sound/schemes/la_ventrue_3_roof.txt" : "la_ventrue_3_roof" 
		"sound/schemes/la_ventrue_credits.txt" : "la_ventrue_credits" 
		"sound/schemes/la_ventrue_credits2.txt" : "la_ventrue_credits2" 
		"sound/schemes/la_ventrue_gauntlet_1.txt" : "la_ventrue_gauntlet_1" 
		"sound/schemes/la_ventrue_gauntlet_roof_1.txt" : "la_ventrue_gauntlet_roof_1" 
		"sound/schemes/lotusblossom.txt" : "lotusblossom" 
		"sound/schemes/netcafe.txt" : "netcafe" 
		"sound/schemes/netcafe_tape.txt" : "netcafe_tape" 
		"sound/schemes/oceanhouse_basement.txt" : "oceanhouse_basement" 
		"sound/schemes/oceanhouse_exterior.txt" : "oceanhouse_exterior" 
		"sound/schemes/oceanhouse_interior.txt" : "oceanhouse_interior" 
		"sound/schemes/oceanhouse_interior_floor3.txt" : "oceanhouse_interior_floor3" 
		"sound/schemes/old_abandoned_building.txt" : "old_abandoned_building" 
		"sound/schemes/parkinggarage.txt" : "parkinggarage" 
		"sound/schemes/quiet_outdoor.txt" : "quiet_outdoor" 
		"sound/schemes/sewers.txt" : "sewers" 
		"sound/schemes/sewers_2.txt" : "sewers_2" 
		"sound/schemes/sewers_base.txt" : "sewers_base" 
		"sound/schemes/sewers_no_music_base.txt" : "sewers_no_music_base" 
		"sound/schemes/sm_apartments_1.txt" : "sm_apartments_1" 
		"sound/schemes/sm_apartment_interior.txt" : "sm_apartment_interior" 
		"sound/schemes/sm_asylum_main_hall.txt" : "sm_asylum_main_hall" 
		"sound/schemes/sm_asylum_office.txt" : "sm_asylum_office" 
		"sound/schemes/sm_bailbonds.txt" : "sm_bailbonds" 
		"sound/schemes/sm_basement_1.txt" : "sm_basement_1" 
		"sound/schemes/sm_diner_1.txt" : "sm_diner_1" 
		"sound/schemes/sm_gallery_1.txt" : "sm_gallery_1" 
		"sound/schemes/sm_hub_parking_garage.txt" : "sm_hub_parking_garage" 
		"sound/schemes/sm_hub_streets.txt" : "sm_hub_streets" 
		"sound/schemes/sm_hub_tunnel_pier.txt" : "sm_hub_tunnel_pier" 
		"sound/schemes/sm_junkyard_1.txt" : "sm_junkyard_1" 
		"sound/schemes/sm_junkyard_1_int.txt" : "sm_junkyard_1_int" 
		"sound/schemes/sm_medical_1.txt" : "sm_medical_1" 
		"sound/schemes/sm_pier_1.txt" : "sm_pier_1" 
		"sound/schemes/sm_sewers_1.txt" : "sm_sewers_1" 
		"sound/schemes/sm_shreknet_1.txt" : "sm_shreknet_1" 
		"sound/schemes/sm_streets.txt" : "sm_streets" 
		"sound/schemes/sm_tatoo.txt" : "sm_tatoo" 
		"sound/schemes/sm_tatoo_basement.txt" : "sm_tatoo_basement" 
		"sound/schemes/sm_tripspawnshop.txt" : "sm_tripspawnshop" 
		"sound/schemes/sm_warehouse_interior.txt" : "sm_warehouse_interior" 
		"sound/schemes/sm_warehouse_trainstation.txt" : "sm_warehouse_trainstation" 
		"sound/schemes/soc_cave.txt" : "soc_cave" 
		"sound/schemes/soc_ext.txt" : "soc_ext" 
		"sound/schemes/soc_int.txt" : "soc_int" 
		"sound/schemes/sp_giovanni_1.txt" : "sp_giovanni_1" 
		"sound/schemes/sp_giovanni_2a.txt" : "sp_giovanni_2a" 
		"sound/schemes/sp_giovanni_4.txt" : "sp_giovanni_4" 
		"sound/schemes/sp_giovanni_5.txt" : "sp_giovanni_5" 
		"sound/schemes/sp_observatory_1.txt" : "sp_observatory_1" 
		"sound/schemes/sp_observatory_2.txt" : "sp_observatory_2" 
		"sound/schemes/sp_soc_1.txt" : "sp_soc_1" 
		"sound/schemes/sp_soc_2.txt" : "sp_soc_2" 
		"sound/schemes/sp_soc_3.txt" : "sp_soc_3" 
		"sound/schemes/sp_soc_4 cave in.txt" : "sp_soc_4 cave in" 
		"sound/schemes/sp_soc_4.txt" : "sp_soc_4" 
		"sound/schemes/sp_taxi.txt" : "sp_taxi" 
		"sound/schemes/sp_tutorial_city.txt" : "sp_tutorial_city" 
		"sound/schemes/sp_tutorial_sabbat_alley.txt" : "sp_tutorial_sabbat_alley" 
		"sound/schemes/sp_tutorial_sabbat_chop.txt" : "sp_tutorial_sabbat_chop" 
		"sound/schemes/sp_tutorial_sabbat_near.txt" : "sp_tutorial_sabbat_near" 
		"sound/schemes/sp_tutorial_underground.txt" : "sp_tutorial_underground" 
		"sound/schemes/temple_1.txt" : "temple_1" 
		"sound/schemes/temple_2.txt" : "temple_2" 
		"sound/schemes/temple_3.txt" : "temple_3" 
		"sound/schemes/test1.txt" : "test1" 
		"sound/schemes/test2.txt" : "test2" 
		"sound/schemes/tutorial.txt" : "tutorial" 
		"sound/schemes/vesuvius.txt" : "vesuvius" 
		"sound/schemes/zhaos_interior.txt" : "zhaos_interior" 
	]
	spawnflags(flags) =
	[
		1  : "1 (not tested)" : 0
	]

	// Inputs
	input FadeIn(integer) : "Fades the sound up to full volume over a specified number of seconds, with a range from 0 to 100 seconds."
	input FadeOut(integer) : "Fades the sound to silence over a specified number of seconds, with a range from 0 to 100 seconds."

	// Outputs
	output OnPlay(void) : "Fired when this soundscheme becomes the active one."
]






































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// BUTTONS
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// prop_button [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname,Parentname,Studiomodel,VButton,RenderFields) studioprop() = prop_button : 
	"[VTMB] A point entity that's used for a player-useable button. When used by the player, it moves to a pressed position."
[
	model(studio) : "Model" : : "Button model."
	locked(choices) : "Start Locked" : 0 : "Spawn in locked state." =
	[
		0 : "No"
		1 : "Yes"
	]
	current_state(choices) : "Current State" : 0 : "Current button state (not tested)." =
	[
		0 : "State #0 (unknown)"
		1 : "State #1 (unknown)"
		2 : "State #2 (unknown)"
		3 : "State #3 (unknown)"
		4 : "State #4 (unknown)"
		5 : "State #5 (unknown)"
		6 : "State #6 (unknown)"
		7 : "State #7 (unknown)"
		8 : "State #8 (unknown)"
	]
	max_states(choices) : "Max State" : 0 : "Max state count (not tested)." =
	[
		0 : "0 (unknown)"
		1 : "1 (unknown)"
		2 : "2 (unknown)"
		3 : "3 (unknown)"
		4 : "4 (unknown)"
		5 : "5 (unknown)"
		6 : "6 (unknown)"
		7 : "7 (unknown)"
		8 : "8 (unknown)"
	]
	health(integer) : "Button Health [-?]" : 0 : "Button strength [-?]. 0 means don't break."
	
	// inputs
	input ToggleLock(void) : "Toggles button state between locked and unlocked."
	input SetState(integer) : "Sets button state."
	
	// outputs
	output OnPressedLocked(void) : "Fired when button pressed but has locked state."
	output OnSetState1(void) : "Fired when button goes to selected state."
	output OnSetState2(void) : "Fired when button goes to selected state."
	output OnSetState3(void) : "Fired when button goes to selected state."
	output OnSetState4(void) : "Fired when button goes to selected state."
	output OnSetState5(void) : "Fired when button goes to selected state."
	output OnSetState6(void) : "Fired when button goes to selected state."
	output OnSetState7(void) : "Fired when button goes to selected state."
	output OnSetState8(void) : "Fired when button goes to selected state."
]







































//*******************************************************************************************************************
//*******************************************************************************************************************
//
// AI Spcript Entities
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//====================================================================================================================
// aiscripted_sequence [VTMB-specific, scripted_sequence based]
//====================================================================================================================

@PointClass base(VAiScripted) studio("models/editor/scriptedsequence.mdl") sphere(m_flRadius) = aiscripted_sequence :
	"[VTMB] Grabs an NPC and makes them play a specified set of animations. The NPC can be told to move to the scripted sequence position or can be told to play the script wherever they currently are."+
	"Multiple scripted sequences of the same name will frame-synchronize in the action animation once all the actors have moved to position."+
	"This allows tight interaction between actors (one actor grabbing another, hitting them, etc.) The flow is as follows:\n\n"+
	"1) Move to position using the specified movement animation. If 'Move to Position' is set to NONE, skip to step 2.\n"+
	"2) If forced to wait for another actor to move to position, play the pre-action idle animation, otherwise skip to step 3. If there is no pre-action idle specified, ACT_IDLE is used.\n"+
	"3) Fire the OnBeginSequence output.\n"+
	"4) Play the action animation. If no action animation is specified, skip to step 5.\n"+
	"5) Play the post-action idle animation. If none is specified, skip to step 6. If the 'Loop in Post Idle' spawnflag is set, keep playing the post-action idle until the script is cancelled. If no post-action idle animation is specified, ACT_IDLE is used.\n"+
	"6) Fire the OnEndSequence output.\n"+
	"7) If a next script to play is specified, hand the NPC to the next script and repeat this process for that script.\n\n"+
	"The MoveToPosition input runs steps 1 and 2, then waits while playing the pre-action idle animation until the BeginSequence input is received.\n\n"+
	"If the sequence has motion extraction in it, set the 'Don't Teleport NPC On End' spawnflag."
[
	spawnflags(Flags) = 
	[
		4 : "Repeatable" : 0
		8 : "Leave Corpse" : 0
		16 : "Start on Spawn" : 0
		32: "No Interruptions" : 0
		64: "Override AI" : 0
		128: "Don't Teleport NPC On End" : 0
		256: "Loop in Post Idle" : 0
		512: "Priority Script" : 0
		4096: "Allow actor death" : 0
	]

// vtmb ----
	m_iFinishSchedule(integer) : "Finish Schedule [-?]" : 0 : "[VTMB] Unknown yet..."
]







































//*******************************************************************************************************************
//*******************************************************************************************************************
//
// CAMERA Entities
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//====================================================================================================================
// CLASS: VCamKeyframe [VTMB-specific]
//====================================================================================================================

@BaseClass base(Targetname,KeyFrame,Mover) = VCamKeyframe
[
	MoveTime(float) : "Move Time (seconds)" : 1 : "[VTMB] Unknown yet..."
	FocalLength(float) : "Focal Length [-?]" : "28.2" : "[VTMB] Unknown yet..."
	Corner(choices) : "Camera Moving Corner [-?]" : 1 : "[VTMB] Unknown yet..." =
	[
		0 : "0 [unknown yet]"
		1 : "1 [unknown yet]"
	]
	Pause(float) : "Moving Pause (secs - ?)" : 2 : "[VTMB] Unknown yet..."
	RateIn(float) : "In Rate [-?]" : 1 : "[VTMB] Unknown yet..."
	RateOut(float) : "Out Rate [-?]" : 1 : "[VTMB] Unknown yet..."
	Roll(float) : "Roll Speed": 0 : "[VTMB] Amount of roll in degrees per second."
	TimeControl(choices) : "Time Modifier [-?]" : 0 : "[VTMB] Unknown yet..." =
	[
		0 : "Linear [-?]"
		1 : "Accel [-?]"
		2 : "Deaccel [-?]"
	]

	// Outputs
	output OnReachedKeyframe(void) : "[VTMB] Fired when keyframe reached."
	output OnLeavingKeyframe(void) : "[VTMB] Fired when keyframe leaving."
]





//===================================================================================================================
// camera_cinematic [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname,VMovingConnects) studioprop("models/editor/camera.mdl") = camera_cinematic :
	"[VTMB] A cinematic camera entity that controls the player's view. While it's active, the player will see out of the camera."
[
	shotname(choices) : "Camera Shot File" : "vdata/CameraShots/center.txt" : "The name of the CameraShot preset to use. Corresponds to an entry in the vdata/camerashots/*.txt file.\n\nIf you are using the custom shot file (not included at this list) - please, use add ful moddir-relative path, e.g. 'vdata/camerashots/MyCameraShot.txt'." =
	[
		"vdata/CameraShots/andreibasement.txt" : "andreibasement"
		"vdata/CameraShots/bach.txt" : "bach"
		"vdata/CameraShots/bertram.txt" : "bertram"
		"vdata/CameraShots/cabbie.txt" : "cabbie"
		"vdata/CameraShots/cabbiesewer.txt" : "cabbiesewer"
		"vdata/CameraShots/cal.txt" : "cal"
		"vdata/CameraShots/camera shots how-to.txt" : "camera shots how-to"
		"vdata/CameraShots/center.txt" : "center"
		"vdata/CameraShots/centerfullview.txt" : "centerfullview"
		"vdata/CameraShots/chunk.txt" : "chunk"
		"vdata/CameraShots/chunk2.txt" : "chunk2"
		"vdata/CameraShots/dialogdefault.txt" : "dialogdefault"
		"vdata/CameraShots/dialogdefaultfastmove.txt" : "dialogdefaultfastmove"
		"vdata/CameraShots/dialogdefaultwoman.txt" : "dialogdefaultwoman"
		"vdata/CameraShots/dialoglowcenter.txt" : "dialoglowcenter"
		"vdata/CameraShots/dialoglowleft.txt" : "dialoglowleft"
		"vdata/CameraShots/dialoglowright.txt" : "dialoglowright"
		"vdata/CameraShots/dialogmediumshot.txt" : "dialogmediumshot"
		"vdata/CameraShots/dialogoverplayerleftshoulder.txt" : "dialogoverplayerleftshoulder"
		"vdata/CameraShots/dynamic1.txt" : "dynamic1"
		"vdata/CameraShots/dynamic2.txt" : "dynamic2"
		"vdata/CameraShots/dynamic3.txt" : "dynamic3"
		"vdata/CameraShots/dynamic4.txt" : "dynamic4"
		"vdata/CameraShots/dynamic5.txt" : "dynamic5"
		"vdata/CameraShots/dynamic6.txt" : "dynamic6"
		"vdata/CameraShots/dynamic7.txt" : "dynamic7"
		"vdata/CameraShots/dynamic8.txt" : "dynamic8"
		"vdata/CameraShots/dynamic9.txt" : "dynamic9"
		"vdata/CameraShots/funcmonitor.txt" : "funcmonitor"
		"vdata/CameraShots/gargoyle.txt" : "gargoyle"
		"vdata/CameraShots/gary.txt" : "gary"
		"vdata/CameraShots/gary_moves.txt" : "gary_moves"
		"vdata/CameraShots/hackcam.txt" : "hackcam"
		"vdata/CameraShots/imalia.txt" : "imalia"
		"vdata/CameraShots/jack.txt" : "jack"
		"vdata/CameraShots/jeanette.txt" : "jeanette"
		"vdata/CameraShots/johnny.txt" : "johnny"
		"vdata/CameraShots/kilpatrick.txt" : "kilpatrick"
		"vdata/CameraShots/larry.txt" : "larry"
		"vdata/CameraShots/longapproachcloseup.txt" : "longapproachcloseup"
		"vdata/CameraShots/lookattarget.txt" : "lookattarget"
		"vdata/CameraShots/lookattargethead_snap.txt" : "lookattargethead_snap"
		"vdata/CameraShots/lookattarget_b.txt" : "lookattarget_b"
		"vdata/CameraShots/lookattarget_snap.txt" : "lookattarget_snap"
		"vdata/CameraShots/lowcenter.txt" : "lowcenter"
		"vdata/CameraShots/lu.txt" : "lu"
		"vdata/CameraShots/mediumshot.txt" : "mediumshot"
		"vdata/CameraShots/mercurio.txt" : "mercurio"
		"vdata/CameraShots/mitnick.txt" : "mitnick"
		"vdata/CameraShots/nineswounded.txt" : "nineswounded"
		"vdata/CameraShots/npcfollow.txt" : "npcfollow"
		"vdata/CameraShots/npcfollowcut.txt" : "npcfollowcut"
		"vdata/CameraShots/npcfollowfromplayer.txt" : "npcfollowfromplayer"
		"vdata/CameraShots/npcfollowmove.txt" : "npcfollowmove"
		"vdata/CameraShots/playercontrollertest.txt" : "playercontrollertest"
		"vdata/CameraShots/princesitting.txt" : "princesitting"
		"vdata/CameraShots/prince_beat.txt" : "prince_beat"
		"vdata/CameraShots/special-case.txt" : "special-case"
		"vdata/CameraShots/stealth_kill.txt" : "stealth_kill"
		"vdata/CameraShots/therese.txt" : "therese"
		"vdata/CameraShots/tjeanette.txt" : "tjeanette"
		"vdata/CameraShots/tong.txt" : "tong"
		"vdata/CameraShots/tourette.txt" : "tourette"
		"vdata/CameraShots/ttherese.txt" : "ttherese"
		"vdata/CameraShots/venus.txt" : "venus"
		"vdata/CameraShots/zhaofarhigh.txt" : "zhaofarhigh"
	]
	point_player(choices) : "Point to Player [-?]" : 1 : "Unknown yet..." =
	[
		0 : "No"
		1 : "Yes"
	]
	startent(target_destination) : "Start Entity" : : "Entity that camera starts moving from."
	endent(target_destination) : "End Entity" : : "Entity that camera ends moving to."
	target1(target_destination) : "Target 1" : : "Camera Target 1."
	target2(target_destination) : "Target 2" : : "Camera Target 2."
	spawnflags(flags) =
	[
		1 : "Flag 1 [unknown]" : 0
		2 : "Flag 2 [unknown]" : 0
		4 : "Flag 4 [unknown]" : 0
	]
	
	// Inputs
	input StartShot(void) : "Starts this camera shot."
	input EndShot(void) : "Ends this camera shot."
]





//====================================================================================================================
// camera_keyframe [VTMB-specific]
//====================================================================================================================

@KeyFrameClass base(VCamKeyframe) studio("models/editor/axis_helper_thick.mdl") keyframe() = camera_keyframe : 
	"[VTMB] Camera KeyFrame"
[
]





//====================================================================================================================
// camera_track [VTMB-specific]
//====================================================================================================================

@PointClass base(VCamKeyframe) studio("models/editor/axis_helper_thick.mdl") = camera_track : 
	"[VTMB] An entity used to build paths for camera to follow [-?]."
[
	HoldAtEnd(choices) : "Hold at end moving [-?]": 1 : "Unknown yet..." = 
	[
		1 : "Yes"
		0 : "No"
	]
	FromPlayerTime(string) : "Moving time from player [-?]": 0 : "Unknown yet..."
	ToPlayerTime(string) : "Moving time to player [-?]": 0 : "Unknown yet..."

	spawnflags(flags) =
	[
		1 : "1 (unknown yet)" : 0
	]

	// Inputs
	input PlayAsCameraTarget(void) : "[VTMB: untested connection]"
	input PlayAsCameraPosition(void) : "[VTMB: untested connection]"
	input RestoreCameraToPlayerControl(void) : "[VTMB] Restores camera state to player-controllable."

	// Outputs
	output OnAnimationCompleted(void) : "[VTMB] Fired when camera animation complete."
]





//====================================================================================================================
// security_camera [VTMB-specific]
//====================================================================================================================

@PointClass base(Targetname,Parentname,Studiomodel,VBreakingConnects) studioprop() = security_camera : 
	"[VTMB] Security Camera Prop (-NPC ?)."
[
	model(studio) : "Model" : "models/scenery/furniture/securitycam/securitycam.mdl" : "Camera model."
	alarmsnd(sound)	: "Alarm Sound" : "environmental/electronic/security_camera_alarm.wav" : "Sound played when camera goes into alarm state."
	blindspot(integer) : "Blind Spot (units)" : 64 : "Zone, which can not get in camera [not tested]."
	fieldofview(integer) : "Field Of View (degrees)" : 40 : "Camera's FOV, in degrees [not tested]."
	health(integer) : "Health" : 1 : "Camera prop health. '0' is don't break."
	pansnd(sound) : "Pan Sound" : "environmental/electronic/security_camera_pan.wav" : "Plays when camera pans."
	pausetime(float) : "Pause Time" : 2 : "Pause time between camera rotations."
	radius(integer) : "Rotate Radius" : 191 : "Camera rotation radius."
	rotdegrees(integer) : "Rotate Degrees" : -90 : "Degree of camera rotation."
	solid(choices) : "Collisions" : 6 =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
	]
	spawnflags(flags) =
	[
		0 : "Flag 1 [unknown]" : 0
		1 : "Flag 2 [unknown]" : 0
	]
	turntime(float) : "Turn Time (seconds)" : "5.0" : "The time of one complete camera's turn."
	zoom_time(float) : "Zoom Time" : "1.5" : "When the camera sees target, this time will be taked for focusing on it."
	zoominsnd(sound) : "Zoom-In Sound" : "environmental/electronic/security_camera_zoom_in.wav" : "Sound played when camera zooms in."
	zoomoutsnd(sound) : "Zoom-Out Sound" : "environmental/electronic/security_camera_zoom_out.wav" : "Sound played when camera zooms out."

	// Inputs
	input Enable(void) : "Enable this entity."
	input Disable(void) : "Disable this entity."
	input Toggle(void) : "Toggles state of entity between ON and OFF."
	input physdamagescale(float) : "Sets the value that scales damage energy when this character is hit by a physics object. NOTE: 0 means this feature is disabled for backwards compatibility."
	input FadeOutKill(void): "Kills entity when faded out."
	input SetDebris(string): "Sets debris spawned after entity breaks."

	// Outputs
	output OnPanToEnd(void) : "Fired when camera pans to start [not tested]."
	output OnPanToStart(void) : "Fired when camera pans to end [not tested]."
	output OnPlayerDiscovered(void) : "Fired when player saw it."
]





//====================================================================================================================
// point_camera [VTMB-specific]
//====================================================================================================================

@PointClass base(Targetname,Parentname) studioprop("models/editor/camera.mdl") = point_camera : 
	"[VTMB] Camera point entity that not tested yet..."
[
	FOV(integer) : "Camera FOV (degrees)" : 90 : "Camera's feild of view."
	look_dest(angle) : "Look Destination (Y Z X)" : "0 0 0" : "Camera's look destination."
	spawnflags(flags) =
	[
		0 : "Flag 0 [unknown]" : 0
	]
	
	// inputs:
	input FollowEntity(void) : "[VTMB: untested connection]"
]





//===================================================================================================================
// env_floating_camera [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname) studioprop("models/editor/camera.mdl") = env_floating_camera : 
	"[VTMB] Camera environment entity that not tested yet..."
[
	amplitude(float) : "Amplitude" : 3 : "[VTMB] Unknown yet..."
	duration(float) : "Duration" : 2 : "[VTMB] Unknown yet..."
	frequency(float) : "Frequency" : 3 : "[VTMB] Unknown yet..."

	// Outputs
	output StartWaves(void) : "[VTMB: untested connection]"
	output StopWaves(void) : "[VTMB: untested connection]"
]




























	
	
	
	








//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// PARTICLE Effects
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// env_particle [VTMB-specific, info_particle_system prototype]
//===================================================================================================================

@PointClass base(Targetname,Parentname) studio("models/editor/cone_helper.mdl") = env_particle : 
	"[VTMB] An entity that spawns the particle, defined in particle scripts."
[
	active(choices) : "Start Active" : 1 =
	[
		0 : "No"
		1 : "Yes"
	]
	attach_type(integer) : "Attach Type" : 0 : "[VTMB] Unknown yet..."
	bone(choices) : "Attaching Bone" : "<none>" : "Model's bone, which is attached to the particle [untested yet]." =
	[
		"" : "<none>"
		"Bip01 Head" : "Bip01 Head"
		"Bip01 L Hand" : "Bip01 L Hand"
		"Bip01 R Hand" : "Bip01 R Hand"
		"Bip01 Neck" : "Bip01 Neck"
		"Bip01 Pelvis" : "Bip01 Pelvis"
		"Bip01 Spine" : "Bip01 Spine"
		"Bip01 Spine01" : "Bip01 Spine01"
		"Bip01 Spine02" : "Bip01 Spine02"
		"Bip01 Spine03" : "Bip01 Spine03"
		"particle" : "particle"
	]
	particle_definition(choices) : "Particle Script" : "fire1_emitter" : "Particle definition script related to 'particles/*.txt' file." =
	[
		"airplaine" : "airplaine"
		"airplaine_light1" : "airplaine_light1"
		"airplaine_lightgreen" : "airplaine_lightgreen"
		"airplaine_lightred" : "airplaine_lightred"
		"airplane_emitter" : "airplane_emitter"
		"andrei_blast_emitter" : "andrei_blast_emitter"
		"andrei_blast_fx1" : "andrei_blast_fx1"
		"andrei_blast_fx2" : "andrei_blast_fx2"
		"andrei_blast_fx3" : "andrei_blast_fx3"
		"andrei_powerup_emitter" : "andrei_powerup_emitter"
		"andrei_powerup_fx1" : "andrei_powerup_fx1"
		"andrei_powerup_fx2" : "andrei_powerup_fx2"
		"andrei_splash_dive_out-emitter" : "andrei_splash_dive_out-emitter"
		"andrei_splash_fx-1" : "andrei_splash_fx-1"
		"andrei_splash_fx-2" : "andrei_splash_fx-2"
		"andrei_splash_fx-3" : "andrei_splash_fx-3"
		"andrei_splash_fx-4" : "andrei_splash_fx-4"
		"andrei_splash_fx-5" : "andrei_splash_fx-5"
		"andrei_splash_fx-6" : "andrei_splash_fx-6"
		"andrei_splash_huge-emitter" : "andrei_splash_huge-emitter"
		"andrei_summon-emitter" : "andrei_summon-emitter"
		"andrei_teleport_fx-1" : "andrei_teleport_fx-1"
		"andrei_teleport_fx-2" : "andrei_teleport_fx-2"
		"andrei_teleport_fx-3" : "andrei_teleport_fx-3"
		"andrei_teleport_fx-4" : "andrei_teleport_fx-4"
		"andrei_teleport_fx-5" : "andrei_teleport_fx-5"
		"andrei_teleport_fx-6" : "andrei_teleport_fx-6"
		"andrei_teleport_in-emitter" : "andrei_teleport_in-emitter"
		"andrei_teleport_out-emitter" : "andrei_teleport_out-emitter"
		"animalismcast" : "animalismcast"
		"animalismcastspiders" : "animalismcastspiders"
		"animalismcast_emitter" : "animalismcast_emitter"
		"ash" : "ash"
		"ashfalling" : "ashfalling"
		"ash_emitter" : "ash_emitter"
		"aura" : "aura"
		"barrelexplosion_fx1" : "barrelexplosion_fx1"
		"barrelexplosion_fx2" : "barrelexplosion_fx2"
		"barrelexplosion_fx3" : "barrelexplosion_fx3"
		"barrelexplosion_fx4" : "barrelexplosion_fx4"
		"barrelfirechargeemitter" : "barrelfirechargeemitter"
		"barrelfirecharge_fx1" : "barrelfirecharge_fx1"
		"barrelfireemitter" : "barrelfireemitter"
		"barrelfireexplosionemitter" : "barrelfireexplosionemitter"
		"blank_emitter" : "blank_emitter"
		"bloodbigsplash_emitter" : "bloodbigsplash_emitter"
		"blooddrops" : "blooddrops"
		"bloodexplosion_bloodtrail" : "bloodexplosion_bloodtrail"
		"bloodexplosion_cloud" : "bloodexplosion_cloud"
		"bloodexplosion_cloud2" : "bloodexplosion_cloud2"
		"bloodexplosion_projectiles" : "bloodexplosion_projectiles"
		"bloodexplosion_spatter" : "bloodexplosion_spatter"
		"bloodexplosion_spray" : "bloodexplosion_spray"
		"bloodexplosion_trails" : "bloodexplosion_trails"
		"bloodlinestemp" : "bloodlinestemp"
		"bloodshotreturnburst_fx1" : "bloodshotreturnburst_fx1"
		"bloodshotreturnburst_fx2" : "bloodshotreturnburst_fx2"
		"bloodshotreturn_fx1" : "bloodshotreturn_fx1"
		"bloodshotreturn_fx2" : "bloodshotreturn_fx2"
		"bloodshotreturn_fx3" : "bloodshotreturn_fx3"
		"bloodshotreturn_fx4" : "bloodshotreturn_fx4"
		"bloodshot_fx1" : "bloodshot_fx1"
		"bloodshot_fx2" : "bloodshot_fx2"
		"bloodshot_fx3" : "bloodshot_fx3"
		"bloodshot_fx4" : "bloodshot_fx4"
		"bloodshot_fx5" : "bloodshot_fx5"
		"bloodshot_fx6" : "bloodshot_fx6"
		"bloodshot_tgt_fx1" : "bloodshot_tgt_fx1"
		"bloodshot_tgt_fx2" : "bloodshot_tgt_fx2"
		"bloodsplash_emitter" : "bloodsplash_emitter"
		"bloodsplash_fx1" : "bloodsplash_fx1"
		"bloodsplash_fx2" : "bloodsplash_fx2"
		"bloodtrickle_emitter" : "bloodtrickle_emitter"
		"bloodyeyes_droplets" : "bloodyeyes_droplets"
		"bloodyeyes_emitter" : "bloodyeyes_emitter"
		"bloodyeyes_splats" : "bloodyeyes_splats"
		"blood_emitter" : "blood_emitter"
		"blood_explosion_emitter" : "blood_explosion_emitter"
		"blood_guardian_death_emitter" : "blood_guardian_death_emitter"
		"blood_guardian_death_fx1" : "blood_guardian_death_fx1"
		"blood_guardian_death_fx2" : "blood_guardian_death_fx2"
		"blood_guardian_summon_emitter" : "blood_guardian_summon_emitter"
		"blood_guardian_summon_fx1" : "blood_guardian_summon_fx1"
		"blood_guardian_summon_fx2" : "blood_guardian_summon_fx2"
		"blood_guardian_summon_fx3" : "blood_guardian_summon_fx3"
		"blood_guardian_summon_fx4-1-2" : "blood_guardian_summon_fx4-1-2"
		"blood_guardian_summon_fx4-1" : "blood_guardian_summon_fx4-1"
		"blood_guardian_summon_fx4-2" : "blood_guardian_summon_fx4-2"
		"blood_guardian_summon_fx4-3" : "blood_guardian_summon_fx4-3"
		"blood_guardian_summon_fx4" : "blood_guardian_summon_fx4"
		"blood_guardian_summon_fx5-1" : "blood_guardian_summon_fx5-1"
		"blood_guardian_summon_fx5-2" : "blood_guardian_summon_fx5-2"
		"blood_guardian_summon_fx5" : "blood_guardian_summon_fx5"
		"blood_guardian_summon_fx6" : "blood_guardian_summon_fx6"
		"blood_guardian_trail" : "blood_guardian_trail"
		"blood_guardian_trail2" : "blood_guardian_trail2"
		"blowsmoke" : "blowsmoke"
		"blowsmoke2" : "blowsmoke2"
		"blowsmoke_ciginhale_emitter" : "blowsmoke_ciginhale_emitter"
		"blowsmoke_ciginto_emitter" : "blowsmoke_ciginto_emitter"
		"blowsmoke_emitter" : "blowsmoke_emitter"
		"body_fire_emitter" : "body_fire_emitter"
		"body_flames" : "body_flames"
		"body_flames1" : "body_flames1"
		"body_flame_glow" : "body_flame_glow"
		"body_smoke" : "body_smoke"
		"bradbury_blood_rain" : "bradbury_blood_rain"
		"bradbury_wagonwheel_emitter" : "bradbury_wagonwheel_emitter"
		"bullettrail_distort" : "bullettrail_distort"
		"bullettrail_emitter" : "bullettrail_emitter"
		"bullettrail_ring" : "bullettrail_ring"
		"burnigembers" : "burnigembers"
		"carlight1" : "carlight1"
		"carlight2" : "carlight2"
		"carlight_emmiter" : "carlight_emmiter"
		"chang_ballcharge_fx1" : "chang_ballcharge_fx1"
		"chang_ballcharge_fx2" : "chang_ballcharge_fx2"
		"chang_ball_charge_emitter" : "chang_ball_charge_emitter"
		"chang_blast_emitter" : "chang_blast_emitter"
		"chang_blast_fx1" : "chang_blast_fx1"
		"chang_blast_fx2" : "chang_blast_fx2"
		"chang_blast_fx3" : "chang_blast_fx3"
		"chang_center_emitter" : "chang_center_emitter"
		"chang_center_fx1" : "chang_center_fx1"
		"chang_center_fx2" : "chang_center_fx2"
		"chang_ghost_bone_tree_emitter" : "chang_ghost_bone_tree_emitter"
		"chang_powerup_emitter" : "chang_powerup_emitter"
		"chang_powerup_fx1" : "chang_powerup_fx1"
		"chang_powerup_fx2" : "chang_powerup_fx2"
		"chang_powerup_fx3" : "chang_powerup_fx3"
		"chang_projectile_emitter" : "chang_projectile_emitter"
		"chang_projectile_fx1" : "chang_projectile_fx1"
		"chang_projectile_fx2" : "chang_projectile_fx2"
		"chang_spine_emitter" : "chang_spine_emitter"
		"chang_spine_fx1" : "chang_spine_fx1"
		"chang_spine_fx2" : "chang_spine_fx2"
		"chang_teleport_in_emitter" : "chang_teleport_in_emitter"
		"chang_teleport_in_fx1" : "chang_teleport_in_fx1"
		"chang_teleport_out_emitter" : "chang_teleport_out_emitter"
		"chang_teleport_out_fx1" : "chang_teleport_out_fx1"
		"chantry_teleport_emitter" : "chantry_teleport_emitter"
		"cigar_emitter" : "cigar_emitter"
		"cigar_smoke1" : "cigar_smoke1"
		"cigar_smokemover" : "cigar_smokemover"
		"cigglow_ciginhale_emitter" : "cigglow_ciginhale_emitter"
		"cigglow_ciginhale_glow" : "cigglow_ciginhale_glow"
		"cigglow_ciginhale_halo" : "cigglow_ciginhale_halo"
		"cigglow_ciginhale_smoke1" : "cigglow_ciginhale_smoke1"
		"cigglow_ciginhale_smoke2" : "cigglow_ciginhale_smoke2"
		"cigglow_ciginhale_spark" : "cigglow_ciginhale_spark"
		"cigglow_ciginhale_spark2" : "cigglow_ciginhale_spark2"
		"cigglow_glowstart_emitter" : "cigglow_glowstart_emitter"
		"cigglow_smokeblow_emitter" : "cigglow_smokeblow_emitter"
		"cigglow_spark_emitter" : "cigglow_spark_emitter"
		"cigsmoke_ciginhale_emitter" : "cigsmoke_ciginhale_emitter"
		"citylights1" : "citylights1"
		"citylights2" : "citylights2"
		"citylights_emitter" : "citylights_emitter"
		"citylights_emitter2" : "citylights_emitter2"
		"cold_explosion" : "cold_explosion"
		"cold_explosion2" : "cold_explosion2"
		"cold_explosion3" : "cold_explosion3"
		"cold_explosionfx2" : "cold_explosionfx2"
		"cold_explosionfx3" : "cold_explosionfx3"
		"cold_explosion_emitter" : "cold_explosion_emitter"
		"collumbreak_cloud" : "collumbreak_cloud"
		"collumbreak_dusttrail" : "collumbreak_dusttrail"
		"collumbreak_projectiles" : "collumbreak_projectiles"
		"collumbreak_spray" : "collumbreak_spray"
		"comet" : "comet"
		"comet2" : "comet2"
		"comet3" : "comet3"
		"cometdecal" : "cometdecal"
		"copy of d_thaum_bld_cauldron_tgt_emitter" : "copy of d_thaum_bld_cauldron_tgt_emitter"
		"copy of ethereal_fling_fire01" : "copy of ethereal_fling_fire01"
		"crossbow_flame_emitter" : "crossbow_flame_emitter"
		"cross_flames1" : "cross_flames1"
		"cutscene_widescreen_panels" : "cutscene_widescreen_panels"
		"cutscene_widescreen_panels_end" : "cutscene_widescreen_panels_end"
		"cutscene_widescreen_panels_end_fx1" : "cutscene_widescreen_panels_end_fx1"
		"cutscene_widescreen_panels_end_fx2" : "cutscene_widescreen_panels_end_fx2"
		"cutscene_widescreen_panels_fx1" : "cutscene_widescreen_panels_fx1"
		"cutscene_widescreen_panels_fx2" : "cutscene_widescreen_panels_fx2"
		"c_theater_collum_emitter" : "c_theater_collum_emitter"
		"c_theater_collum_emitter_move_up" : "c_theater_collum_emitter_move_up"
		"debries" : "debries"
		"deform_normal" : "deform_normal"
		"demo_cloud_emitter" : "demo_cloud_emitter"
		"demo_cloud_fx1" : "demo_cloud_fx1"
		"demo_leaf_rain2_fx1" : "demo_leaf_rain2_fx1"
		"demo_leaf_rain_emitter" : "demo_leaf_rain_emitter"
		"demo_leaf_rain_emitter2" : "demo_leaf_rain_emitter2"
		"demo_leaf_rain_fx1" : "demo_leaf_rain_fx1"
		"demo_river_mist_emitter" : "demo_river_mist_emitter"
		"demo_river_mist_fx1" : "demo_river_mist_fx1"
		"detonator_light_emitter" : "detonator_light_emitter"
		"dialog_dementation_victim_emitter" : "dialog_dementation_victim_emitter"
		"dialog_domination_victim_emitter" : "dialog_domination_victim_emitter"
		"dmgfx_body_fire_emitter" : "dmgfx_body_fire_emitter"
		"dmgfx_body_freeze_emitter" : "dmgfx_body_freeze_emitter"
		"dmgfx_body_shock_emitter" : "dmgfx_body_shock_emitter"
		"dmgfx_freeze_smoke_fx1" : "dmgfx_freeze_smoke_fx1"
		"dmgfx_hud_fire_emitter" : "dmgfx_hud_fire_emitter"
		"dmgfx_hud_freeze_emitter" : "dmgfx_hud_freeze_emitter"
		"dmgfx_hud_shock_emitter" : "dmgfx_hud_shock_emitter"
		"dmgfx_vampire_death" : "dmgfx_vampire_death"
		"dmgfx_vampire_death_fx1" : "dmgfx_vampire_death_fx1"
		"dmgfx_vampire_death_fx2" : "dmgfx_vampire_death_fx2"
		"dmgfx_vampire_death_fx3" : "dmgfx_vampire_death_fx3"
		"dn_healthhuman" : "dn_healthhuman"
		"dn_healthhuman_emmiter" : "dn_healthhuman_emmiter"
		"dn_healthvampire" : "dn_healthvampire"
		"dn_healthvampire_emmiter" : "dn_healthvampire_emmiter"
		"drag_metal_emitter" : "drag_metal_emitter"
		"drag_stone_emitter" : "drag_stone_emitter"
		"drag_wood_emitter" : "drag_wood_emitter"
		"drip" : "drip"
		"drip_emitter" : "drip_emitter"
		"dummy_emitter" : "dummy_emitter"
		"d_animalisim_bodysmoke" : "d_animalisim_bodysmoke"
		"d_animalisim_bodysmoke_emitter" : "d_animalisim_bodysmoke_emitter"
		"d_animalisim_groundfog" : "d_animalisim_groundfog"
		"d_animalisim_ground_emitter" : "d_animalisim_ground_emitter"
		"d_animalisim_spiders" : "d_animalisim_spiders"
		"d_animalism_bat_broke_emitter" : "d_animalism_bat_broke_emitter"
		"d_animalism_bat_broke_fx1" : "d_animalism_bat_broke_fx1"
		"d_animalism_bat_broke_fx2" : "d_animalism_bat_broke_fx2"
		"d_animalism_bat_fx1" : "d_animalism_bat_fx1"
		"d_animalism_bat_fx2" : "d_animalism_bat_fx2"
		"d_animalism_bat_fx3" : "d_animalism_bat_fx3"
		"d_animalism_bat_tgt_emitter" : "d_animalism_bat_tgt_emitter"
		"d_animalism_bat_tgt_fx1" : "d_animalism_bat_tgt_fx1"
		"d_animalism_bat_trail_emitter" : "d_animalism_bat_trail_emitter"
		"d_animalism_bat_trail_emitter2" : "d_animalism_bat_trail_emitter2"
		"d_animalism_bat_trail_emitter3" : "d_animalism_bat_trail_emitter3"
		"d_animalism_beetle_cast_emitter" : "d_animalism_beetle_cast_emitter"
		"d_animalism_beetle_cast_fx1" : "d_animalism_beetle_cast_fx1"
		"d_animalism_beetle_cast_fx2" : "d_animalism_beetle_cast_fx2"
		"d_animalism_beetle_cast_fx3" : "d_animalism_beetle_cast_fx3"
		"d_animalism_beetle_emitter" : "d_animalism_beetle_emitter"
		"d_animalism_beetle_fx1" : "d_animalism_beetle_fx1"
		"d_animalism_beetle_fx2" : "d_animalism_beetle_fx2"
		"d_animalism_beetle_fx3" : "d_animalism_beetle_fx3"
		"d_animalism_beetle_hud_emitter" : "d_animalism_beetle_hud_emitter"
		"d_animalism_beetle_hud_fx1" : "d_animalism_beetle_hud_fx1"
		"d_animalism_beetle_hud_fx2" : "d_animalism_beetle_hud_fx2"
		"d_animalism_beetle_hud_fx3" : "d_animalism_beetle_hud_fx3"
		"d_animalism_beetle_tgt_emitter" : "d_animalism_beetle_tgt_emitter"
		"d_animalism_beetle_tgt_fx1" : "d_animalism_beetle_tgt_fx1"
		"d_animalism_beetle_tgt_fx2" : "d_animalism_beetle_tgt_fx2"
		"d_animalism_pestilence_emitter" : "d_animalism_pestilence_emitter"
		"d_animalism_pestilence_fx1" : "d_animalism_pestilence_fx1"
		"d_animalism_pestilence_fx2" : "d_animalism_pestilence_fx2"
		"d_animalism_pestilence_fx3" : "d_animalism_pestilence_fx3"
		"d_animalism_pestilence_fx4" : "d_animalism_pestilence_fx4"
		"d_animalism_pestilence_fx5" : "d_animalism_pestilence_fx5"
		"d_animalism_pestilence_fx6" : "d_animalism_pestilence_fx6"
		"d_animalism_raven_broke_emitter" : "d_animalism_raven_broke_emitter"
		"d_animalism_raven_broke_fx1" : "d_animalism_raven_broke_fx1"
		"d_animalism_raven_broke_fx2" : "d_animalism_raven_broke_fx2"
		"d_animalism_raven_trail_emitter" : "d_animalism_raven_trail_emitter"
		"d_animalism_raven_trail_fx1" : "d_animalism_raven_trail_fx1"
		"d_animalism_raven_trail_fx2" : "d_animalism_raven_trail_fx2"
		"d_animalism_raven_trail_fx3" : "d_animalism_raven_trail_fx3"
		"d_animalism_wolf_bloodspray_emitter" : "d_animalism_wolf_bloodspray_emitter"
		"d_animalism_wolf_bloodspray_fx1" : "d_animalism_wolf_bloodspray_fx1"
		"d_animalism_wolf_bloodspray_fx2" : "d_animalism_wolf_bloodspray_fx2"
		"d_animalism_wolf_into_emitter" : "d_animalism_wolf_into_emitter"
		"d_animalism_wolf_into_emitter2" : "d_animalism_wolf_into_emitter2"
		"d_animalism_wolf_into_fx1" : "d_animalism_wolf_into_fx1"
		"d_animalism_wolf_into_fx2" : "d_animalism_wolf_into_fx2"
		"d_animalism_wolf_into_fx3" : "d_animalism_wolf_into_fx3"
		"d_animalism_wolf_outof2_fx1" : "d_animalism_wolf_outof2_fx1"
		"d_animalism_wolf_outof2_fx2" : "d_animalism_wolf_outof2_fx2"
		"d_animalism_wolf_outof_emitter" : "d_animalism_wolf_outof_emitter"
		"d_animalism_wolf_outof_emitter2" : "d_animalism_wolf_outof_emitter2"
		"d_animalism_wolf_outof_fx1" : "d_animalism_wolf_outof_fx1"
		"d_animalism_wolf_outof_fx2" : "d_animalism_wolf_outof_fx2"
		"d_animalism_wolf_tail_emitter" : "d_animalism_wolf_tail_emitter"
		"d_animalism_wolf_tail_fx1" : "d_animalism_wolf_tail_fx1"
		"d_animalism_wolf_tail_fx2" : "d_animalism_wolf_tail_fx2"
		"d_animalism_wolf_trail_emitter" : "d_animalism_wolf_trail_emitter"
		"d_animalism_wolf_trail_fx1" : "d_animalism_wolf_trail_fx1"
		"d_auspexaura_afraid" : "d_auspexaura_afraid"
		"d_auspexaura_afraid_diablerist_emitter" : "d_auspexaura_afraid_diablerist_emitter"
		"d_auspexaura_afraid_emitter" : "d_auspexaura_afraid_emitter"
		"d_auspexaura_afraid_kindred2" : "d_auspexaura_afraid_kindred2"
		"d_auspexaura_afraid_kindred_emitter" : "d_auspexaura_afraid_kindred_emitter"
		"d_auspexaura_angry" : "d_auspexaura_angry"
		"d_auspexaura_angry_diablerist_emitter" : "d_auspexaura_angry_diablerist_emitter"
		"d_auspexaura_angry_emitter" : "d_auspexaura_angry_emitter"
		"d_auspexaura_angry_kindred" : "d_auspexaura_angry_kindred"
		"d_auspexaura_angry_kindred2" : "d_auspexaura_angry_kindred2"
		"d_auspexaura_angry_kindred_emitter" : "d_auspexaura_angry_kindred_emitter"
		"d_auspexaura_calm" : "d_auspexaura_calm"
		"d_auspexaura_calm_diablerist_emitter" : "d_auspexaura_calm_diablerist_emitter"
		"d_auspexaura_calm_emitter" : "d_auspexaura_calm_emitter"
		"d_auspexaura_calm_kindred" : "d_auspexaura_calm_kindred"
		"d_auspexaura_calm_kindred2" : "d_auspexaura_calm_kindred2"
		"d_auspexaura_calm_kindred_emitter" : "d_auspexaura_calm_kindred_emitter"
		"d_auspexaura_confused" : "d_auspexaura_confused"
		"d_auspexaura_confused_diablerist_emitter" : "d_auspexaura_confused_diablerist_emitter"
		"d_auspexaura_confused_emitter" : "d_auspexaura_confused_emitter"
		"d_auspexaura_confused_kindred" : "d_auspexaura_confused_kindred"
		"d_auspexaura_confused_kindred_emitter" : "d_auspexaura_confused_kindred_emitter"
		"d_auspexaura_diablerist" : "d_auspexaura_diablerist"
		"d_auspexaura_emitter" : "d_auspexaura_emitter"
		"d_auspexaura_frenzied" : "d_auspexaura_frenzied"
		"d_auspexaura_frenzied_diablerist_emitter" : "d_auspexaura_frenzied_diablerist_emitter"
		"d_auspexaura_frenzied_emitter" : "d_auspexaura_frenzied_emitter"
		"d_auspexaura_frenzied_kindred_emitter" : "d_auspexaura_frenzied_kindred_emitter"
		"d_auspexaura_innocent" : "d_auspexaura_innocent"
		"d_auspexaura_innocent_diablerist_emitter" : "d_auspexaura_innocent_diablerist_emitter"
		"d_auspexaura_innocent_emitter" : "d_auspexaura_innocent_emitter"
		"d_auspexaura_innocent_kindred" : "d_auspexaura_innocent_kindred"
		"d_auspexaura_innocent_kindred2" : "d_auspexaura_innocent_kindred2"
		"d_auspexaura_innocent_kindred_emitter" : "d_auspexaura_innocent_kindred_emitter"
		"d_auspexaura_kindred" : "d_auspexaura_kindred"
		"d_auspexaura_obfuscated_diablerist_emitter" : "d_auspexaura_obfuscated_diablerist_emitter"
		"d_auspexaura_obfuscated_emitter" : "d_auspexaura_obfuscated_emitter"
		"d_auspexaura_obfuscated_kindred_emitter" : "d_auspexaura_obfuscated_kindred_emitter"
		"d_auspexaura_seeobfu" : "d_auspexaura_seeobfu"
		"d_auspexaura_suspicious" : "d_auspexaura_suspicious"
		"d_auspexaura_suspicious_diablerist_emitter" : "d_auspexaura_suspicious_diablerist_emitter"
		"d_auspexaura_suspicious_emitter" : "d_auspexaura_suspicious_emitter"
		"d_auspexaura_suspicious_kindred" : "d_auspexaura_suspicious_kindred"
		"d_auspexaura_suspicious_kindred2" : "d_auspexaura_suspicious_kindred2"
		"d_auspexaura_suspicious_kindred_emitter" : "d_auspexaura_suspicious_kindred_emitter"
		"d_auspexcast_emitter" : "d_auspexcast_emitter"
		"d_auspexcast_energy" : "d_auspexcast_energy"
		"d_auspexview_emitter" : "d_auspexview_emitter"
		"d_auspexview_part1" : "d_auspexview_part1"
		"d_auspexview_part2" : "d_auspexview_part2"
		"d_bloodbufff_generic_1" : "d_bloodbufff_generic_1"
		"d_bloodbuff_generic" : "d_bloodbuff_generic"
		"d_bloodbuff_generic_1" : "d_bloodbuff_generic_1"
		"d_bloodbuff_generic_2" : "d_bloodbuff_generic_2"
		"d_bloodbuff_generic_3" : "d_bloodbuff_generic_3"
		"d_bloodbuff_heal1" : "d_bloodbuff_heal1"
		"d_bloodhealing-rings" : "d_bloodhealing-rings"
		"d_bloodhealing-rings1" : "d_bloodhealing-rings1"
		"d_bloodhealing-rings2" : "d_bloodhealing-rings2"
		"d_bloodhealing-ringsemitter" : "d_bloodhealing-ringsemitter"
		"d_bloodhealing-trail" : "d_bloodhealing-trail"
		"d_bloodhealing" : "d_bloodhealing"
		"d_bloodhealing_emitter" : "d_bloodhealing_emitter"
		"d_dementate_berserk_fx1" : "d_dementate_berserk_fx1"
		"d_dementate_berserk_fx2" : "d_dementate_berserk_fx2"
		"d_dementate_berserk_fx3" : "d_dementate_berserk_fx3"
		"d_dementate_cast3_fx1" : "d_dementate_cast3_fx1"
		"d_dementate_cast3_fx2" : "d_dementate_cast3_fx2"
		"d_dementate_cast3_fx3" : "d_dementate_cast3_fx3"
		"d_dementate_cast4_fx1" : "d_dementate_cast4_fx1"
		"d_dementate_cast4_fx2" : "d_dementate_cast4_fx2"
		"d_dementate_cast4_fx3" : "d_dementate_cast4_fx3"
		"d_dementate_cast5_fx1" : "d_dementate_cast5_fx1"
		"d_dementate_cast5_fx2" : "d_dementate_cast5_fx2"
		"d_dementate_cast5_fx3" : "d_dementate_cast5_fx3"
		"d_dementate_cast_fx1" : "d_dementate_cast_fx1"
		"d_dementate_cast_fx2" : "d_dementate_cast_fx2"
		"d_dementate_cast_fx3" : "d_dementate_cast_fx3"
		"d_dementate_hit" : "d_dementate_hit"
		"d_dementate_hit_target" : "d_dementate_hit_target"
		"d_dementate_hud_cast2_fx1" : "d_dementate_hud_cast2_fx1"
		"d_dementate_hud_cast2_fx2" : "d_dementate_hud_cast2_fx2"
		"d_dementate_hud_cast3_fx1" : "d_dementate_hud_cast3_fx1"
		"d_dementate_hud_cast3_fx2" : "d_dementate_hud_cast3_fx2"
		"d_dementate_hud_cast4_fx1" : "d_dementate_hud_cast4_fx1"
		"d_dementate_hud_cast4_fx2" : "d_dementate_hud_cast4_fx2"
		"d_dementate_hud_cast5_fx1" : "d_dementate_hud_cast5_fx1"
		"d_dementate_hud_cast5_fx2" : "d_dementate_hud_cast5_fx2"
		"d_dementate_hud_cast_fx1" : "d_dementate_hud_cast_fx1"
		"d_dementate_hud_cast_fx2" : "d_dementate_hud_cast_fx2"
		"d_dementate_hysteria_broke_fx1" : "d_dementate_hysteria_broke_fx1"
		"d_dementate_hysteria_broke_fx2" : "d_dementate_hysteria_broke_fx2"
		"d_dementate_ramp_smoke" : "d_dementate_ramp_smoke"
		"d_dementate_ramp_target" : "d_dementate_ramp_target"
		"d_dementate_ramp_target1" : "d_dementate_ramp_target1"
		"d_dementate_ramp_target2" : "d_dementate_ramp_target2"
		"d_dementate_ramp_target3" : "d_dementate_ramp_target3"
		"d_dementate_ramp_target4" : "d_dementate_ramp_target4"
		"d_dementate_ramp_target5" : "d_dementate_ramp_target5"
		"d_dementation_bedlam_emitter" : "d_dementation_bedlam_emitter"
		"d_dementation_bedlam_fx1" : "d_dementation_bedlam_fx1"
		"d_dementation_bedlam_fx2" : "d_dementation_bedlam_fx2"
		"d_dementation_bedlam_fx3" : "d_dementation_bedlam_fx3"
		"d_dementation_berserk_tgt_emitter" : "d_dementation_berserk_tgt_emitter"
		"d_dementation_berserk_tgt_emitter2" : "d_dementation_berserk_tgt_emitter2"
		"d_dementation_cast_emitter1" : "d_dementation_cast_emitter1"
		"d_dementation_cast_emitter2" : "d_dementation_cast_emitter2"
		"d_dementation_cast_emitter3" : "d_dementation_cast_emitter3"
		"d_dementation_cast_emitter4" : "d_dementation_cast_emitter4"
		"d_dementation_cast_emitter5" : "d_dementation_cast_emitter5"
		"d_dementation_hud_cast_emitter1" : "d_dementation_hud_cast_emitter1"
		"d_dementation_hud_cast_emitter2" : "d_dementation_hud_cast_emitter2"
		"d_dementation_hud_cast_emitter3" : "d_dementation_hud_cast_emitter3"
		"d_dementation_hud_cast_emitter4" : "d_dementation_hud_cast_emitter4"
		"d_dementation_hud_cast_emitter5" : "d_dementation_hud_cast_emitter5"
		"d_dementation_hysteria_broke_emitter" : "d_dementation_hysteria_broke_emitter"
		"d_dementation_hysteria_emitter" : "d_dementation_hysteria_emitter"
		"d_dementation_hysteria_fx1" : "d_dementation_hysteria_fx1"
		"d_dementation_hysteria_fx2" : "d_dementation_hysteria_fx2"
		"d_dementation_hysteria_fx3" : "d_dementation_hysteria_fx3"
		"d_dementation_mass_hallucination_emitter" : "d_dementation_mass_hallucination_emitter"
		"d_dementation_mass_hallucination_fx1" : "d_dementation_mass_hallucination_fx1"
		"d_dementation_mass_hallucination_fx2" : "d_dementation_mass_hallucination_fx2"
		"d_dementation_mass_hallucination_fx3" : "d_dementation_mass_hallucination_fx3"
		"d_dementation_mass_hallucination_tgt_emitter" : "d_dementation_mass_hallucination_tgt_emitter"
		"d_dementation_mass_hallucination_tgt_fx1" : "d_dementation_mass_hallucination_tgt_fx1"
		"d_dementation_mass_hallucination_tgt_fx2" : "d_dementation_mass_hallucination_tgt_fx2"
		"d_dementation_mass_hallucination_tgt_fx3" : "d_dementation_mass_hallucination_tgt_fx3"
		"d_dementation_vision_of_death_fx1-2" : "d_dementation_vision_of_death_fx1-2"
		"d_dementation_vision_of_death_tgt_emitter" : "d_dementation_vision_of_death_tgt_emitter"
		"d_dementation_vision_of_death_tgt_emitter2" : "d_dementation_vision_of_death_tgt_emitter2"
		"d_dementation_vision_of_death_tgt_fx1" : "d_dementation_vision_of_death_tgt_fx1"
		"d_dementation_vision_of_death_tgt_fx2" : "d_dementation_vision_of_death_tgt_fx2"
		"d_dementation_vision_of_death_tgt_fx3" : "d_dementation_vision_of_death_tgt_fx3"
		"d_dementation_vision_of_death_tgt_fx4" : "d_dementation_vision_of_death_tgt_fx4"
		"d_dementation_vision_of_death_tgt_fx5" : "d_dementation_vision_of_death_tgt_fx5"
		"d_dementation_vision_of_death_tgt_fx6" : "d_dementation_vision_of_death_tgt_fx6"
		"d_dementation_vision_of_death_tgt_fx7" : "d_dementation_vision_of_death_tgt_fx7"
		"d_dominate_brainwipe_emitter" : "d_dominate_brainwipe_emitter"
		"d_dominate_brainwipe_fx1" : "d_dominate_brainwipe_fx1"
		"d_dominate_brainwipe_fx2" : "d_dominate_brainwipe_fx2"
		"d_dominate_brainwipe_fx3" : "d_dominate_brainwipe_fx3"
		"d_dominate_cast2_fx1" : "d_dominate_cast2_fx1"
		"d_dominate_cast2_fx2" : "d_dominate_cast2_fx2"
		"d_dominate_cast2_fx3" : "d_dominate_cast2_fx3"
		"d_dominate_cast2_fx4" : "d_dominate_cast2_fx4"
		"d_dominate_cast3_fx1" : "d_dominate_cast3_fx1"
		"d_dominate_cast3_fx2" : "d_dominate_cast3_fx2"
		"d_dominate_cast3_fx3" : "d_dominate_cast3_fx3"
		"d_dominate_cast4_fx1" : "d_dominate_cast4_fx1"
		"d_dominate_cast4_fx2" : "d_dominate_cast4_fx2"
		"d_dominate_cast4_fx3" : "d_dominate_cast4_fx3"
		"d_dominate_cast5_fx1" : "d_dominate_cast5_fx1"
		"d_dominate_cast5_fx2" : "d_dominate_cast5_fx2"
		"d_dominate_cast5_fx3" : "d_dominate_cast5_fx3"
		"d_dominate_cast_emitter1" : "d_dominate_cast_emitter1"
		"d_dominate_cast_emitter2" : "d_dominate_cast_emitter2"
		"d_dominate_cast_emitter3" : "d_dominate_cast_emitter3"
		"d_dominate_cast_emitter4" : "d_dominate_cast_emitter4"
		"d_dominate_cast_emitter5" : "d_dominate_cast_emitter5"
		"d_dominate_cast_fx1" : "d_dominate_cast_fx1"
		"d_dominate_cast_fx2" : "d_dominate_cast_fx2"
		"d_dominate_cast_fx3" : "d_dominate_cast_fx3"
		"d_dominate_hit" : "d_dominate_hit"
		"d_dominate_hit_target" : "d_dominate_hit_target"
		"d_dominate_hud_cast2_fx1" : "d_dominate_hud_cast2_fx1"
		"d_dominate_hud_cast2_fx2" : "d_dominate_hud_cast2_fx2"
		"d_dominate_hud_cast3_fx1" : "d_dominate_hud_cast3_fx1"
		"d_dominate_hud_cast3_fx2" : "d_dominate_hud_cast3_fx2"
		"d_dominate_hud_cast4_fx1" : "d_dominate_hud_cast4_fx1"
		"d_dominate_hud_cast4_fx2" : "d_dominate_hud_cast4_fx2"
		"d_dominate_hud_cast5_fx1" : "d_dominate_hud_cast5_fx1"
		"d_dominate_hud_cast5_fx2" : "d_dominate_hud_cast5_fx2"
		"d_dominate_hud_cast_emitter1" : "d_dominate_hud_cast_emitter1"
		"d_dominate_hud_cast_emitter2" : "d_dominate_hud_cast_emitter2"
		"d_dominate_hud_cast_emitter3" : "d_dominate_hud_cast_emitter3"
		"d_dominate_hud_cast_emitter4" : "d_dominate_hud_cast_emitter4"
		"d_dominate_hud_cast_emitter5" : "d_dominate_hud_cast_emitter5"
		"d_dominate_hud_cast_fx1" : "d_dominate_hud_cast_fx1"
		"d_dominate_hud_cast_fx2" : "d_dominate_hud_cast_fx2"
		"d_dominate_possession_emitter" : "d_dominate_possession_emitter"
		"d_dominate_possession_fx1" : "d_dominate_possession_fx1"
		"d_dominate_possession_fx2" : "d_dominate_possession_fx2"
		"d_dominate_possession_fx3" : "d_dominate_possession_fx3"
		"d_dominate_ramp_smoke" : "d_dominate_ramp_smoke"
		"d_dominate_ramp_target" : "d_dominate_ramp_target"
		"d_dominate_ramp_target1" : "d_dominate_ramp_target1"
		"d_dominate_ramp_target2" : "d_dominate_ramp_target2"
		"d_dominate_ramp_target3" : "d_dominate_ramp_target3"
		"d_dominate_ramp_target4" : "d_dominate_ramp_target4"
		"d_dominate_ramp_target5" : "d_dominate_ramp_target5"
		"d_dominate_suicide_emitter" : "d_dominate_suicide_emitter"
		"d_dominate_suicide_fx1" : "d_dominate_suicide_fx1"
		"d_dominate_suicide_fx2" : "d_dominate_suicide_fx2"
		"d_dominate_suicide_fx3" : "d_dominate_suicide_fx3"
		"d_dominate_suicide_hand_emitter" : "d_dominate_suicide_hand_emitter"
		"d_dominate_suicide_hand_fx1" : "d_dominate_suicide_hand_fx1"
		"d_dominate_suicide_hand_fx2" : "d_dominate_suicide_hand_fx2"
		"d_dominate_suicide_hand_fx3" : "d_dominate_suicide_hand_fx3"
		"d_dominate_suicide_pact_emitter" : "d_dominate_suicide_pact_emitter"
		"d_dominate_suicide_pact_emitter2" : "d_dominate_suicide_pact_emitter2"
		"d_dominate_suicide_pact_fx1" : "d_dominate_suicide_pact_fx1"
		"d_dominate_suicide_pact_fx2" : "d_dominate_suicide_pact_fx2"
		"d_dominate_suicide_pact_fx3" : "d_dominate_suicide_pact_fx3"
		"d_dominate_target" : "d_dominate_target"
		"d_dominate_target_emitter" : "d_dominate_target_emitter"
		"d_dominate_trance_broke_emitter" : "d_dominate_trance_broke_emitter"
		"d_dominate_trance_broke_fx1" : "d_dominate_trance_broke_fx1"
		"d_dominate_trance_broke_fx2" : "d_dominate_trance_broke_fx2"
		"d_dominate_trance_emitter" : "d_dominate_trance_emitter"
		"d_dominate_trance_fx1" : "d_dominate_trance_fx1"
		"d_dominate_trance_fx2" : "d_dominate_trance_fx2"
		"d_dominate_trance_fx3" : "d_dominate_trance_fx3"
		"d_fortitude" : "d_fortitude"
		"d_fortitude2" : "d_fortitude2"
		"d_fortitudenew" : "d_fortitudenew"
		"d_fortitudenew_emitter" : "d_fortitudenew_emitter"
		"d_fortitudeview_behindhands" : "d_fortitudeview_behindhands"
		"d_fortitudeview_emitter" : "d_fortitudeview_emitter"
		"d_fortitudeview_fx1" : "d_fortitudeview_fx1"
		"d_fortitudeview_fx2" : "d_fortitudeview_fx2"
		"d_fortitudeview_infronthands" : "d_fortitudeview_infronthands"
		"d_fortitude_aura_emitter" : "d_fortitude_aura_emitter"
		"d_fortitude_bodyglowfx1" : "d_fortitude_bodyglowfx1"
		"d_fortitude_bodyglowfx2" : "d_fortitude_bodyglowfx2"
		"d_fortitude_emitter" : "d_fortitude_emitter"
		"d_full_resist_dem_emitter" : "d_full_resist_dem_emitter"
		"d_full_resist_dom_emitter" : "d_full_resist_dom_emitter"
		"d_full_resist_fx1" : "d_full_resist_fx1"
		"d_full_resist_fx2" : "d_full_resist_fx2"
		"d_full_resist_fx3" : "d_full_resist_fx3"
		"d_full_resist_generic_emitter" : "d_full_resist_generic_emitter"
		"d_full_resist_generic_fx1" : "d_full_resist_generic_fx1"
		"d_full_resist_generic_fx2" : "d_full_resist_generic_fx2"
		"d_full_resist_generic_fx3" : "d_full_resist_generic_fx3"
		"d_full_resist_thaum_emitter" : "d_full_resist_thaum_emitter"
		"d_obfuscatebroke_emitter" : "d_obfuscatebroke_emitter"
		"d_obfuscatein" : "d_obfuscatein"
		"d_obfuscatein_emitter" : "d_obfuscatein_emitter"
		"d_obfuscateout" : "d_obfuscateout"
		"d_obfuscateout_emitter" : "d_obfuscateout_emitter"
		"d_obfuscate_broken_fx1" : "d_obfuscate_broken_fx1"
		"d_partial_resist_dem_emitter" : "d_partial_resist_dem_emitter"
		"d_partial_resist_dom_emitter" : "d_partial_resist_dom_emitter"
		"d_partial_resist_thaum_emitter" : "d_partial_resist_thaum_emitter"
		"d_potence" : "d_potence"
		"d_potenceview" : "d_potenceview"
		"d_potenceview_emitter" : "d_potenceview_emitter"
		"d_potenceview_glow" : "d_potenceview_glow"
		"d_potence_1bp_bodyglow" : "d_potence_1bp_bodyglow"
		"d_potence_1bp_bodyglow2-normal" : "d_potence_1bp_bodyglow2-normal"
		"d_potence_1bp_bodyglow2" : "d_potence_1bp_bodyglow2"
		"d_potence_1bp_bodyglow3" : "d_potence_1bp_bodyglow3"
		"d_potence_1bp_emitter" : "d_potence_1bp_emitter"
		"d_potence_1bp_emitter_flashstart" : "d_potence_1bp_emitter_flashstart"
		"d_potence_1bp_emitter_hand" : "d_potence_1bp_emitter_hand"
		"d_potence_1bp_flash" : "d_potence_1bp_flash"
		"d_potence_1bp_flash2" : "d_potence_1bp_flash2"
		"d_potence_1bp_handglow" : "d_potence_1bp_handglow"
		"d_potence_1bp_handglow2" : "d_potence_1bp_handglow2"
		"d_potence_behindhands" : "d_potence_behindhands"
		"d_potence_behindhands2" : "d_potence_behindhands2"
		"d_potence_deathblow2_emitter" : "d_potence_deathblow2_emitter"
		"d_potence_deathblow_emitter" : "d_potence_deathblow_emitter"
		"d_potence_deathblow_shock" : "d_potence_deathblow_shock"
		"d_potence_deathblow_smoke" : "d_potence_deathblow_smoke"
		"d_potence_emitter" : "d_potence_emitter"
		"d_potence_hit-1_emitter" : "d_potence_hit-1_emitter"
		"d_potence_hit-1_glow" : "d_potence_hit-1_glow"
		"d_potence_hit-1_glowsmoke" : "d_potence_hit-1_glowsmoke"
		"d_potence_hit-1_shock" : "d_potence_hit-1_shock"
		"d_potence_hit-1_shockglow" : "d_potence_hit-1_shockglow"
		"d_potence_hit-2_emitter" : "d_potence_hit-2_emitter"
		"d_potence_hit-2_glow" : "d_potence_hit-2_glow"
		"d_potence_hit-2_shock" : "d_potence_hit-2_shock"
		"d_potence_hit-2_shockglow" : "d_potence_hit-2_shockglow"
		"d_potence_hit-3_emitter" : "d_potence_hit-3_emitter"
		"d_potence_hit-3_glow" : "d_potence_hit-3_glow"
		"d_potence_hit-3_shock" : "d_potence_hit-3_shock"
		"d_potence_hit-3_shockglow" : "d_potence_hit-3_shockglow"
		"d_potence_hit-4_emitter" : "d_potence_hit-4_emitter"
		"d_potence_hit-4_shock" : "d_potence_hit-4_shock"
		"d_potence_hit-4_shockglow" : "d_potence_hit-4_shockglow"
		"d_presenceview_emitter" : "d_presenceview_emitter"
		"d_presenceview_part1" : "d_presenceview_part1"
		"d_presenceview_part2" : "d_presenceview_part2"
		"d_presence_afraid_emitter" : "d_presence_afraid_emitter"
		"d_presence_afraid_fx1" : "d_presence_afraid_fx1"
		"d_presence_afraid_fx2" : "d_presence_afraid_fx2"
		"d_presence_aura" : "d_presence_aura"
		"d_presence_body_emitter" : "d_presence_body_emitter"
		"d_presence_cast2_fx1" : "d_presence_cast2_fx1"
		"d_presence_cast2_fx2" : "d_presence_cast2_fx2"
		"d_presence_cast2_fx3" : "d_presence_cast2_fx3"
		"d_presence_cast3_fx1" : "d_presence_cast3_fx1"
		"d_presence_cast3_fx2" : "d_presence_cast3_fx2"
		"d_presence_cast3_fx3" : "d_presence_cast3_fx3"
		"d_presence_cast4_fx1" : "d_presence_cast4_fx1"
		"d_presence_cast4_fx2" : "d_presence_cast4_fx2"
		"d_presence_cast4_fx3" : "d_presence_cast4_fx3"
		"d_presence_cast5_fx1" : "d_presence_cast5_fx1"
		"d_presence_cast5_fx2" : "d_presence_cast5_fx2"
		"d_presence_cast5_fx3" : "d_presence_cast5_fx3"
		"d_presence_cast_emitter1" : "d_presence_cast_emitter1"
		"d_presence_cast_emitter2" : "d_presence_cast_emitter2"
		"d_presence_cast_emitter3" : "d_presence_cast_emitter3"
		"d_presence_cast_emitter4" : "d_presence_cast_emitter4"
		"d_presence_cast_emitter5" : "d_presence_cast_emitter5"
		"d_presence_cast_fx1" : "d_presence_cast_fx1"
		"d_presence_cast_fx2" : "d_presence_cast_fx2"
		"d_presence_cast_fx3" : "d_presence_cast_fx3"
		"d_presence_daze_emitter" : "d_presence_daze_emitter"
		"d_presence_daze_fx1" : "d_presence_daze_fx1"
		"d_presence_daze_fx2" : "d_presence_daze_fx2"
		"d_presence_emitter" : "d_presence_emitter"
		"d_presence_halo" : "d_presence_halo"
		"d_presence_hud5_fx1" : "d_presence_hud5_fx1"
		"d_presence_hud5_fx2" : "d_presence_hud5_fx2"
		"d_presence_hud_emitter1" : "d_presence_hud_emitter1"
		"d_presence_hud_emitter2" : "d_presence_hud_emitter2"
		"d_presence_hud_emitter3" : "d_presence_hud_emitter3"
		"d_presence_hud_emitter4" : "d_presence_hud_emitter4"
		"d_presence_hud_emitter5" : "d_presence_hud_emitter5"
		"d_presence_mezmerize_broke_emitter" : "d_presence_mezmerize_broke_emitter"
		"d_presence_mezmerize_broke_fx1" : "d_presence_mezmerize_broke_fx1"
		"d_presence_mezmerize_broke_fx2" : "d_presence_mezmerize_broke_fx2"
		"d_presence_mezmerize_emitter" : "d_presence_mezmerize_emitter"
		"d_presence_mezmerize_fx1" : "d_presence_mezmerize_fx1"
		"d_presence_mezmerize_fx2" : "d_presence_mezmerize_fx2"
		"d_presence_nova1_fx1" : "d_presence_nova1_fx1"
		"d_presence_nova2_fx1" : "d_presence_nova2_fx1"
		"d_presence_nova3_fx1" : "d_presence_nova3_fx1"
		"d_presence_nova4_fx1" : "d_presence_nova4_fx1"
		"d_presence_nova5_fx1" : "d_presence_nova5_fx1"
		"d_presence_nova5_fx2" : "d_presence_nova5_fx2"
		"d_presence_nova_emitter1" : "d_presence_nova_emitter1"
		"d_presence_nova_emitter2" : "d_presence_nova_emitter2"
		"d_presence_nova_emitter3" : "d_presence_nova_emitter3"
		"d_presence_nova_emitter4" : "d_presence_nova_emitter4"
		"d_presence_nova_emitter5" : "d_presence_nova_emitter5"
		"d_presence_stars" : "d_presence_stars"
		"d_proteantransform_emitter" : "d_proteantransform_emitter"
		"d_proteanview_emitter" : "d_proteanview_emitter"
		"d_proteanview_part1" : "d_proteanview_part1"
		"d_proteanview_part2" : "d_proteanview_part2"
		"d_proteanview_part3" : "d_proteanview_part3"
		"d_protean_1bp_emitter" : "d_protean_1bp_emitter"
		"d_protean_1bp_eyes" : "d_protean_1bp_eyes"
		"d_protean_1bp_flash" : "d_protean_1bp_flash"
		"d_protean_1bp_flash2" : "d_protean_1bp_flash2"
		"d_protean_1bp_pupils" : "d_protean_1bp_pupils"
		"d_protean_1bp_ring" : "d_protean_1bp_ring"
		"d_protean_2bp_emitter" : "d_protean_2bp_emitter"
		"d_protean_2bp_emitter_lhand" : "d_protean_2bp_emitter_lhand"
		"d_protean_2bp_emitter_rhand" : "d_protean_2bp_emitter_rhand"
		"d_protean_2bp_flash1" : "d_protean_2bp_flash1"
		"d_protean_2bp_flash2" : "d_protean_2bp_flash2"
		"d_protean_2bp_hands1" : "d_protean_2bp_hands1"
		"d_protean_2bp_hands2" : "d_protean_2bp_hands2"
		"d_protean_2bp_hands3" : "d_protean_2bp_hands3"
		"d_protean_2bp_hands4" : "d_protean_2bp_hands4"
		"d_protean_3bp_bodyeffect" : "d_protean_3bp_bodyeffect"
		"d_protean_3bp_bodyflash" : "d_protean_3bp_bodyflash"
		"d_protean_3bp_bodymouth" : "d_protean_3bp_bodymouth"
		"d_protean_3bp_emitter" : "d_protean_3bp_emitter"
		"d_protean_3bp_emitter_mouth" : "d_protean_3bp_emitter_mouth"
		"d_protean_4bp_bodyeffect" : "d_protean_4bp_bodyeffect"
		"d_protean_4bp_bodyflash" : "d_protean_4bp_bodyflash"
		"d_protean_4bp_bodymouth" : "d_protean_4bp_bodymouth"
		"d_protean_4bp_emitter" : "d_protean_4bp_emitter"
		"d_protean_4bp_emitter_mouth" : "d_protean_4bp_emitter_mouth"
		"d_protean_5bp_bodyeffect" : "d_protean_5bp_bodyeffect"
		"d_protean_5bp_bodyflash" : "d_protean_5bp_bodyflash"
		"d_protean_5bp_emitter" : "d_protean_5bp_emitter"
		"d_protean_heatemitter" : "d_protean_heatemitter"
		"d_protean_heatparticle" : "d_protean_heatparticle"
		"d_target" : "d_target"
		"d_target_aura" : "d_target_aura"
		"d_target_aura2" : "d_target_aura2"
		"d_target_aura_emitter" : "d_target_aura_emitter"
		"d_target_emitter" : "d_target_emitter"
		"d_target_fx1-2" : "d_target_fx1-2"
		"d_target_fx1-3" : "d_target_fx1-3"
		"d_target_fx1" : "d_target_fx1"
		"d_target_fx2" : "d_target_fx2"
		"d_target_fx3-1" : "d_target_fx3-1"
		"d_target_fx3" : "d_target_fx3"
		"d_target_fx4" : "d_target_fx4"
		"d_target_fx5" : "d_target_fx5"
		"d_thaumaturgycast" : "d_thaumaturgycast"
		"d_thaumaturgycast_emitter" : "d_thaumaturgycast_emitter"
		"d_thaumaturgycast_stars" : "d_thaumaturgycast_stars"
		"d_thaumaturgyhit_bloodtrail" : "d_thaumaturgyhit_bloodtrail"
		"d_thaumaturgyhit_clouds" : "d_thaumaturgyhit_clouds"
		"d_thaumaturgyhit_emitter" : "d_thaumaturgyhit_emitter"
		"d_thaumaturgyhit_emitter_old" : "d_thaumaturgyhit_emitter_old"
		"d_thaumaturgyhit_groundsplats" : "d_thaumaturgyhit_groundsplats"
		"d_thaumaturgyhit_projectiles" : "d_thaumaturgyhit_projectiles"
		"d_thaumaturgyhit_skulls" : "d_thaumaturgyhit_skulls"
		"d_thaumaturgy_bloodboil-fx1-2" : "d_thaumaturgy_bloodboil-fx1-2"
		"d_thaumaturgy_bloodboil-fx1-3" : "d_thaumaturgy_bloodboil-fx1-3"
		"d_thaumaturgy_bloodboil-fx1" : "d_thaumaturgy_bloodboil-fx1"
		"d_thaumaturgy_bloodboil-fx2" : "d_thaumaturgy_bloodboil-fx2"
		"d_thaumaturgy_bloodboil-fx3" : "d_thaumaturgy_bloodboil-fx3"
		"d_thaumaturgy_bloodboil-fx4" : "d_thaumaturgy_bloodboil-fx4"
		"d_thaumaturgy_bloodboil-fx5" : "d_thaumaturgy_bloodboil-fx5"
		"d_thaumaturgy_bloodboil-fx6-drops" : "d_thaumaturgy_bloodboil-fx6-drops"
		"d_thaumaturgy_bloodboil_fatguy_fx1" : "d_thaumaturgy_bloodboil_fatguy_fx1"
		"d_thaumaturgy_bloodboil_fatguy_fx2" : "d_thaumaturgy_bloodboil_fatguy_fx2"
		"d_thaumaturgy_bloodboil_fatguy_fx3" : "d_thaumaturgy_bloodboil_fatguy_fx3"
		"d_thaumaturgy_bloodboil_fatguy_tgt2_fx1" : "d_thaumaturgy_bloodboil_fatguy_tgt2_fx1"
		"d_thaumaturgy_bloodboil_fatguy_tgt2_fx2" : "d_thaumaturgy_bloodboil_fatguy_tgt2_fx2"
		"d_thaumaturgy_bloodboil_fatguy_tgt_emitter" : "d_thaumaturgy_bloodboil_fatguy_tgt_emitter"
		"d_thaumaturgy_bloodboil_fatguy_tgt_emitter2" : "d_thaumaturgy_bloodboil_fatguy_tgt_emitter2"
		"d_thaumaturgy_bloodboil_fx2" : "d_thaumaturgy_bloodboil_fx2"
		"d_thaumaturgy_bloodboil_fx5_trail" : "d_thaumaturgy_bloodboil_fx5_trail"
		"d_thaumaturgy_bloodboil_ground_fx1" : "d_thaumaturgy_bloodboil_ground_fx1"
		"d_thaumaturgy_bloodboil_nova_emitter" : "d_thaumaturgy_bloodboil_nova_emitter"
		"d_thaumaturgy_bloodboil_nova_fx1" : "d_thaumaturgy_bloodboil_nova_fx1"
		"d_thaumaturgy_bloodboil_nova_fx2" : "d_thaumaturgy_bloodboil_nova_fx2"
		"d_thaumaturgy_bloodboil_nova_fx3" : "d_thaumaturgy_bloodboil_nova_fx3"
		"d_thaumaturgy_bloodboil_tgt2_fx1" : "d_thaumaturgy_bloodboil_tgt2_fx1"
		"d_thaumaturgy_bloodboil_tgt2_fx2" : "d_thaumaturgy_bloodboil_tgt2_fx2"
		"d_thaumaturgy_bloodboil_tgt_emitter" : "d_thaumaturgy_bloodboil_tgt_emitter"
		"d_thaumaturgy_bloodboil_tgt_emitter2" : "d_thaumaturgy_bloodboil_tgt_emitter2"
		"d_thaumaturgy_bloodrip_emitter" : "d_thaumaturgy_bloodrip_emitter"
		"d_thaumaturgy_bloodrip_mist" : "d_thaumaturgy_bloodrip_mist"
		"d_thaumaturgy_bloodrip_projectile" : "d_thaumaturgy_bloodrip_projectile"
		"d_thaumaturgy_bloodrip_trail" : "d_thaumaturgy_bloodrip_trail"
		"d_thaumaturgy_bloodshield_bloodtrailfx1" : "d_thaumaturgy_bloodshield_bloodtrailfx1"
		"d_thaumaturgy_bloodshield_bloodtrail_emitter" : "d_thaumaturgy_bloodshield_bloodtrail_emitter"
		"d_thaumaturgy_bloodshield_dripfx1" : "d_thaumaturgy_bloodshield_dripfx1"
		"d_thaumaturgy_bloodshield_dripfx2" : "d_thaumaturgy_bloodshield_dripfx2"
		"d_thaumaturgy_bloodshield_drip_emitter" : "d_thaumaturgy_bloodshield_drip_emitter"
		"d_thaumaturgy_bloodshield_hud_emitter" : "d_thaumaturgy_bloodshield_hud_emitter"
		"d_thaumaturgy_bloodshield_hud_fx1" : "d_thaumaturgy_bloodshield_hud_fx1"
		"d_thaumaturgy_bloodshot_emitter" : "d_thaumaturgy_bloodshot_emitter"
		"d_thaumaturgy_bloodshot_hud_emitter" : "d_thaumaturgy_bloodshot_hud_emitter"
		"d_thaumaturgy_bloodshot_hud_fx1" : "d_thaumaturgy_bloodshot_hud_fx1"
		"d_thaumaturgy_bloodshot_hud_fx2" : "d_thaumaturgy_bloodshot_hud_fx2"
		"d_thaumaturgy_bloodshot_return_burst_emitter" : "d_thaumaturgy_bloodshot_return_burst_emitter"
		"d_thaumaturgy_bloodshot_return_emitter" : "d_thaumaturgy_bloodshot_return_emitter"
		"d_thaumaturgy_bloodshot_tgt_emitter" : "d_thaumaturgy_bloodshot_tgt_emitter"
		"d_thaumaturgy_bloodstrike_broke_emitter" : "d_thaumaturgy_bloodstrike_broke_emitter"
		"d_thaumaturgy_bloodstrike_broke_fx1" : "d_thaumaturgy_bloodstrike_broke_fx1"
		"d_thaumaturgy_bloodstrike_broke_fx2" : "d_thaumaturgy_bloodstrike_broke_fx2"
		"d_thaumaturgy_bloodvomit_hud_emitter" : "d_thaumaturgy_bloodvomit_hud_emitter"
		"d_thaumaturgy_bloodvomit_hud_fx1" : "d_thaumaturgy_bloodvomit_hud_fx1"
		"d_thaumaturgy_bloodvomit_hud_fx2" : "d_thaumaturgy_bloodvomit_hud_fx2"
		"d_thaumaturgy_bloodvomit_hud_fx3" : "d_thaumaturgy_bloodvomit_hud_fx3"
		"d_thaumaturgy_bloodvomit_hud_fx4" : "d_thaumaturgy_bloodvomit_hud_fx4"
		"d_thaumaturgy_bloodvomit_hud_fx5" : "d_thaumaturgy_bloodvomit_hud_fx5"
		"d_thaumaturgy_bloodvomit_nova_emitter" : "d_thaumaturgy_bloodvomit_nova_emitter"
		"d_thaumaturgy_bloodvomit_nova_fx1" : "d_thaumaturgy_bloodvomit_nova_fx1"
		"d_thaumaturgy_bloodvomit_nova_fx2" : "d_thaumaturgy_bloodvomit_nova_fx2"
		"d_thaumaturgy_bloodvomit_nova_fx3" : "d_thaumaturgy_bloodvomit_nova_fx3"
		"d_thaumaturgy_bloodvomit_nova_fx4" : "d_thaumaturgy_bloodvomit_nova_fx4"
		"d_thaumaturgy_bloodvomit_nova_fx5" : "d_thaumaturgy_bloodvomit_nova_fx5"
		"d_thaumaturgy_bloodvomit_tgt_emitter" : "d_thaumaturgy_bloodvomit_tgt_emitter"
		"d_thaumaturgy_bloodvomit_tgt_fx1" : "d_thaumaturgy_bloodvomit_tgt_fx1"
		"d_thaumaturgy_blooshot_fx1" : "d_thaumaturgy_blooshot_fx1"
		"d_thaumaturgy_cast_emitter" : "d_thaumaturgy_cast_emitter"
		"d_thaumaturgy_cast_fx1" : "d_thaumaturgy_cast_fx1"
		"d_thaumaturgy_cast_fx2" : "d_thaumaturgy_cast_fx2"
		"d_thaumaturgy_distort" : "d_thaumaturgy_distort"
		"d_thaumaturgy_distort_emitter" : "d_thaumaturgy_distort_emitter"
		"d_thaumaturgy_exlpode-fx1" : "d_thaumaturgy_exlpode-fx1"
		"d_thaumaturgy_exlpode-fx2" : "d_thaumaturgy_exlpode-fx2"
		"d_thaumaturgy_exlpode-fx3" : "d_thaumaturgy_exlpode-fx3"
		"d_thaumaturgy_inflict" : "d_thaumaturgy_inflict"
		"d_thaum_bld_bloodboil_tgt_emitter" : "d_thaum_bld_bloodboil_tgt_emitter"
		"d_thaum_bld_bloodvomit_tgt_emitter" : "d_thaum_bld_bloodvomit_tgt_emitter"
		"d_thaum_bld_bloodyeye_tgt_emitter" : "d_thaum_bld_bloodyeye_tgt_emitter"
		"d_thaum_bld_blood_boil_tgt_emitter" : "d_thaum_bld_blood_boil_tgt_emitter"
		"d_thaum_bld_cauldron_explode_tgt_emitter" : "d_thaum_bld_cauldron_explode_tgt_emitter"
		"d_thaum_bld_cauldron_tgt_emitter" : "d_thaum_bld_cauldron_tgt_emitter"
		"d_thaum_bld_cauldron_tgt_emitter_old" : "d_thaum_bld_cauldron_tgt_emitter_old"
		"d_thaum_bld_cauldron_tgt_part2" : "d_thaum_bld_cauldron_tgt_part2"
		"d_thaum_bld_theftofvitae_part1" : "d_thaum_bld_theftofvitae_part1"
		"d_thaum_bld_theftofvitae_part2" : "d_thaum_bld_theftofvitae_part2"
		"d_thaum_bld_theftofvitae_src_view_emitter" : "d_thaum_bld_theftofvitae_src_view_emitter"
		"d_thaum_bld_theftofvitae_tgt_bloodsmoke" : "d_thaum_bld_theftofvitae_tgt_bloodsmoke"
		"d_thaum_bld_theftofvitae_tgt_emitter" : "d_thaum_bld_theftofvitae_tgt_emitter"
		"d_thaum_blooddrops" : "d_thaum_blooddrops"
		"d_thaum_bloodtrail" : "d_thaum_bloodtrail"
		"d_thaum_bloodtrail2" : "d_thaum_bloodtrail2"
		"electrical_sparks_emitter" : "electrical_sparks_emitter"
		"electrical_sparks_spark1" : "electrical_sparks_spark1"
		"electrical_sparks_spark2" : "electrical_sparks_spark2"
		"electrical_sparks_spark3" : "electrical_sparks_spark3"
		"electrical_sparks_spark4" : "electrical_sparks_spark4"
		"electrical_strike" : "electrical_strike"
		"embersmoke" : "embersmoke"
		"embersmokedummy" : "embersmokedummy"
		"embrace_bleeding_neck" : "embrace_bleeding_neck"
		"embrace_bleeding_neck2" : "embrace_bleeding_neck2"
		"embrace_bleeding_neck2_female" : "embrace_bleeding_neck2_female"
		"embrace_bleeding_neck_female" : "embrace_bleeding_neck_female"
		"embrace_bleeding_neck_fx1-2" : "embrace_bleeding_neck_fx1-2"
		"embrace_bleeding_neck_fx1-3" : "embrace_bleeding_neck_fx1-3"
		"embrace_bleeding_neck_fx1" : "embrace_bleeding_neck_fx1"
		"embrace_bleeding_neck_fx2-1" : "embrace_bleeding_neck_fx2-1"
		"embrace_bleeding_neck_fx2" : "embrace_bleeding_neck_fx2"
		"embrace_bleeding_neck_fx3-1" : "embrace_bleeding_neck_fx3-1"
		"embrace_bleeding_neck_fx3" : "embrace_bleeding_neck_fx3"
		"epilogue_consuming_darkness" : "epilogue_consuming_darkness"
		"epilogue_consuming_darkness_fx1" : "epilogue_consuming_darkness_fx1"
		"epilogue_consuming_darkness_fx2" : "epilogue_consuming_darkness_fx2"
		"epilogue_consuming_darkness_fx3" : "epilogue_consuming_darkness_fx3"
		"epilogue_consuming_darkness_fx4" : "epilogue_consuming_darkness_fx4"
		"epilogue_ventrue_fire_emitter" : "epilogue_ventrue_fire_emitter"
		"ethereal_flame_emitter_01-burst" : "ethereal_flame_emitter_01-burst"
		"ethereal_flame_emitter_01-tornado" : "ethereal_flame_emitter_01-tornado"
		"ethereal_flame_emitter_01" : "ethereal_flame_emitter_01"
		"ethereal_flame_emitter_02" : "ethereal_flame_emitter_02"
		"ethereal_flame_emitter_04-tornado" : "ethereal_flame_emitter_04-tornado"
		"ethereal_flame_emitter_04" : "ethereal_flame_emitter_04"
		"ethereal_flame_emitter_04a" : "ethereal_flame_emitter_04a"
		"ethereal_flame_fire01-bubble" : "ethereal_flame_fire01-bubble"
		"ethereal_flame_fire01-burst" : "ethereal_flame_fire01-burst"
		"ethereal_flame_fire01" : "ethereal_flame_fire01"
		"ethereal_flame_fire02-bubble" : "ethereal_flame_fire02-bubble"
		"ethereal_flame_fire02-burst" : "ethereal_flame_fire02-burst"
		"ethereal_flame_fire02-tornado" : "ethereal_flame_fire02-tornado"
		"ethereal_flame_fire02" : "ethereal_flame_fire02"
		"ethereal_flame_fire03-bubble" : "ethereal_flame_fire03-bubble"
		"ethereal_flame_fire03-burst" : "ethereal_flame_fire03-burst"
		"ethereal_flame_fire03-tornado" : "ethereal_flame_fire03-tornado"
		"ethereal_flame_fire03" : "ethereal_flame_fire03"
		"ethereal_flame_fire04-bubble" : "ethereal_flame_fire04-bubble"
		"ethereal_flame_fire04-burst" : "ethereal_flame_fire04-burst"
		"ethereal_flame_fire04-tornado" : "ethereal_flame_fire04-tornado"
		"ethereal_flame_fire04" : "ethereal_flame_fire04"
		"ethereal_fling_emitter" : "ethereal_fling_emitter"
		"ethereal_fling_fire01" : "ethereal_fling_fire01"
		"ethereal_fling_fire02" : "ethereal_fling_fire02"
		"ethereal_fling_fire03" : "ethereal_fling_fire03"
		"ethereal_fling_fire04" : "ethereal_fling_fire04"
		"ethereal_hud_boom-emitter" : "ethereal_hud_boom-emitter"
		"ethereal_hud_boom-fx1" : "ethereal_hud_boom-fx1"
		"ethereal_hud_boom-fx2" : "ethereal_hud_boom-fx2"
		"ethereal_hud_boom-fx3" : "ethereal_hud_boom-fx3"
		"ethereal_shake_emitter" : "ethereal_shake_emitter"
		"ethereal_shake_fire01" : "ethereal_shake_fire01"
		"ethereal_shake_fire02" : "ethereal_shake_fire02"
		"ethereal_shake_fire03" : "ethereal_shake_fire03"
		"ethereal_shake_fire04" : "ethereal_shake_fire04"
		"explosion1_emitter" : "explosion1_emitter"
		"explosion2_emitter" : "explosion2_emitter"
		"explosionsparks" : "explosionsparks"
		"explosion_fx1" : "explosion_fx1"
		"explosion_fx2" : "explosion_fx2"
		"explosion_fx3" : "explosion_fx3"
		"explosion_fx4" : "explosion_fx4"
		"explosion_towercrush_emitter" : "explosion_towercrush_emitter"
		"ex_center" : "ex_center"
		"ex_flare" : "ex_flare"
		"ex_outerrim-glow" : "ex_outerrim-glow"
		"ex_outerrim" : "ex_outerrim"
		"ex_outerrim2" : "ex_outerrim2"
		"ex_outerrim3" : "ex_outerrim3"
		"ex_ring" : "ex_ring"
		"ex_sparks" : "ex_sparks"
		"falling_dust_emitter" : "falling_dust_emitter"
		"falling_dust_particle" : "falling_dust_particle"
		"fire1_blowout_emitter" : "fire1_blowout_emitter"
		"fire1_blowout_emitter2" : "fire1_blowout_emitter2"
		"fire1_blowout_emitter3" : "fire1_blowout_emitter3"
		"fire1_blowout_emitter4" : "fire1_blowout_emitter4"
		"fire1_emitter" : "fire1_emitter"
		"fire2_emitter" : "fire2_emitter"
		"fire3_emitter" : "fire3_emitter"
		"fireballs1" : "fireballs1"
		"fireball_emitter" : "fireball_emitter"
		"firebrush_large_floor_emitter" : "firebrush_large_floor_emitter"
		"firebrush_large_floor_fx1" : "firebrush_large_floor_fx1"
		"firebrush_large_floor_fx2" : "firebrush_large_floor_fx2"
		"firebrush_large_floor_fx3" : "firebrush_large_floor_fx3"
		"firebrush_large_wall_emitter" : "firebrush_large_wall_emitter"
		"firebrush_large_wall_fx1" : "firebrush_large_wall_fx1"
		"firebrush_medium_floor_emitter" : "firebrush_medium_floor_emitter"
		"firebrush_medium_floor_fx1" : "firebrush_medium_floor_fx1"
		"firebrush_medium_floor_fx2" : "firebrush_medium_floor_fx2"
		"firebrush_medium_floor_fx3" : "firebrush_medium_floor_fx3"
		"firebrush_medium_wall_emitter" : "firebrush_medium_wall_emitter"
		"firebrush_medium_wall_fx1" : "firebrush_medium_wall_fx1"
		"firebrush_small_floor_emitter" : "firebrush_small_floor_emitter"
		"firebrush_small_floor_fx1" : "firebrush_small_floor_fx1"
		"firebrush_small_floor_fx2" : "firebrush_small_floor_fx2"
		"firebrush_small_floor_fx3" : "firebrush_small_floor_fx3"
		"firebrush_small_wall_emitter" : "firebrush_small_wall_emitter"
		"firebrush_small_wall_fx1" : "firebrush_small_wall_fx1"
		"firebrush_small_wall_fx3" : "firebrush_small_wall_fx3"
		"fireplace_emitter" : "fireplace_emitter"
		"fireplace_emitter2" : "fireplace_emitter2"
		"fireplace_flames" : "fireplace_flames"
		"firetrail" : "firetrail"
		"fire_smokey_air_emitter" : "fire_smokey_air_emitter"
		"fire_smokey_air_fx1" : "fire_smokey_air_fx1"
		"flameblur" : "flameblur"
		"flamebrush" : "flamebrush"
		"flamecluster_node_emitter" : "flamecluster_node_emitter"
		"flameembers1" : "flameembers1"
		"flameembers1_blowout" : "flameembers1_blowout"
		"flameglow1" : "flameglow1"
		"flameglow2" : "flameglow2"
		"flameglow3" : "flameglow3"
		"flameprojectile" : "flameprojectile"
		"flameprojectile2" : "flameprojectile2"
		"flameprojectile3" : "flameprojectile3"
		"flameprojectile_emitter" : "flameprojectile_emitter"
		"flames1" : "flames1"
		"flames1_blowout" : "flames1_blowout"
		"flames2" : "flames2"
		"flames3" : "flames3"
		"flamethrow1" : "flamethrow1"
		"flamethrow2" : "flamethrow2"
		"flamethrowerfire_emitter" : "flamethrowerfire_emitter"
		"flamethrowersmoke" : "flamethrowersmoke"
		"flamethrowertendril" : "flamethrowertendril"
		"flamethrowertendril2" : "flamethrowertendril2"
		"flamethrowertrail" : "flamethrowertrail"
		"flamethrower_air-fx1" : "flamethrower_air-fx1"
		"flamethrower_air-fx2" : "flamethrower_air-fx2"
		"flamethrower_air-fx3" : "flamethrower_air-fx3"
		"flamethrower_chain_emitter" : "flamethrower_chain_emitter"
		"flamethrower_chain_emitter_jda" : "flamethrower_chain_emitter_jda"
		"flamethrower_flames" : "flamethrower_flames"
		"flamethrower_hit_flame-emitter" : "flamethrower_hit_flame-emitter"
		"flamethrower_hit_glow-emitter" : "flamethrower_hit_glow-emitter"
		"flamethrower_hit_none-emitter" : "flamethrower_hit_none-emitter"
		"flamethrower_hit_steam-emitter" : "flamethrower_hit_steam-emitter"
		"flamethrower_muzzle_active_emitter" : "flamethrower_muzzle_active_emitter"
		"flamethrower_muzzle_active_fx-1" : "flamethrower_muzzle_active_fx-1"
		"flamethrower_muzzle_active_fx-2" : "flamethrower_muzzle_active_fx-2"
		"flamethrower_muzzle_active_fx-3" : "flamethrower_muzzle_active_fx-3"
		"flamethrower_muzzle_active_fx-4" : "flamethrower_muzzle_active_fx-4"
		"flamethrower_muzzle_active_fx-5" : "flamethrower_muzzle_active_fx-5"
		"flamethrower_muzzle_active_fx-6" : "flamethrower_muzzle_active_fx-6"
		"flamethrower_muzzle_inactive_emitter" : "flamethrower_muzzle_inactive_emitter"
		"flamethrower_muzzle_inactive_fx-1" : "flamethrower_muzzle_inactive_fx-1"
		"flamethrower_none-emitter" : "flamethrower_none-emitter"
		"flametrailup" : "flametrailup"
		"flametrailup2" : "flametrailup2"
		"flametrail_stationary" : "flametrail_stationary"
		"flametrail_stationary2" : "flametrail_stationary2"
		"flametrail_stationary2_mirror" : "flametrail_stationary2_mirror"
		"flametrail_stationary_mirror" : "flametrail_stationary_mirror"
		"flame_gout_emitter" : "flame_gout_emitter"
		"flame_gout_flame1" : "flame_gout_flame1"
		"flame_stationary" : "flame_stationary"
		"flame_stationary_mirror" : "flame_stationary_mirror"
		"flame_stationary_smoke" : "flame_stationary_smoke"
		"flash1" : "flash1"
		"fly_emitter" : "fly_emitter"
		"fly_fx1" : "fly_fx1"
		"force_feeding_emitter" : "force_feeding_emitter"
		"force_feeding_fx1" : "force_feeding_fx1"
		"force_feeding_fx2" : "force_feeding_fx2"
		"frost_cloud" : "frost_cloud"
		"frost_cloud_emitter" : "frost_cloud_emitter"
		"ft_center" : "ft_center"
		"ft_collide" : "ft_collide"
		"ft_collide2" : "ft_collide2"
		"ft_collide_heatwave" : "ft_collide_heatwave"
		"ft_embers1" : "ft_embers1"
		"ft_embers2" : "ft_embers2"
		"ft_emission1" : "ft_emission1"
		"ft_emission2" : "ft_emission2"
		"ft_emission3" : "ft_emission3"
		"ft_explosion1" : "ft_explosion1"
		"ft_explosion2" : "ft_explosion2"
		"ft_fireleft-glow" : "ft_fireleft-glow"
		"ft_fireleft" : "ft_fireleft"
		"ft_fireleft2" : "ft_fireleft2"
		"ft_fireleft3" : "ft_fireleft3"
		"ft_hit_steamfx1" : "ft_hit_steamfx1"
		"ft_hit_steamfx2" : "ft_hit_steamfx2"
		"ft_outerrim" : "ft_outerrim"
		"ft_outerrim2" : "ft_outerrim2"
		"ft_smoke" : "ft_smoke"
		"ft_smoke1" : "ft_smoke1"
		"fuflame_stationary" : "fuflame_stationary"
		"fuflame_stationary_mirror" : "fuflame_stationary_mirror"
		"furball2_normal" : "furball2_normal"
		"furball_normal" : "furball_normal"
		"gargoyle_land-emitter" : "gargoyle_land-emitter"
		"gargoyle_land-fx1" : "gargoyle_land-fx1"
		"gargoyle_land-fx2" : "gargoyle_land-fx2"
		"gargoyle_land-fx3" : "gargoyle_land-fx3"
		"gargoyle_land-fx4" : "gargoyle_land-fx4"
		"gargoyle_land-fx5" : "gargoyle_land-fx5"
		"gasoline_fire_emitter" : "gasoline_fire_emitter"
		"gasoline_fire_start_emitter" : "gasoline_fire_start_emitter"
		"gasoline_fire_start_fx1-trail" : "gasoline_fire_start_fx1-trail"
		"gasoline_fire_start_fx1" : "gasoline_fire_start_fx1"
		"gasoline_fire_start_fx2" : "gasoline_fire_start_fx2"
		"gasoline_fire_start_ring" : "gasoline_fire_start_ring"
		"gasoline_fire_trail_emitter" : "gasoline_fire_trail_emitter"
		"gasoline_fire_trail_fx1-flamelead" : "gasoline_fire_trail_fx1-flamelead"
		"gasoline_fire_trail_fx1-flameline-glow" : "gasoline_fire_trail_fx1-flameline-glow"
		"gasoline_fire_trail_fx1-flameline" : "gasoline_fire_trail_fx1-flameline"
		"gasoline_fire_trail_fx1" : "gasoline_fire_trail_fx1"
		"gasoline_fire_wall-of-fire-emitter" : "gasoline_fire_wall-of-fire-emitter"
		"gasoline_fire_wall-of-fire-fx1" : "gasoline_fire_wall-of-fire-fx1"
		"gasoline_fire_wall-of-fire-fx2" : "gasoline_fire_wall-of-fire-fx2"
		"gasoline_fire_wall-of-fire-fx3" : "gasoline_fire_wall-of-fire-fx3"
		"gasoline_fire_wall-of-fire-fx4" : "gasoline_fire_wall-of-fire-fx4"
		"gasoline_fire_wall-of-fire-fx5" : "gasoline_fire_wall-of-fire-fx5"
		"gasoline_fire_wall-of-fire-fx6" : "gasoline_fire_wall-of-fire-fx6"
		"gasroom2_fx1" : "gasroom2_fx1"
		"gasroom2_fx2" : "gasroom2_fx2"
		"gasroom_emitter" : "gasroom_emitter"
		"gasroom_emitter2" : "gasroom_emitter2"
		"gasroom_fx1" : "gasroom_fx1"
		"gasroom_fx2" : "gasroom_fx2"
		"glowywierd" : "glowywierd"
		"glowywierd_emitter" : "glowywierd_emitter"
		"grenade_concussion_emitter" : "grenade_concussion_emitter"
		"grenade_frag_emitter" : "grenade_frag_emitter"
		"grenade_frag_emitter_old" : "grenade_frag_emitter_old"
		"grenade_frag_fire1" : "grenade_frag_fire1"
		"grenade_frag_fire2" : "grenade_frag_fire2"
		"grenade_frag_flash1" : "grenade_frag_flash1"
		"grenade_smoke_emitter" : "grenade_smoke_emitter"
		"hengeyokai_freeze_emitter" : "hengeyokai_freeze_emitter"
		"hengeyokai_freeze_fx1" : "hengeyokai_freeze_fx1"
		"hengeyokai_freeze_fx2" : "hengeyokai_freeze_fx2"
		"hud_bloodshield_bulletimpact" : "hud_bloodshield_bulletimpact"
		"hud_fire_emitter" : "hud_fire_emitter"
		"hud_fire_flames" : "hud_fire_flames"
		"hud_fire_glow" : "hud_fire_glow"
		"hud_fortitude_bulletimpact" : "hud_fortitude_bulletimpact"
		"hud_fortitude_bulletimpact2" : "hud_fortitude_bulletimpact2"
		"hud_fortitude_bulletimpact_emitter" : "hud_fortitude_bulletimpact_emitter"
		"hud_manbat_emitter" : "hud_manbat_emitter"
		"hud_manbat_fx1" : "hud_manbat_fx1"
		"hud_shocked_emitter" : "hud_shocked_emitter"
		"hud_shocked_fx1" : "hud_shocked_fx1"
		"hud_shocked_fx2" : "hud_shocked_fx2"
		"hud_shocked_fx3" : "hud_shocked_fx3"
		"hud_targeting_emitter" : "hud_targeting_emitter"
		"hud_targeting_emitter_foe" : "hud_targeting_emitter_foe"
		"hud_targeting_emitter_friend" : "hud_targeting_emitter_friend"
		"hud_target_foe_fx3" : "hud_target_foe_fx3"
		"hud_target_friend_fx3" : "hud_target_friend_fx3"
		"hud_target_fx1" : "hud_target_fx1"
		"hud_target_fx2" : "hud_target_fx2"
		"hud_target_fx3" : "hud_target_fx3"
		"hud_tzim2_emitter" : "hud_tzim2_emitter"
		"hud_tzim2_fx1" : "hud_tzim2_fx1"
		"hud_tzim2_fx2" : "hud_tzim2_fx2"
		"hud_tzim2_fx3" : "hud_tzim2_fx3"
		"hud_tzim2_fx4" : "hud_tzim2_fx4"
		"hud_tzim2_fx5" : "hud_tzim2_fx5"
		"hud_tzim2_fx6" : "hud_tzim2_fx6"
		"impactclaws_flesh_clawflash" : "impactclaws_flesh_clawflash"
		"impactclaws_flesh_clawmarks" : "impactclaws_flesh_clawmarks"
		"impactclaws_flesh_emitter" : "impactclaws_flesh_emitter"
		"impactfx_blackenddustpuff" : "impactfx_blackenddustpuff"
		"impactfx_blooddrops" : "impactfx_blooddrops"
		"impactfx_bloodspatter" : "impactfx_bloodspatter"
		"impactfx_bloodspatter_back" : "impactfx_bloodspatter_back"
		"impactfx_bloodspatter_base" : "impactfx_bloodspatter_base"
		"impactfx_bloodspatter_out" : "impactfx_bloodspatter_out"
		"impactfx_bloodspatter_out2" : "impactfx_bloodspatter_out2"
		"impactfx_bloodsplat" : "impactfx_bloodsplat"
		"impactfx_colordustpuff" : "impactfx_colordustpuff"
		"impactfx_debries" : "impactfx_debries"
		"impactfx_debrietrickle_p1" : "impactfx_debrietrickle_p1"
		"impactfx_debrietrickle_p2" : "impactfx_debrietrickle_p2"
		"impactfx_dirtpuff" : "impactfx_dirtpuff"
		"impactfx_dirtpuff2" : "impactfx_dirtpuff2"
		"impactfx_dustpuff" : "impactfx_dustpuff"
		"impactfx_dustpuff2" : "impactfx_dustpuff2"
		"impactfx_flash" : "impactfx_flash"
		"impactfx_flash_large" : "impactfx_flash_large"
		"impactfx_flash_yellow" : "impactfx_flash_yellow"
		"impactfx_glassspray" : "impactfx_glassspray"
		"impactfx_mc_generichit1" : "impactfx_mc_generichit1"
		"impactfx_mc_generichit2" : "impactfx_mc_generichit2"
		"impactfx_mc_generichit3" : "impactfx_mc_generichit3"
		"impactfx_mc_generichit4" : "impactfx_mc_generichit4"
		"impactfx_mc_generichit5_normalmap" : "impactfx_mc_generichit5_normalmap"
		"impactfx_mc_generic_ranged_1" : "impactfx_mc_generic_ranged_1"
		"impactfx_mc_generic_ranged_2" : "impactfx_mc_generic_ranged_2"
		"impactfx_mc_generic_ranged_3" : "impactfx_mc_generic_ranged_3"
		"impactfx_mc_generic_ranged_4" : "impactfx_mc_generic_ranged_4"
		"impactfx_mc_generic_ranged_5" : "impactfx_mc_generic_ranged_5"
		"impactfx_melee_generic" : "impactfx_melee_generic"
		"impactfx_ranged_generic" : "impactfx_ranged_generic"
		"impactfx_shards" : "impactfx_shards"
		"impactfx_soakhit1" : "impactfx_soakhit1"
		"impactfx_soakhit2" : "impactfx_soakhit2"
		"impactfx_soakhit3" : "impactfx_soakhit3"
		"impactfx_soakpuff" : "impactfx_soakpuff"
		"impactfx_soakspray" : "impactfx_soakspray"
		"impactfx_sparks" : "impactfx_sparks"
		"impactfx_sparkspray" : "impactfx_sparkspray"
		"impactfx_sparkspray_blue" : "impactfx_sparkspray_blue"
		"impactfx_sparks_blue" : "impactfx_sparks_blue"
		"impactfx_sparks_long" : "impactfx_sparks_long"
		"impactfx_splinters" : "impactfx_splinters"
		"impactfx_test1" : "impactfx_test1"
		"impactfx_test2" : "impactfx_test2"
		"impactmac10_concrete_emitter" : "impactmac10_concrete_emitter"
		"impactmac10_dirt_emitter" : "impactmac10_dirt_emitter"
		"impactmac10_flesh_emitter" : "impactmac10_flesh_emitter"
		"impactmac10_wood_emitter" : "impactmac10_wood_emitter"
		"impactshotgun_concrete_emitter" : "impactshotgun_concrete_emitter"
		"impactshotgun_dirt_emitter" : "impactshotgun_dirt_emitter"
		"impactshotgun_flesh_emitter" : "impactshotgun_flesh_emitter"
		"impactshotgun_wood_emitter" : "impactshotgun_wood_emitter"
		"impact_bloodshield_fx1" : "impact_bloodshield_fx1"
		"impact_bloodshield_fx2" : "impact_bloodshield_fx2"
		"impact_bloodshield_soak_emitter" : "impact_bloodshield_soak_emitter"
		"impact_concrete_emitter" : "impact_concrete_emitter"
		"impact_dirt_emitter" : "impact_dirt_emitter"
		"impact_dust_emitter" : "impact_dust_emitter"
		"impact_dust_fx1" : "impact_dust_fx1"
		"impact_fleshbase_emitter" : "impact_fleshbase_emitter"
		"impact_fleshshotg_emitter" : "impact_fleshshotg_emitter"
		"impact_flesh_emitter" : "impact_flesh_emitter"
		"impact_fortitude_fx1" : "impact_fortitude_fx1"
		"impact_fortitude_fx2" : "impact_fortitude_fx2"
		"impact_fortitude_soak_emitter" : "impact_fortitude_soak_emitter"
		"impact_fx_bloodspray_emitter" : "impact_fx_bloodspray_emitter"
		"impact_fx_bloodspray_fx1" : "impact_fx_bloodspray_fx1"
		"impact_fx_bloodspray_fx2" : "impact_fx_bloodspray_fx2"
		"impact_fx_explosion" : "impact_fx_explosion"
		"impact_gargoyle_emitter" : "impact_gargoyle_emitter"
		"impact_glass_emitter" : "impact_glass_emitter"
		"impact_malk_sparks" : "impact_malk_sparks"
		"impact_metal_emitter" : "impact_metal_emitter"
		"impact_soak_emitter" : "impact_soak_emitter"
		"impact_test" : "impact_test"
		"impact_wood_emitter" : "impact_wood_emitter"
		"incense_emitter" : "incense_emitter"
		"inspection_brush_emitter" : "inspection_brush_emitter"
		"inspection_brush_insight_emitter" : "inspection_brush_insight_emitter"
		"inspection_emitter" : "inspection_emitter"
		"inspection_insight_emitter" : "inspection_insight_emitter"
		"inspection_insight_stars" : "inspection_insight_stars"
		"inspection_insight_stars2" : "inspection_insight_stars2"
		"inspection_stars" : "inspection_stars"
		"inspection_stars2" : "inspection_stars2"
		"lasombra_teleport_fx1-body" : "lasombra_teleport_fx1-body"
		"lasombra_teleport_fx1" : "lasombra_teleport_fx1"
		"lasombra_teleport_fx2" : "lasombra_teleport_fx2"
		"lasombra_teleport_fx3" : "lasombra_teleport_fx3"
		"lasombra_teleport_in-body" : "lasombra_teleport_in-body"
		"lasombra_teleport_in" : "lasombra_teleport_in"
		"lasombra_teleport_out-body" : "lasombra_teleport_out-body"
		"lasombra_teleport_out" : "lasombra_teleport_out"
		"la_crackhouse_1_bishop_vick_1_emitter" : "la_crackhouse_1_bishop_vick_1_emitter"
		"la_malkavian2_spark_emitter" : "la_malkavian2_spark_emitter"
		"la_malkavian_4_ash_emitter" : "la_malkavian_4_ash_emitter"
		"la_malkavian_4_ghoul_body_fire_emitter" : "la_malkavian_4_ghoul_body_fire_emitter"
		"lightbulb_pop_emitter" : "lightbulb_pop_emitter"
		"lightbulb_pop_spark1" : "lightbulb_pop_spark1"
		"lightbulb_pop_spark2" : "lightbulb_pop_spark2"
		"lightbulb_pop_spark3" : "lightbulb_pop_spark3"
		"lightbulb_pop_spark4" : "lightbulb_pop_spark4"
		"manbat_player_emitter" : "manbat_player_emitter"
		"manbat_player_fx1-1" : "manbat_player_fx1-1"
		"manbat_player_fx1-2" : "manbat_player_fx1-2"
		"manbat_player_fx1" : "manbat_player_fx1"
		"manbat_screechcone_emitter" : "manbat_screechcone_emitter"
		"manbat_screechcone_fx1" : "manbat_screechcone_fx1"
		"ming_xiao_baby_death_emitter" : "ming_xiao_baby_death_emitter"
		"ming_xiao_baby_death_fx1" : "ming_xiao_baby_death_fx1"
		"ming_xiao_baby_hit_emitter" : "ming_xiao_baby_hit_emitter"
		"ming_xiao_baby_hit_emmitter" : "ming_xiao_baby_hit_emmitter"
		"ming_xiao_burst_trail_fx1" : "ming_xiao_burst_trail_fx1"
		"ming_xiao_death2_fx1" : "ming_xiao_death2_fx1"
		"ming_xiao_death2_fx2" : "ming_xiao_death2_fx2"
		"ming_xiao_death2_fx3" : "ming_xiao_death2_fx3"
		"ming_xiao_death2_fx4" : "ming_xiao_death2_fx4"
		"ming_xiao_death2_fx5" : "ming_xiao_death2_fx5"
		"ming_xiao_death_emitter" : "ming_xiao_death_emitter"
		"ming_xiao_death_emitter2" : "ming_xiao_death_emitter2"
		"ming_xiao_death_fx1" : "ming_xiao_death_fx1"
		"ming_xiao_death_fx2" : "ming_xiao_death_fx2"
		"ming_xiao_death_fx3" : "ming_xiao_death_fx3"
		"ming_xiao_death_fx4" : "ming_xiao_death_fx4"
		"ming_xiao_death_fx5" : "ming_xiao_death_fx5"
		"ming_xiao_death_proxy_emitter" : "ming_xiao_death_proxy_emitter"
		"ming_xiao_death_proxy_fx3" : "ming_xiao_death_proxy_fx3"
		"ming_xiao_death_trail_fx1" : "ming_xiao_death_trail_fx1"
		"ming_xiao_death_trail_fx2" : "ming_xiao_death_trail_fx2"
		"ming_xiao_hit_emitter" : "ming_xiao_hit_emitter"
		"ming_xiao_hit_emmitter" : "ming_xiao_hit_emmitter"
		"ming_xiao_hud_vomit_emitter" : "ming_xiao_hud_vomit_emitter"
		"ming_xiao_slimetrail_emitter" : "ming_xiao_slimetrail_emitter"
		"ming_xiao_slimetrail_emitter2" : "ming_xiao_slimetrail_emitter2"
		"ming_xiao_slimetrail_fx1-1" : "ming_xiao_slimetrail_fx1-1"
		"ming_xiao_slimetrail_fx1" : "ming_xiao_slimetrail_fx1"
		"ming_xiao_slimetrail_fx2" : "ming_xiao_slimetrail_fx2"
		"ming_xiao_slimetrail_fx3" : "ming_xiao_slimetrail_fx3"
		"ming_xiao_tentacle_burst_emitter" : "ming_xiao_tentacle_burst_emitter"
		"ming_xiao_tentacle_damage_emitter" : "ming_xiao_tentacle_damage_emitter"
		"ming_xiao_tentacle_transform_emitter" : "ming_xiao_tentacle_transform_emitter"
		"ming_xiao_tent_burst_fx1" : "ming_xiao_tent_burst_fx1"
		"ming_xiao_tent_burst_fx2" : "ming_xiao_tent_burst_fx2"
		"ming_xiao_tent_dam_fx1" : "ming_xiao_tent_dam_fx1"
		"ming_xiao_tent_dam_fx2" : "ming_xiao_tent_dam_fx2"
		"ming_xiao_tent_dam_fx3" : "ming_xiao_tent_dam_fx3"
		"ming_xiao_tent_transform_fx1" : "ming_xiao_tent_transform_fx1"
		"ming_xiao_vomit_emitter" : "ming_xiao_vomit_emitter"
		"ming_xiao_vomit_fx1" : "ming_xiao_vomit_fx1"
		"ming_xiao_vomit_fx2" : "ming_xiao_vomit_fx2"
		"ming_xiao_vomit_fx3" : "ming_xiao_vomit_fx3"
		"ming_xiao_vomit_fx4" : "ming_xiao_vomit_fx4"
		"ming_xiao_vomit_impact_emitter" : "ming_xiao_vomit_impact_emitter"
		"ming_xiao_vomit_player_emitter" : "ming_xiao_vomit_player_emitter"
		"ming_xiao_vomit_player_fx1" : "ming_xiao_vomit_player_fx1"
		"ming_xiao_vomit_player_fx2" : "ming_xiao_vomit_player_fx2"
		"ming_xiao_vomit_player_fx3" : "ming_xiao_vomit_player_fx3"
		"ming_xiao_vomit_player_fx4" : "ming_xiao_vomit_player_fx4"
		"ming_xiao_vomit_projectile_emitter" : "ming_xiao_vomit_projectile_emitter"
		"ming_xiao_vomit_projectile_fx1" : "ming_xiao_vomit_projectile_fx1"
		"ming_xiao_vomit_projectile_fx2" : "ming_xiao_vomit_projectile_fx2"
		"ming_xiao_vomit_projectile_fx3" : "ming_xiao_vomit_projectile_fx3"
		"mist_follow_emitter" : "mist_follow_emitter"
		"mm_cursor_emitter" : "mm_cursor_emitter"
		"mm_cursor_fx1" : "mm_cursor_fx1"
		"mm_menu_emitter" : "mm_menu_emitter"
		"mm_menu_fx1" : "mm_menu_fx1"
		"molotov_emitter" : "molotov_emitter"
		"molotov_flameglow_fx1" : "molotov_flameglow_fx1"
		"molotov_flames_fx1" : "molotov_flames_fx1"
		"molotov_flames_fx2" : "molotov_flames_fx2"
		"molotov_fx1" : "molotov_fx1"
		"molotov_fx2" : "molotov_fx2"
		"moth_emitter" : "moth_emitter"
		"moth_f1" : "moth_f1"
		"moth_f1_2" : "moth_f1_2"
		"moth_f2" : "moth_f2"
		"moth_f2_2" : "moth_f2_2"
		"moth_f3" : "moth_f3"
		"moth_f3_2" : "moth_f3_2"
		"moth_f4" : "moth_f4"
		"moth_f4_2" : "moth_f4_2"
		"moth_path" : "moth_path"
		"moth_path_2" : "moth_path_2"
		"muzzleflash_emitter" : "muzzleflash_emitter"
		"muzzlesmoke_emitter" : "muzzlesmoke_emitter"
		"m_bru" : "m_bru"
		"m_cam" : "m_cam"
		"m_cels" : "m_cels"
		"m_cels2" : "m_cels2"
		"m_cels_emmiter" : "m_cels_emmiter"
		"m_clans_emmiter" : "m_clans_emmiter"
		"m_clouds" : "m_clouds"
		"m_clouds_emmiter" : "m_clouds_emmiter"
		"m_fire" : "m_fire"
		"m_fire2-emitter" : "m_fire2-emitter"
		"m_fire2" : "m_fire2"
		"m_gan" : "m_gan"
		"m_mal" : "m_mal"
		"m_nos" : "m_nos"
		"m_sab" : "m_sab"
		"m_tcz" : "m_tcz"
		"m_tor" : "m_tor"
		"m_tre" : "m_tre"
		"m_ven" : "m_ven"
		"nivdot" : "nivdot"
		"nivdot2" : "nivdot2"
		"nivdotparticle" : "nivdotparticle"
		"noparticles" : "noparticles"
		"n_divinesightaura_kindered" : "n_divinesightaura_kindered"
		"n_divinesightaura_kindered_emitter" : "n_divinesightaura_kindered_emitter"
		"n_divinesightaura_kine" : "n_divinesightaura_kine"
		"n_divinesightaura_kine_emitter" : "n_divinesightaura_kine_emitter"
		"n_divinesightaura_kine_emitter2" : "n_divinesightaura_kine_emitter2"
		"n_divinesightaura_kine_star" : "n_divinesightaura_kine_star"
		"n_divinesightaura_seeobfu" : "n_divinesightaura_seeobfu"
		"n_divinesightaura_seeobfu_emitter" : "n_divinesightaura_seeobfu_emitter"
		"n_divinesightview_emitter" : "n_divinesightview_emitter"
		"n_divinesightview_part1" : "n_divinesightview_part1"
		"n_divinesight_emitter" : "n_divinesight_emitter"
		"n_divinesight_energy" : "n_divinesight_energy"
		"n_faithhealing" : "n_faithhealing"
		"n_faithhealing_emitter" : "n_faithhealing_emitter"
		"n_holylightview_behindhands" : "n_holylightview_behindhands"
		"n_holylightview_emitter" : "n_holylightview_emitter"
		"n_holylightview_infronthands" : "n_holylightview_infronthands"
		"n_holylight_emitter" : "n_holylight_emitter"
		"n_holylight_flare" : "n_holylight_flare"
		"n_holylight_sparks" : "n_holylight_sparks"
		"n_mindshield_emitter" : "n_mindshield_emitter"
		"n_mindshield_halo" : "n_mindshield_halo"
		"n_shield of faith_clouds" : "n_shield of faith_clouds"
		"n_shield of faith_cross" : "n_shield of faith_cross"
		"n_shieldoffaith_emitter" : "n_shieldoffaith_emitter"
		"ozonesmoke" : "ozonesmoke"
		"painting_healing_emitter" : "painting_healing_emitter"
		"painting_healing_fx1" : "painting_healing_fx1"
		"painting_healing_fx2" : "painting_healing_fx2"
		"painting_healing_fx3" : "painting_healing_fx3"
		"partial_resist_thaum_fx1" : "partial_resist_thaum_fx1"
		"partial_resist_thaum_fx2" : "partial_resist_thaum_fx2"
		"pilot_flame" : "pilot_flame"
		"pilot_flame_emitter" : "pilot_flame_emitter"
		"pilot_flame_emitter_mirror" : "pilot_flame_emitter_mirror"
		"pilot_flame_mirror" : "pilot_flame_mirror"
		"pipedripspour_emitter" : "pipedripspour_emitter"
		"pipedripstrickle_emitter" : "pipedripstrickle_emitter"
		"pipe_water" : "pipe_water"
		"prince_decapitation_emitter" : "prince_decapitation_emitter"
		"prince_decap_fx1" : "prince_decap_fx1"
		"prince_drippingblood_emitter" : "prince_drippingblood_emitter"
		"prince_drip_fx1" : "prince_drip_fx1"
		"prince_slashed_emitter" : "prince_slashed_emitter"
		"projectile" : "projectile"
		"projectile_emitter" : "projectile_emitter"
		"raindrops" : "raindrops"
		"raindrops2" : "raindrops2"
		"raindrops_noprecip" : "raindrops_noprecip"
		"rainmist" : "rainmist"
		"rainmist2" : "rainmist2"
		"rainring" : "rainring"
		"rainring_temp" : "rainring_temp"
		"rainsheets" : "rainsheets"
		"rainsplash" : "rainsplash"
		"rainsplashdummy" : "rainsplashdummy"
		"rainstain" : "rainstain"
		"rain_box_emitter" : "rain_box_emitter"
		"rain_box_noprecip_emitter" : "rain_box_noprecip_emitter"
		"rain_emitter" : "rain_emitter"
		"rain_follow2_emitter" : "rain_follow2_emitter"
		"rain_follow_emitter" : "rain_follow_emitter"
		"rivet_pop_emitter" : "rivet_pop_emitter"
		"rocket" : "rocket"
		"rockettrail" : "rockettrail"
		"rocket_emitter" : "rocket_emitter"
		"sheriff_landblast_emitter" : "sheriff_landblast_emitter"
		"sheriff_landblast_fx1" : "sheriff_landblast_fx1"
		"sheriff_landblast_fx2" : "sheriff_landblast_fx2"
		"sheriff_landblast_fx3" : "sheriff_landblast_fx3"
		"sheriff_landblast_fx4" : "sheriff_landblast_fx4"
		"sheriff_landblast_fx5" : "sheriff_landblast_fx5"
		"sheriff_teleport_emitter" : "sheriff_teleport_emitter"
		"sheriff_teleport_fx1" : "sheriff_teleport_fx1"
		"sheriff_teleport_fx2" : "sheriff_teleport_fx2"
		"sledgehammer_pound_emitter" : "sledgehammer_pound_emitter"
		"sledgehammer_pound_fx1" : "sledgehammer_pound_fx1"
		"sledgehammer_pound_fx2" : "sledgehammer_pound_fx2"
		"sledgehammer_pound_fx3" : "sledgehammer_pound_fx3"
		"sledgehammer_pound_fx4" : "sledgehammer_pound_fx4"
		"smoke1" : "smoke1"
		"smoke1_blowout" : "smoke1_blowout"
		"smoke2" : "smoke2"
		"smokeyair" : "smokeyair"
		"smokeyair_test" : "smokeyair_test"
		"snuff_bloodexplosion_emitter" : "snuff_bloodexplosion_emitter"
		"snuff_bloodexplosion_fx1" : "snuff_bloodexplosion_fx1"
		"spamist" : "spamist"
		"spamist_emitter" : "spamist_emitter"
		"sparks_big_emitter" : "sparks_big_emitter"
		"sparks_warrens_computers_emitter" : "sparks_warrens_computers_emitter"
		"sparks_warrens_computers_fx1" : "sparks_warrens_computers_fx1"
		"sparks_warrens_computers_fx10" : "sparks_warrens_computers_fx10"
		"sparks_warrens_computers_fx11" : "sparks_warrens_computers_fx11"
		"sparks_warrens_computers_fx2" : "sparks_warrens_computers_fx2"
		"sparks_warrens_computers_fx3" : "sparks_warrens_computers_fx3"
		"sparks_warrens_computers_fx4" : "sparks_warrens_computers_fx4"
		"sparks_warrens_computers_fx5" : "sparks_warrens_computers_fx5"
		"sparks_warrens_computers_fx6" : "sparks_warrens_computers_fx6"
		"sparks_warrens_computers_fx7" : "sparks_warrens_computers_fx7"
		"sparks_warrens_computers_fx8" : "sparks_warrens_computers_fx8"
		"sparks_warrens_computers_fx9-steam" : "sparks_warrens_computers_fx9-steam"
		"splash" : "splash"
		"splashdummy" : "splashdummy"
		"sp_burningembers" : "sp_burningembers"
		"sp_lonewolf_debris_emitter" : "sp_lonewolf_debris_emitter"
		"sp_lonewolf_debris_flames1" : "sp_lonewolf_debris_flames1"
		"sp_lonewolf_debris_flames2" : "sp_lonewolf_debris_flames2"
		"sp_lonewolf_debris_fx1" : "sp_lonewolf_debris_fx1"
		"sp_lonewolf_debris_fx2" : "sp_lonewolf_debris_fx2"
		"sp_lonewolf_debris_smoke" : "sp_lonewolf_debris_smoke"
		"sp_lonewolf_smokey_air_emitter" : "sp_lonewolf_smokey_air_emitter"
		"sp_lonewolf_smokey_air_fx1" : "sp_lonewolf_smokey_air_fx1"
		"sp_lonewolf_smoke_emitter" : "sp_lonewolf_smoke_emitter"
		"sp_lonewolf_smoke_fx1" : "sp_lonewolf_smoke_fx1"
		"sp_ninesintro_headbat_emitter" : "sp_ninesintro_headbat_emitter"
		"sp_ninesintro_headblast_emitter" : "sp_ninesintro_headblast_emitter"
		"sp_ninesintro_tummyblast_emitter" : "sp_ninesintro_tummyblast_emitter"
		"sp_observatory_2_ash_emitter" : "sp_observatory_2_ash_emitter"
		"sp_observatory_2_ash_fx1" : "sp_observatory_2_ash_fx1"
		"sp_observatory_2_tree_fire2_emitter" : "sp_observatory_2_tree_fire2_emitter"
		"sp_observatory_2_tree_firesky_emitter" : "sp_observatory_2_tree_firesky_emitter"
		"sp_ventruetower_explosion_emitter" : "sp_ventruetower_explosion_emitter"
		"sp_ventrue_explosion_debris_flames1" : "sp_ventrue_explosion_debris_flames1"
		"sp_ventrue_explosion_fx1" : "sp_ventrue_explosion_fx1"
		"sp_ventrue_explosion_fx2" : "sp_ventrue_explosion_fx2"
		"sp_ventrue_explosion_fx3" : "sp_ventrue_explosion_fx3"
		"sp_ventrue_explosion_fx4" : "sp_ventrue_explosion_fx4"
		"staryceiling_emitter" : "staryceiling_emitter"
		"staryceiling_star" : "staryceiling_star"
		"starynight_emitter" : "starynight_emitter"
		"starynight_emitter_large" : "starynight_emitter_large"
		"starynight_stars" : "starynight_stars"
		"starynight_stars_large" : "starynight_stars_large"
		"stealth_baseballbat_emitter" : "stealth_baseballbat_emitter"
		"stealth_bushhook_emitter" : "stealth_bushhook_emitter"
		"stealth_bushhook_emitter2" : "stealth_bushhook_emitter2"
		"stealth_bushhook_fx1" : "stealth_bushhook_fx1"
		"stealth_claws_emitter" : "stealth_claws_emitter"
		"stealth_katana_emitter" : "stealth_katana_emitter"
		"stealth_katana_fx1" : "stealth_katana_fx1"
		"stealth_knife_emitter" : "stealth_knife_emitter"
		"stealth_knife_fx1" : "stealth_knife_fx1"
		"stealth_sledgehammer_emitter" : "stealth_sledgehammer_emitter"
		"stealth_sledgehammer_fx1" : "stealth_sledgehammer_fx1"
		"stealth_stake_emitter" : "stealth_stake_emitter"
		"steamrelease" : "steamrelease"
		"steamrelease_constant" : "steamrelease_constant"
		"steamrelease_constant_emitter" : "steamrelease_constant_emitter"
		"steamrelease_emitter" : "steamrelease_emitter"
		"steamrelease_timer" : "steamrelease_timer"
		"stovefireemitter" : "stovefireemitter"
		"stream_emitter" : "stream_emitter"
		"suck_normal" : "suck_normal"
		"temple_spike_emitter" : "temple_spike_emitter"
		"temple_spike_fx1-1" : "temple_spike_fx1-1"
		"temple_spike_fx1-2" : "temple_spike_fx1-2"
		"temple_spike_fx1-3" : "temple_spike_fx1-3"
		"temple_spike_fx1" : "temple_spike_fx1"
		"temple_spike_fx2" : "temple_spike_fx2"
		"temple_teleport_emitter" : "temple_teleport_emitter"
		"temple_teleport_fx1" : "temple_teleport_fx1"
		"temple_teleport_fx2" : "temple_teleport_fx2"
		"temple_teleport_fx3" : "temple_teleport_fx3"
		"temple_teleport_fx4" : "temple_teleport_fx4"
		"temple_teleport_fx5" : "temple_teleport_fx5"
		"temple_teleport_fx6" : "temple_teleport_fx6"
		"temple_teleport_fx7" : "temple_teleport_fx7"
		"test" : "test"
		"test2" : "test2"
		"test3" : "test3"
		"test4" : "test4"
		"testparticle" : "testparticle"
		"testsurf" : "testsurf"
		"testsurf2" : "testsurf2"
		"testsurf3" : "testsurf3"
		"testsurfa" : "testsurfa"
		"testsurfa2" : "testsurfa2"
		"testsurfax" : "testsurfax"
		"testsurfay" : "testsurfay"
		"testsurfaz" : "testsurfaz"
		"testsurfdecal" : "testsurfdecal"
		"test_emitter" : "test_emitter"
		"titlescreentemp2_emmiter" : "titlescreentemp2_emmiter"
		"titlescreentemp_emmiter" : "titlescreentemp_emmiter"
		"torchweaponemitter" : "torchweaponemitter"
		"torch_emitter" : "torch_emitter"
		"torch_flames" : "torch_flames"
		"torch_weapon_flames" : "torch_weapon_flames"
		"torch_weapon_flames1" : "torch_weapon_flames1"
		"torch_weapon_flames2" : "torch_weapon_flames2"
		"torch_weapon_glow" : "torch_weapon_glow"
		"torch_weapon_smoke" : "torch_weapon_smoke"
		"treeflameglow" : "treeflameglow"
		"treeflameglowsky" : "treeflameglowsky"
		"treeflames" : "treeflames"
		"treeflames_sky" : "treeflames_sky"
		"treesmoke" : "treesmoke"
		"treesmoke_sky" : "treesmoke_sky"
		"tree_fire2_emitter" : "tree_fire2_emitter"
		"tree_firesky_emitter" : "tree_firesky_emitter"
		"tree_fire_emitter" : "tree_fire_emitter"
		"trem_fireshield_emitter" : "trem_fireshield_emitter"
		"trem_fireshield_fx1" : "trem_fireshield_fx1"
		"trem_fireshield_fx2" : "trem_fireshield_fx2"
		"trem_fireshield_hit_emitter" : "trem_fireshield_hit_emitter"
		"trem_fireshield_hit_fx1" : "trem_fireshield_hit_fx1"
		"trem_fireshield_hit_fx2" : "trem_fireshield_hit_fx2"
		"trem_fireshield_hit_fx3" : "trem_fireshield_hit_fx3"
		"trem_firewall_emitter" : "trem_firewall_emitter"
		"trem_firewall_fx1" : "trem_firewall_fx1"
		"trem_firewall_fx2" : "trem_firewall_fx2"
		"tzim2_blast_emitter" : "tzim2_blast_emitter"
		"tzim2_blast_fx1" : "tzim2_blast_fx1"
		"tzim2_blast_fx2" : "tzim2_blast_fx2"
		"tzim2_blast_fx3" : "tzim2_blast_fx3"
		"tzim2_blast_fx4" : "tzim2_blast_fx4"
		"tzim2_blast_fx5" : "tzim2_blast_fx5"
		"tzim2_blast_fx6" : "tzim2_blast_fx6"
		"tzim2_launch_emitter" : "tzim2_launch_emitter"
		"tzim2_player_emitter" : "tzim2_player_emitter"
		"tzim2_player_fx1" : "tzim2_player_fx1"
		"tzim2_player_fx2" : "tzim2_player_fx2"
		"tzim2_player_fx3" : "tzim2_player_fx3"
		"tzim2_powerup_emitter" : "tzim2_powerup_emitter"
		"tzim2_powerup_fx1" : "tzim2_powerup_fx1"
		"tzim2_powerup_fx2" : "tzim2_powerup_fx2"
		"tzim2_powerup_fx3" : "tzim2_powerup_fx3"
		"tzim2_powerup_fx4" : "tzim2_powerup_fx4"
		"tzim2_projectile_fx1" : "tzim2_projectile_fx1"
		"tzim2_projectile_fx2" : "tzim2_projectile_fx2"
		"tzim2_projectile_fx3" : "tzim2_projectile_fx3"
		"tzim2_projectile_fx4" : "tzim2_projectile_fx4"
		"tzim2_projectile_fx5" : "tzim2_projectile_fx5"
		"tzim2_projectile_fx6" : "tzim2_projectile_fx6"
		"tz_ bloodtrickle_emitter" : "tz_ bloodtrickle_emitter"
		"tz_bloodtrickle_blooddrops" : "tz_bloodtrickle_blooddrops"
		"tz_bloodtrickle_fx1" : "tz_bloodtrickle_fx1"
		"tz_bloodtrickle_fx2" : "tz_bloodtrickle_fx2"
		"tz_moth_emitter" : "tz_moth_emitter"
		"vampire_death_emitter" : "vampire_death_emitter"
		"vesuvius" : "vesuvius"
		"vomit" : "vomit"
		"vomit2" : "vomit2"
		"vomit3" : "vomit3"
		"vomit4" : "vomit4"
		"vomitblood" : "vomitblood"
		"vomitblood2" : "vomitblood2"
		"vomitblood3" : "vomitblood3"
		"vomitblood4" : "vomitblood4"
		"vomitblood5" : "vomitblood5"
		"vomitblood6" : "vomitblood6"
		"vomitblood_emitter" : "vomitblood_emitter"
		"vomitblood_spatters" : "vomitblood_spatters"
		"vomit_emitter" : "vomit_emitter"
		"vtm_glowtemp" : "vtm_glowtemp"
		"wall_break_emitter" : "wall_break_emitter"
		"warehoue_explosion_base_emitter" : "warehoue_explosion_base_emitter"
		"warehoue_explosion_hud_center" : "warehoue_explosion_hud_center"
		"warehoue_explosion_hud_emitter" : "warehoue_explosion_hud_emitter"
		"warehoue_explosion_hud_explosion" : "warehoue_explosion_hud_explosion"
		"warehoue_explosion_hud_flare" : "warehoue_explosion_hud_flare"
		"warehouse_explosion_base_flameglow_fx1" : "warehouse_explosion_base_flameglow_fx1"
		"warehouse_explosion_base_flames_fx1" : "warehouse_explosion_base_flames_fx1"
		"warehouse_explosion_base_fx1" : "warehouse_explosion_base_fx1"
		"warehouse_explosion_base_fx2" : "warehouse_explosion_base_fx2"
		"warehs_expln_debries" : "warehs_expln_debries"
		"warehs_expln_firetrail" : "warehs_expln_firetrail"
		"warehs_expln_long_wndw2_emitter" : "warehs_expln_long_wndw2_emitter"
		"warehs_expln_long_wndw_emitter" : "warehs_expln_long_wndw_emitter"
		"warehs_expln_long_wndw_ns_emitter" : "warehs_expln_long_wndw_ns_emitter"
		"warehs_expln_mover_emitter" : "warehs_expln_mover_emitter"
		"warehs_expln_smoke" : "warehs_expln_smoke"
		"warehs_expln_smoke2" : "warehs_expln_smoke2"
		"warehs_expln_sm_wndw_emitter" : "warehs_expln_sm_wndw_emitter"
		"warehs_expln_top_wndw_emitter" : "warehs_expln_top_wndw_emitter"
		"warehs_expln_top_wndw_ws_emitter" : "warehs_expln_top_wndw_ws_emitter"
		"warrens_tube_end_emitter" : "warrens_tube_end_emitter"
		"warrens_tube_end_fx1" : "warrens_tube_end_fx1"
		"warrens_tube_end_fx2" : "warrens_tube_end_fx2"
		"warrens_tube_water_emitter" : "warrens_tube_water_emitter"
		"warrens_tube_water_fx1" : "warrens_tube_water_fx1"
		"warrens_tube_water_fx2" : "warrens_tube_water_fx2"
		"waterbigsplash" : "waterbigsplash"
		"waterbigsplash_emitter" : "waterbigsplash_emitter"
		"waterdrops" : "waterdrops"
		"waterdrops2" : "waterdrops2"
		"waterdrops_emitter" : "waterdrops_emitter"
		"waterdrops_timer" : "waterdrops_timer"
		"waterfallmist" : "waterfallmist"
		"waterfallmist_emitter" : "waterfallmist_emitter"
		"waterfalltrickle_emitter" : "waterfalltrickle_emitter"
		"waterfall_emitter" : "waterfall_emitter"
		"waterfall_water" : "waterfall_water"
		"watermist" : "watermist"
		"watermist_emitter" : "watermist_emitter"
		"watersplash" : "watersplash"
		"watersplash_emitter" : "watersplash_emitter"
		"w_ithaca_m_37_emitter" : "w_ithaca_m_37_emitter"
		"w_ithaca_m_37_flash-1" : "w_ithaca_m_37_flash-1"
		"w_ithaca_m_37_flash-2" : "w_ithaca_m_37_flash-2"
		"w_ithaca_m_37_flash-3" : "w_ithaca_m_37_flash-3"
		"w_ithaca_m_37_smoke-1" : "w_ithaca_m_37_smoke-1"
		"w_ithaca_m_37_view_emitter" : "w_ithaca_m_37_view_emitter"
		"w_ithaca_m_37_view_flash-1" : "w_ithaca_m_37_view_flash-1"
		"w_ithaca_m_37_view_flash-2" : "w_ithaca_m_37_view_flash-2"
		"w_ithaca_m_37_view_flash-3" : "w_ithaca_m_37_view_flash-3"
		"w_rocketlauncher_projectile_emitter" : "w_rocketlauncher_projectile_emitter"
		"w_rocketlauncher_rocket_emitter" : "w_rocketlauncher_rocket_emitter"
		"w_rocketlauncher_rocket_fx1" : "w_rocketlauncher_rocket_fx1"
		"w_rocketlauncher_rocket_fx2" : "w_rocketlauncher_rocket_fx2"
		"w_rocketlauncher_rocket_fx3" : "w_rocketlauncher_rocket_fx3"
		"w_stakelauncher_emitter" : "w_stakelauncher_emitter"
		"w_stakelauncher_fx1" : "w_stakelauncher_fx1"
		"w_stakelauncher_fx2" : "w_stakelauncher_fx2"
		"w_stakelauncher_fx3" : "w_stakelauncher_fx3"
		"w_stakelauncher_fx4-1" : "w_stakelauncher_fx4-1"
		"w_stakelauncher_fx4-2" : "w_stakelauncher_fx4-2"
		"w_stakelauncher_fx4" : "w_stakelauncher_fx4"
		"w_stakelauncher_greenlight_emitter" : "w_stakelauncher_greenlight_emitter"
		"w_stakelauncher_greenlight_fx1" : "w_stakelauncher_greenlight_fx1"
		"w_stakelauncher_greenlight_fx2" : "w_stakelauncher_greenlight_fx2"
		"w_stakelauncher_redlight_emitter" : "w_stakelauncher_redlight_emitter"
		"w_stakelauncher_redlight_fx1" : "w_stakelauncher_redlight_fx1"
		"w_stakelauncher_redlight_fx2" : "w_stakelauncher_redlight_fx2"
		"w_supershotgun_emitter" : "w_supershotgun_emitter"
		"w_supershotgun_view_emitter" : "w_supershotgun_view_emitter"
		"w_thirtyeight_emitter-smoke" : "w_thirtyeight_emitter-smoke"
		"w_thirtyeight_emitter" : "w_thirtyeight_emitter"
		"w_thirtyeight_flash-1" : "w_thirtyeight_flash-1"
		"w_thirtyeight_flash-2" : "w_thirtyeight_flash-2"
		"w_thirtyeight_flash-3" : "w_thirtyeight_flash-3"
		"w_thirtyeight_smoke1" : "w_thirtyeight_smoke1"
		"w_thirtyeight_smoke2" : "w_thirtyeight_smoke2"
		"zombies_spawning_emitter" : "zombies_spawning_emitter"
		"zombie_headshot_death_emitter" : "zombie_headshot_death_emitter"
		"zombie_headshot_dmg_emitter" : "zombie_headshot_dmg_emitter"
		"zombie_spawning_fx1" : "zombie_spawning_fx1"
		"zombie_spawning_fx2" : "zombie_spawning_fx2"
		"zombie_summon_emitter" : "zombie_summon_emitter"
	]

	bounds(integer) : "Bounds (Intensity)" : 512 : "Particle bounds [not tested]."
	ramp_scale(float) : "Ramp Scale" : 1 : "[VTMB] Unknown yet..."
	ramp_time(float) : "Ramp Time" : 0 : "[VTMB] Unknown yet..."

	spawnflags(flags) = 
	[
		1 : "1 (unknown yet)" : 0
	]
	
	// inputs
	input TurnOn(void): "Turns on the particle effect."
	input TurnOff(void): "Turns off the particle effect."
	input SetAttachType(void): "Sets attach type."
	input SetRateScale(void): "Sets particle rate scale."
	input SetRampTime(void): "Sets ramp time."
]




//===================================================================================================================
// env_particle_hud [VTMB-specific]
//===================================================================================================================

@PointClass base(env_particle) iconsprite("editor/env_particles.vmt") = env_particle_hud : 
	"[VTMB] An entity that spawns particle in player's HUD."
[
	hud_draw_third(choices) : "Draw Third HUD Elements [-?]" : 1 : "[VTMB] Unknown yet..." =
	[
		0 : "No"
		1 : "Yes"
	]
]




//===================================================================================================================
// func_particle [VTMB-specific]
//===================================================================================================================

@SolidClass base(Origin,env_particle) = func_particle :
	"[VTMB] A brush entity that creates particle effect in its volume."
[
]




//===================================================================================================================
// params_particle [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname) = params_particle :
	"[VTMB] A point entity that defines particle effect parameters applying to '*_particle entities."
[
	attach_type(integer) : "Attach Type" : 0 : "[VTMB] Unknown yet..."
	particle_definition(choices) : "Particle Effect" : "particles/D_ObfuscateIn_Emitter.txt" : "Particle effect. This is particle definition script related to '<moddir>/particles/*.txt' file. You can also define custom scripts." =
	[
		"particles/D_ObfuscateIn_Emitter.txt" : "particles/D_ObfuscateIn_Emitter.txt"
		"particles/Lasombra_Teleport_In-body.txt" : "particles/Lasombra_Teleport_In-body.txt"
		"particles/Lasombra_Teleport_In.txt" : "particles/Lasombra_Teleport_In.txt"
		"particles/Lasombra_Teleport_Out-body.txt" : "particles/Lasombra_Teleport_Out-body.txt"
		"particles/Lasombra_Teleport_Out.txt" : "particles/Lasombra_Teleport_Out.txt"
	]
]





//===================================================================================================================
// point_explosion [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname,Parentname) sphere() sphere(inner_radius) iconsprite("editor/env_physexplosion.vmt") = point_explosion : 
	"[VTMB] An entity that creates an explosion with defined parameters."
[
	explosion_params(target_destination) : "Explosion Parameters Entity" : : "A link to the 'point_explosion' entity that defines common explosion params."
	spawnflags(flags) =
	[
		1 : "1 (unknown yet)" : 0
	]

	// Inputs
	input Explode(void) : "Starts explosion."
]





//===================================================================================================================
// params_explosion [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname) sphere(dmg_radius) iconsprite("editor/env_physexplosion.vmt") = params_explosion : 
	"[VTMB] An entity that defines explosion parameters that shared to 'point_explosion'."
[
	damage_breakables(choices) : "Damage Breakables" : 1 : "If set 'Yes', explosion will be able to take damage to breakable objects." =
	[
		0 : "No"
		1 : "Yes"
	]
	damage_npcs(choices) : "Damage NPCs" : 1 : "If set 'Yes', explosion will be able to take damage to NPCs." =
	[
		0 : "No"
		1 : "Yes"
	]
	damage_players(choices) : "Damage Player" : 1 : "If set 'Yes', explosion will be able to take damage to player." =
	[
		0 : "No"
		1 : "Yes"
	]
	dmg_amount(integer) : "Damage Amount" : 5 : "Amount of health points that takes away when explosion commits."
	dmg_radius(integer) : "Damage Radius" : 500 : "Maximum radius in which the damage takes."
	particle(choices) : "Particle Emitter" : "particles/Explosion2_emitter.txt" : "Explosion effect. This is particle definition script related to '<moddir>/particles/*.txt' file. You can also define custom scripts." =
	[
		"particles/BarrelFireExplosionEmitter.txt" : "particles/BarrelFireExplosionEmitter.txt"
		"particles/C_Theater_Collum_Emitter.txt" : "particles/C_Theater_Collum_Emitter.txt"
		"particles/C_Theater_Collum_Emitter_move_up" : "particles/C_Theater_Collum_Emitter_move_up"
		"particles/Cold_Explosion_emitter.txt" : "particles/Cold_Explosion_emitter.txt"
		"particles/D_Thaum_Bld_Cauldron_Explode_Tgt_Emitter.txt" : "particles/D_Thaum_Bld_Cauldron_Explode_Tgt_Emitter.txt"
		"particles/Electrical_sparks_Emitter.txt" : "particles/Electrical_sparks_Emitter.txt"
		"particles/Explosion_TowerCrush_emitter.txt" : "particles/Explosion_TowerCrush_emitter.txt"
		"particles/Explosion2_emitter.txt" : "particles/Explosion2_emitter.txt"
		"particles/Impact_Glass_Emitter.txt" : "particles/Impact_Glass_Emitter.txt"
		"particles/Impact_Metal_Emitter.txt" : "particles/Impact_Metal_Emitter.txt"
		"particles/la_malkavian2_spark_emitter.tx" : "particles/la_malkavian2_spark_emitter.txt"
		"particles/LightBulb_Pop_emitter.txt" : "particles/LightBulb_Pop_emitter.txt"
		"particles/Sparks_Warrens_Computers_emitter.txt" : "particles/Sparks_Warrens_Computers_emitter.txt"
		"particles/temple_spike_emitter.txt" : "particles/temple_spike_emitter.txt"
		"particles/wall_break_emitter.txt" : "particles/wall_break_emitter.txt"
		"particles/Zombie_Summon_Emitter.txt" : "particles/Zombie_Summon_Emitter.txt"
	]
	shk_amp(integer) : "Shake Amplitude [-?]" : 5 : "[VTMB] Unknown yet..."
	shk_dur(integer) : "Shake Duration [-?]" : 5 : "[VTMB] Unknown yet..."
	shk_freq(integer) : "Shake Frequency [-?]" : 5 : "[VTMB] Unknown yet..."
	shk_inair(integer) : "Shake In-Air [-?]" : 1 : "[VTMB] Unknown yet..."
	shk_radius(integer) : "Shake Radius [-?]" : 2000 : "[VTMB] Unknown yet..."
	snd_name(sound) : "Explosion Sound Name" : "Weapons/Ranged/Detonation.wav" : "The sound that is played during the explosion."
	snd_dist(integer) : "Explosion Sound Radius" : 1500 : "Max explosion sound hearing distance."
	snd_pitch_min(integer) : "Min Sound Pitch" : 95 : "Minimum pitch that explosion sound can randomly use."
	snd_pitch_max(integer) : "Max Sound Pitch" : 105 : "Minimum pitch that explosion sound can randomly use."
	dl_color(color255) : "DL Color [-?]" : "255 128 64" : "[VTMB] Unknown yet..."
	dl_decay(integer) : "DL Decay [-?]" : 1500 : "[VTMB] Unknown yet..."
	dl_time(float) : "DL Time [-?]" : 2 : "[VTMB] Unknown yet..."
	dl_exponent(float) : "DL Exponent [-?]" : 0 : "[VTMB] Unknown yet..."
	dl_radius(integer) : "DL Radius [-?]" : 500 : "[VTMB] Unknown yet..."
	
	// fixme!
	spawnflags(flags) =
	[
		4 : "Flag 4 (unknown yet)" : 0
		34 : "Flag 34 (unknown yet)" : 0
		37 : "Flag 37 (unknown yet)" : 0
		39 : "Flag 39 (unknown yet)" : 0
		42 : "Flag 42 (unknown yet)" : 0
		44 : "Flag 44 (unknown yet)" : 0
		46 : "Flag 46 (unknown yet)" : 0
		47 : "Flag 47 (unknown yet)" : 0
		110 : "Flag 110 (unknown yet)" : 0
		111 : "Flag 111 (unknown yet)" : 0
		174 : "Flag 174 (unknown yet)" : 0
		556 : "Flag 556 (unknown yet)" : 0
		8193 : "Flag 8193 (unknown yet)" : 0
	]
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// EVENTS
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// events_player [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname) iconsprite("editor/logic_auto.vmt") = events_player :
	"[VTMB] Entity that use connections to define the events that happen to a player."
[
	targetname(target_source) : "Name" : "controller" : "The name that other entities refer to this entity by."
	enabled(choices) : "Enabled" : 1 : "Turn entity state On or Off." =
	[
		0 : "No"
		1 : "Yes"
	]
	spawnflags(flags) =
	[
		0 : "[Unknown]" : 0
	]
	
	// Inputs
	input EnableOutputs(string) : "Enables an entity I/O connection on this entity [not tested]."
	input DisableOutputs(string) : "Disables an entity I/O connections from this entity [not tested]."
	input CreateControllerNPC(void) : "Creates NPC controller [not tested]."
	input RemoveControllerNPC(void) : "Removes NPC controller [not tested]."
	input AwardExp(integer) : "Awards player with defined experience points."
	input ClearDialogCombatTimers(void) : "Clears dialog combat timers [not tested]."
	input ImmobilizePlayer(void) : "Denying the player movement [not tested]."
	input MobilizePlayer(void) : "Allow player to move [not tested]."
	input RemoveDisciplines(void) : "Removes defeined disciplines."
	input RemoveDisciplinesNow(void) : "Removes defeined disciplines right now [not tested]."
	input MakePlayerUnkillable(void) : "Makes the player unkillable."
	input MakePlayerKillable(void) : "Returns the player to be killable."
	
	// Outputs
	output OnFrenzyBegin(void) : "Fired when player's frenzy begins."
	output OnFrenzyEnd(void) : "Fired when player's frenzy ends."
	output OnWolfMorphBegin(void) : "Fired when wolf morph begins."
	output OnWolfMorphEnd(void) : "Fired when wolf morph ends."
	output OnPlayerTookDamage(void) : "Fired when player took some damage."
	output OnPlayerKilled(void) : "Fired when player dead."
	output OnPlayerSoundLoud(void) : "[VTMB: untested connection]"
	output OnActivateAuspex(void) : "Fired when player activates 'Auspex' discipline."
	output OnActivateCelerity(void) : "Fired when player activates 'Celerity' discipline."
	output OnActivateCorpusVampirus(void) : "Fired when player activates 'Corpus Vampirus' discipline."
	output OnActivateFortitude(void) : "Fired when player activates 'Fortitude' discipline."
	output OnActivateObfuscate(void) : "Fired when player activates 'Obfuscate' discipline."
	output OnActivatePotence(void) : "Fired when player activates 'Potence' discipline."
	output OnActivatePresense(void) : "Fired when player activates 'Presense' discipline."
	output OnActivateProtean(void) : "Fired when player activates 'Protean' discipline."
	output OnActivateAnimalismLvl1(void) : "Fired when player activates 'Animalism' (level 1) discipline."
	output OnActivateAnimalismLvl2(void) : "Fired when player activates 'Animalism' (level 2) discipline."
	output OnActivateDementationLvl1(void) : "Fired when player activates 'Dementation' (level 1) discipline."
	output OnActivateDementationLvl2(void) : "Fired when player activates 'Dementation' (level 2) discipline."
	output OnActivateDominateLvl1(void) : "Fired when player activates 'Dominate' (level 1) discipline."
	output OnActivateDominateLvl2(void) : "Fired when player activates 'Dominate' (level 2) discipline."
	output OnActivateThaumaturgyLvl1(void) : "Fired when player activates 'Thaumaturgy' (level 1) discipline."
	output OnActivateThaumaturgyLvl2(void) : "Fired when player activates 'Thaumaturgy' (level 2) discipline."
]




//===================================================================================================================
// events_world [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname) iconsprite("editor/logic_auto.vmt") = events_world :
	"[VTMB] Entity that use connections to define the events that happen to the world."
[
	targetname(target_source) : "Name" : "world" : "The name that other entities refer to this entity by."

	// inputs
	input SetSafeArea(integer) : "Sets area safety type."
	input SetCopWaitArea(integer) : "Sets cop waiting area."
	input SetCopGrace(integer) : "Sets cop grace [unknown yet]."
	input SetNosferatuTolerant(integer) : "Sets nosferatu-tolerant area."
	input SetNoFrenzyArea(integer) : "Sets this area as frenzy-impossible."
	input AIEnable(integer) : "Enables AI [unknown yet]."
	input FadeGlobalWetness(integer) : "Fade global wetness [unknown yet]."
	input HideCutsceneInterferingEntities(void) : "Hides cutscene-related interfering entities [untested]."
	input UnhideCutsceneInterferingEntities(void) : "Unhides cutscene-related interfering entities [untested]."
	input PlayEndCredits(void) : "Show end-game credits."
	input ClearDialogCombatTimers(void) : "Clear dialog combat timers [unknown yet]."
	input SetParent(string) : "Changes the entity's parent in the movement hierarchy."
	input ClearParent(void) : "Removes this entity from the the movement hierarchy, leaving it free to move independently."

	// outputs
	output OnCopsOutside(void) : "Fired when the cops outside."
	output OnCopsComing(void) : "Fired when the cops are coming."
	output OnStartCopPursuitMode(void) : "Fired when cop pursuit mode stars."
	output OnEndCopPursuitMode(void) : "Fired when cop pursuit mode ends."
	output OnStartCopAlertMode(void) : "Fired when cop alert mode starts."
	output OnEndCopAlertMode(void) : "Fired when cop alert mode ends."
	output OnStartHunterPursuitMode(void) : "Fired when hunter alert mode starts."
	output OnEndHunterPursuitMode(void) : "Fired when hunter alert mode ends."
	output OnMasqueradeLevel1(void) : "Fired when player's masquerade level reaches 1 point."
	output OnMasqueradeLevel2(void) : "Fired when player's masquerade level reaches 2 point."
	output OnMasqueradeLevel3(void) : "Fired when player's masquerade level reaches 3 point."
	output OnMasqueradeLevel4(void) : "Fired when player's masquerade level reaches 4 point."
	output OnMasqueradeLevel5(void) : "Fired when player's masquerade level reaches 5 point."
	output OnMasqueradeLevelChanged(void) : "Fired when player's masquerade level changed."
	output OnPlayerHasNoBlood(void) : "Fired when player needs blood."
	output OnCombatMusicStart(void) : "Fired when combat music starts playing."
	output OnCombatMusicEnd(void) : "Fired when combat music stops playing."
	output OnAlertMusicStart(void) : "Fired when alert music starts playing."
	output OnAlertMusicEnd(void) : "Fired when alert music stops playing."
	output OnNormalMusicStart(void) : "Fired when normal music starts playing."
	output OnNormalMusicEnd(void) : "Fired when normal music stops playing."
]







































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// FILTERS
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// filter_activator_feat [VTMB-specific]
//===================================================================================================================

@FilterClass base(BaseFilter) iconsprite("editor/filter_class.vmt") = filter_activator_feat :
	"[VTMB] A Filter entity that activates selected feature [not tested]."
[
	feat_name(string) : "Feat Name" : "inspection" : "Feature to activate."
	feat_level(integer) : "Feat Level" : 5 : "Activating feature's level."
]




//===================================================================================================================
// filter_activator_inventory [VTMB-specific]
//===================================================================================================================

@FilterClass base(BaseFilter) iconsprite("editor/filter_class.vmt") = filter_activator_inventory :
	"[VTMB] A Filter entity that activates selected item [not tested]."
[
	item_name(target_source) : "Item Name" : : "Item that will be activated."

	// fixme...
	spawnflags(flags) =
	[
		1 : "(default state)" : 0
	]
]




//===================================================================================================================
// filter_activator_mass [VTMB-specific, filter_activator_mass_greater-based]
//===================================================================================================================

@FilterClass base(BaseFilter) iconsprite("editor/filter_class.vmt") = filter_activator_mass :
	"[VTMB] A filter that filters by the mass of the activator."
[
	filtermass(float) : "Filter Mass" : 25 : "The mass to filter by. If the filter mode is Allow, only entities whose "+
		"mass is greater than the give float will pass the filter. If the filter mode is Disallow, "+
		"all entities EXCEPT those whose mass is greater than the given float will pass the filter."
	filterweight(integer) : "Filter Weight" : 25 : "[VTMB] Unknown yet..."
]







































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// FUNCTION Entities
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// func_elevator [VTMB-specific]
//===================================================================================================================

@SolidClass base(Targetname,Origin,VMovingConnects) = func_elevator :
	"[VTMB] A brush entity that simulates the elevator functions."
[
	Speed(integer) : "Speed" : 35 : "The speed at which the elevator moves."
	startsound(sound) : "Start Sound" : "environmental/machines/elevator_operation.wav" : "Sound played when the elevator starts moving."
	stopsound(sound) : "Stop Sound" : "environmental/machines/elevator_stop.wav" : "Sound played when the elevator stops moving."
	blockdamage(float) : "Block Damage" : 0 : "The amount of damage to do to any entity that blocks the brushes, per frame."

	floor1(float) : "Floor 1 Height" : 0 : "Defines height the 1st floor is (in units)."
	floor2(float) : "Floor 2 Height" : 0 : "Defines height the 2nd floor is (in units)."
	floor3(float) : "Floor 3 Height" : 0 : "Defines height the 3rd floor is (in units)."
	floor4(float) : "Floor 4 Height" : 0 : "Defines height the 4th floor is (in units)."
	floor5(float) : "Floor 5 Height" : 0 : "Defines height the 5th floor is (in units)."
	floor6(float) : "Floor 6 Height" : 0 : "Defines height the 6th floor is (in units)."
	floor7(float) : "Floor 7 Height" : 0 : "Defines height the 7th floor is (in units)."
	floor8(float) : "Floor 8 Height" : 0 : "Defines height the 8th floor is (in units)."
	
	numfloors(choices) : "Num of Floors" : 0 : "Defines the number of floors, used by elevator." =
	[
		1 : "1"
		2 : "2"
		3 : "3"
		4 : "4"
		5 : "5"
		6 : "6"
		7 : "7"
		8 : "8"
	]	
	locked(choices) : "Start locked" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]	

	// inputs
	input SnapToFloor(void) : "[VTMB: untested connection]"
	input GotoFloor(integer) : "Go to selected floor."
	input Lock(void) : "Lock the elevator doors, preventing it from functioning."
	input Unlock(void) : "Unlock the elevator doors, allowing it to function."
	input CallCurrentFloorOutputs(void) : "[VTMB: untested connection]"
	input Open(void) : "Open the elevator door."
	input Close(void) : "Close the elevator door."
	input SetPosition(string) : "Move the elvevator's brush to a specific position [not tested]."
	input StartMoving(void) : "Start elevator moving."
	input StopMoving(void) : "Stop elevator moving."
	input ToggleMovement(void) : "Toggle elevator movement between start and stop."
	input SetSpeed(float) : "Set elevator moving speed."

	// outputs
	output OnMoveStart(void) : "Fired when the elevator started its moving."
	output OnReachFloorAny(void) : "Fired when the elevator reaches ANY floor."
	output OnPassFloorAny(void) : "Fired when the elevator passes ANY floor."
	output OnReachFloor1(void) : "Fired when the elevator reaches floor 1."
	output OnReachFloor2(void) : "Fired when the elevator reaches floor 2."
	output OnReachFloor3(void) : "Fired when the elevator reaches floor 3."
	output OnReachFloor4(void) : "Fired when the elevator reaches floor 4."
	output OnReachFloor5(void) : "Fired when the elevator reaches floor 5."
	output OnReachFloor6(void) : "Fired when the elevator reaches floor 6."
	output OnReachFloor7(void) : "Fired when the elevator reaches floor 7."
	output OnReachFloor8(void) : "Fired when the elevator reaches floor 8."
	output OnPassFloor2(void) : "Fired when the elevator passes floor 2."
	output OnPassFloor3(void) : "Fired when the elevator passes floor 3."
	output OnPassFloor4(void) : "Fired when the elevator passes floor 4."
	output OnPassFloor5(void) : "Fired when the elevator passes floor 5."
	output OnPassFloor6(void) : "Fired when the elevator passes floor 6."
	output OnPassFloor7(void) : "Fired when the elevator passes floor 7."
	output Position(integer)   : "Fired whenever the brush moves. The output is the position of brush from 0 to 1..."
	output OnStop(void) : "Fired when the elevator stopped its moving."
	output OnReachStart(void) : "Fired when elevator's brush reaches its start point."
	output OnReachEnd(void) : "Fired when elevator's brush reaches its end point."
	output OnMoveTowardsStart(void) : "[VTMB: untested connection]"
	output OnMoveTowardsEnd(void) : "[VTMB: untested connection]"
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// INTERFACE
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// game_sign [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname) = game_sign :
	"[VTMB] An entity that dumps the misc signs (like hints and tables) on screen overlay window."
[
	definition_file(choices) : "Definition Script" : "data/signs/temp_la.txt" : "Sign definition script related to '<moddir>/VData/Signs/*.txt' file.\n\nPlease, add full moddir-related path and file extension (vdata/signs/mysign.txt) if you're using a custom (not included in this list) script file." =
	[
		"vdata/signs/childs_drawing.txt" : "childs_drawing"
		"vdata/signs/chinatownsewer1.txt" : "chinatownsewer1"
		"vdata/signs/chinatown_a.txt" : "chinatown_a"
		"vdata/signs/chinatown_b.txt" : "chinatown_b"
		"vdata/signs/chinatown_c.txt" : "chinatown_c"
		"vdata/signs/chinatown_d.txt" : "chinatown_d"
		"vdata/signs/clinic_phil_note.txt" : "clinic_phil_note"
		"vdata/signs/death.txt" : "death"
		"vdata/signs/downtownsewer1.txt" : "downtownsewer1"
		"vdata/signs/downtownsewer2.txt" : "downtownsewer2"
		"vdata/signs/downtownsewer3.txt" : "downtownsewer3"
		"vdata/signs/downtownsewer4.txt" : "downtownsewer4"
		"vdata/signs/flynns_password.txt" : "flynns_password"
		"vdata/signs/hollywoodsewer1.txt" : "hollywoodsewer1"
		"vdata/signs/hollywoodsewer2.txt" : "hollywoodsewer2"
		"vdata/signs/hollywood_a.txt" : "hollywood_a"
		"vdata/signs/hollywood_b.txt" : "hollywood_b"
		"vdata/signs/hollywood_c.txt" : "hollywood_c"
		"vdata/signs/la_a.txt" : "la_a"
		"vdata/signs/la_b.txt" : "la_b"
		"vdata/signs/la_c.txt" : "la_c"
		"vdata/signs/la_d.txt" : "la_d"
		"vdata/signs/la_e.txt" : "la_e"
		"vdata/signs/la_f.txt" : "la_f"
		"vdata/signs/luckystar_note.txt" : "luckystar_note"
		"vdata/signs/malcolm_password_note.txt" : "malcolm_password_note"
		"vdata/signs/malkmansion_clue_1.txt" : "malkmansion_clue_1"
		"vdata/signs/malkmansion_clue_2.txt" : "malkmansion_clue_2"
		"vdata/signs/mercurios_note.txt" : "mercurios_note"
		"vdata/signs/museum_note.txt" : "museum_note"
		"vdata/signs/museum_note_2.txt" : "museum_note_2"
		"vdata/signs/museum_note_3.txt" : "museum_note_3"
		"vdata/signs/newspaper_all.txt" : "newspaper_all"
		"vdata/signs/newspaper_ash_rivers.txt" : "newspaper_ash_rivers"
		"vdata/signs/newspaper_dane_facts.txt" : "newspaper_dane_facts"
		"vdata/signs/newspaper_dane_slaughter.txt" : "newspaper_dane_slaughter"
		"vdata/signs/newspaper_elizabeth_dane.txt" : "newspaper_elizabeth_dane"
		"vdata/signs/newspaper_epidemic.txt" : "newspaper_epidemic"
		"vdata/signs/newspaper_fu.txt" : "newspaper_fu"
		"vdata/signs/newspaper_glaze.txt" : "newspaper_glaze"
		"vdata/signs/newspaper_griffith.txt" : "newspaper_griffith"
		"vdata/signs/newspaper_halloween.txt" : "newspaper_halloween"
		"vdata/signs/newspaper_johansen.txt" : "newspaper_johansen"
		"vdata/signs/newspaper_johansen2.txt" : "newspaper_johansen2"
		"vdata/signs/newspaper_malk_mansion.txt" : "newspaper_malk_mansion"
		"vdata/signs/newspaper_museum.txt" : "newspaper_museum"
		"vdata/signs/newspaper_oh_1.txt" : "newspaper_oh_1"
		"vdata/signs/newspaper_oh_2.txt" : "newspaper_oh_2"
		"vdata/signs/newspaper_oh_3.txt" : "newspaper_oh_3"
		"vdata/signs/newspaper_oh_4.txt" : "newspaper_oh_4"
		"vdata/signs/newspaper_oh_5.txt" : "newspaper_oh_5"
		"vdata/signs/newspaper_oh_6.txt" : "newspaper_oh_6"
		"vdata/signs/newspaper_oh_7.txt" : "newspaper_oh_7"
		"vdata/signs/newspaper_sabbat_attack.txt" : "newspaper_sabbat_attack"
		"vdata/signs/newspaper_serial_killer.txt" : "newspaper_serial_killer"
		"vdata/signs/newspaper_society.txt" : "newspaper_society"
		"vdata/signs/newspaper_tawni.txt" : "newspaper_tawni"
		"vdata/signs/newspaper_test.txt" : "newspaper_test"
		"vdata/signs/newspaper_warehouse.txt" : "newspaper_warehouse"
		"vdata/signs/newspaper_war_1.txt" : "newspaper_war_1"
		"vdata/signs/newspaper_war_2.txt" : "newspaper_war_2"
		"vdata/signs/newspaper_wong_ho_dead.txt" : "newspaper_wong_ho_dead"
		"vdata/signs/oh_fade1.txt" : "oh_fade1"
		"vdata/signs/psych_report.txt" : "psych_report"
		"vdata/signs/regents_invitation.txt" : "regents_invitation"
		"vdata/signs/santamonicasewer1.txt" : "santamonicasewer1"
		"vdata/signs/santamonicasewer2.txt" : "santamonicasewer2"
		"vdata/signs/santamonica_a.txt" : "santamonica_a"
		"vdata/signs/santamonica_b.txt" : "santamonica_b"
		"vdata/signs/santamonica_c.txt" : "santamonica_c"
		"vdata/signs/sarcophagus.txt" : "sarcophagus"
		"vdata/signs/shub4_name1.txt" : "shub4_name1"
		"vdata/signs/shub4_name2.txt" : "shub4_name2"
		"vdata/signs/shub4_name3.txt" : "shub4_name3"
		"vdata/signs/shub4_name4.txt" : "shub4_name4"
		"vdata/signs/shub4_name5.txt" : "shub4_name5"
		"vdata/signs/sign_test.txt" : "sign_test"
		"vdata/signs/sign_test_scripted.txt" : "sign_test_scripted"
		"vdata/signs/sinbin_note.txt" : "sinbin_note"
		"vdata/signs/sinbin_temp.txt" : "sinbin_temp"
		"vdata/signs/start_game_popup.txt" : "start_game_popup"
		"vdata/signs/temp_intro.txt" : "temp_intro"
		"vdata/signs/temp_la.txt" : "temp_la"
		"vdata/signs/tutorial_note.txt" : "tutorial_note"
		"vdata/signs/tutorial_popup.txt" : "tutorial_popup"
		"vdata/signs/tutorial_popup_1.txt" : "tutorial_popup_1"
		"vdata/signs/tutorial_popup_10.txt" : "tutorial_popup_10"
		"vdata/signs/tutorial_popup_11.txt" : "tutorial_popup_11"
		"vdata/signs/tutorial_popup_12.txt" : "tutorial_popup_12"
		"vdata/signs/tutorial_popup_13.txt" : "tutorial_popup_13"
		"vdata/signs/tutorial_popup_14.txt" : "tutorial_popup_14"
		"vdata/signs/tutorial_popup_15.txt" : "tutorial_popup_15"
		"vdata/signs/tutorial_popup_16.txt" : "tutorial_popup_16"
		"vdata/signs/tutorial_popup_17.txt" : "tutorial_popup_17"
		"vdata/signs/tutorial_popup_18.txt" : "tutorial_popup_18"
		"vdata/signs/tutorial_popup_19.txt" : "tutorial_popup_19"
		"vdata/signs/tutorial_popup_2.txt" : "tutorial_popup_2"
		"vdata/signs/tutorial_popup_20.txt" : "tutorial_popup_20"
		"vdata/signs/tutorial_popup_21.txt" : "tutorial_popup_21"
		"vdata/signs/tutorial_popup_22.txt" : "tutorial_popup_22"
		"vdata/signs/tutorial_popup_23.txt" : "tutorial_popup_23"
		"vdata/signs/tutorial_popup_24.txt" : "tutorial_popup_24"
		"vdata/signs/tutorial_popup_25.txt" : "tutorial_popup_25"
		"vdata/signs/tutorial_popup_26.txt" : "tutorial_popup_26"
		"vdata/signs/tutorial_popup_27.txt" : "tutorial_popup_27"
		"vdata/signs/tutorial_popup_28.txt" : "tutorial_popup_28"
		"vdata/signs/tutorial_popup_29.txt" : "tutorial_popup_29"
		"vdata/signs/tutorial_popup_3.txt" : "tutorial_popup_3"
		"vdata/signs/tutorial_popup_30.txt" : "tutorial_popup_30"
		"vdata/signs/tutorial_popup_31.txt" : "tutorial_popup_31"
		"vdata/signs/tutorial_popup_32.txt" : "tutorial_popup_32"
		"vdata/signs/tutorial_popup_33.txt" : "tutorial_popup_33"
		"vdata/signs/tutorial_popup_34.txt" : "tutorial_popup_34"
		"vdata/signs/tutorial_popup_35.txt" : "tutorial_popup_35"
		"vdata/signs/tutorial_popup_36.txt" : "tutorial_popup_36"
		"vdata/signs/tutorial_popup_37.txt" : "tutorial_popup_37"
		"vdata/signs/tutorial_popup_38.txt" : "tutorial_popup_38"
		"vdata/signs/tutorial_popup_39.txt" : "tutorial_popup_39"
		"vdata/signs/tutorial_popup_4.txt" : "tutorial_popup_4"
		"vdata/signs/tutorial_popup_40.txt" : "tutorial_popup_40"
		"vdata/signs/tutorial_popup_41.txt" : "tutorial_popup_41"
		"vdata/signs/tutorial_popup_42.txt" : "tutorial_popup_42"
		"vdata/signs/tutorial_popup_43.txt" : "tutorial_popup_43"
		"vdata/signs/tutorial_popup_44.txt" : "tutorial_popup_44"
		"vdata/signs/tutorial_popup_45.txt" : "tutorial_popup_45"
		"vdata/signs/tutorial_popup_46.txt" : "tutorial_popup_46"
		"vdata/signs/tutorial_popup_47.txt" : "tutorial_popup_47"
		"vdata/signs/tutorial_popup_48.txt" : "tutorial_popup_48"
		"vdata/signs/tutorial_popup_49.txt" : "tutorial_popup_49"
		"vdata/signs/tutorial_popup_5.txt" : "tutorial_popup_5"
		"vdata/signs/tutorial_popup_50.txt" : "tutorial_popup_50"
		"vdata/signs/tutorial_popup_51.txt" : "tutorial_popup_51"
		"vdata/signs/tutorial_popup_52.txt" : "tutorial_popup_52"
		"vdata/signs/tutorial_popup_53.txt" : "tutorial_popup_53"
		"vdata/signs/tutorial_popup_54.txt" : "tutorial_popup_54"
		"vdata/signs/tutorial_popup_55.txt" : "tutorial_popup_55"
		"vdata/signs/tutorial_popup_56.txt" : "tutorial_popup_56"
		"vdata/signs/tutorial_popup_57.txt" : "tutorial_popup_57"
		"vdata/signs/tutorial_popup_58.txt" : "tutorial_popup_58"
		"vdata/signs/tutorial_popup_59.txt" : "tutorial_popup_59"
		"vdata/signs/tutorial_popup_6.txt" : "tutorial_popup_6"
		"vdata/signs/tutorial_popup_60.txt" : "tutorial_popup_60"
		"vdata/signs/tutorial_popup_61.txt" : "tutorial_popup_61"
		"vdata/signs/tutorial_popup_62.txt" : "tutorial_popup_62"
		"vdata/signs/tutorial_popup_63.txt" : "tutorial_popup_63"
		"vdata/signs/tutorial_popup_64.txt" : "tutorial_popup_64"
		"vdata/signs/tutorial_popup_65.txt" : "tutorial_popup_65"
		"vdata/signs/tutorial_popup_66.txt" : "tutorial_popup_66"
		"vdata/signs/tutorial_popup_67.txt" : "tutorial_popup_67"
		"vdata/signs/tutorial_popup_68.txt" : "tutorial_popup_68"
		"vdata/signs/tutorial_popup_69.txt" : "tutorial_popup_69"
		"vdata/signs/tutorial_popup_7.txt" : "tutorial_popup_7"
		"vdata/signs/tutorial_popup_70.txt" : "tutorial_popup_70"
		"vdata/signs/tutorial_popup_8.txt" : "tutorial_popup_8"
		"vdata/signs/tutorial_popup_9.txt" : "tutorial_popup_9"
		"vdata/signs/tutorial_popup_animalism1.txt" : "tutorial_popup_animalism1"
		"vdata/signs/tutorial_popup_animalism2.txt" : "tutorial_popup_animalism2"
		"vdata/signs/tutorial_popup_animalism3.txt" : "tutorial_popup_animalism3"
		"vdata/signs/tutorial_popup_auspex1.txt" : "tutorial_popup_auspex1"
		"vdata/signs/tutorial_popup_auspex2.txt" : "tutorial_popup_auspex2"
		"vdata/signs/tutorial_popup_bloodpool1.txt" : "tutorial_popup_bloodpool1"
		"vdata/signs/tutorial_popup_blood_buff1.txt" : "tutorial_popup_blood_buff1"
		"vdata/signs/tutorial_popup_brujahdisc1.txt" : "tutorial_popup_brujahdisc1"
		"vdata/signs/tutorial_popup_celerity1.txt" : "tutorial_popup_celerity1"
		"vdata/signs/tutorial_popup_celerity2.txt" : "tutorial_popup_celerity2"
		"vdata/signs/tutorial_popup_computers1.txt" : "tutorial_popup_computers1"
		"vdata/signs/tutorial_popup_computers2.txt" : "tutorial_popup_computers2"
		"vdata/signs/tutorial_popup_containers1.txt" : "tutorial_popup_containers1"
		"vdata/signs/tutorial_popup_containers2.txt" : "tutorial_popup_containers2"
		"vdata/signs/tutorial_popup_dementation1.txt" : "tutorial_popup_dementation1"
		"vdata/signs/tutorial_popup_dementation2.txt" : "tutorial_popup_dementation2"
		"vdata/signs/tutorial_popup_dementation3.txt" : "tutorial_popup_dementation3"
		"vdata/signs/tutorial_popup_detected_1.txt" : "tutorial_popup_detected_1"
		"vdata/signs/tutorial_popup_dialogue_dementate.txt" : "tutorial_popup_dialogue_dementate"
		"vdata/signs/tutorial_popup_dialogue_dominate.txt" : "tutorial_popup_dialogue_dominate"
		"vdata/signs/tutorial_popup_dialogue_feats.txt" : "tutorial_popup_dialogue_feats"
		"vdata/signs/tutorial_popup_dialogue_nosferatu.txt" : "tutorial_popup_dialogue_nosferatu"
		"vdata/signs/tutorial_popup_disciplines1.txt" : "tutorial_popup_disciplines1"
		"vdata/signs/tutorial_popup_disciplines2.txt" : "tutorial_popup_disciplines2"
		"vdata/signs/tutorial_popup_dominate1.txt" : "tutorial_popup_dominate1"
		"vdata/signs/tutorial_popup_dominate2.txt" : "tutorial_popup_dominate2"
		"vdata/signs/tutorial_popup_dominate3.txt" : "tutorial_popup_dominate3"
		"vdata/signs/tutorial_popup_drain_pool_1.txt" : "tutorial_popup_drain_pool_1"
		"vdata/signs/tutorial_popup_experience_1.txt" : "tutorial_popup_experience_1"
		"vdata/signs/tutorial_popup_fail_animalism_1.txt" : "tutorial_popup_fail_animalism_1"
		"vdata/signs/tutorial_popup_fail_animalism_2.txt" : "tutorial_popup_fail_animalism_2"
		"vdata/signs/tutorial_popup_fail_auspex_1.txt" : "tutorial_popup_fail_auspex_1"
		"vdata/signs/tutorial_popup_fail_celerity_1.txt" : "tutorial_popup_fail_celerity_1"
		"vdata/signs/tutorial_popup_fail_dementation_1.txt" : "tutorial_popup_fail_dementation_1"
		"vdata/signs/tutorial_popup_fail_dementation_2.txt" : "tutorial_popup_fail_dementation_2"
		"vdata/signs/tutorial_popup_fail_dominate_1.txt" : "tutorial_popup_fail_dominate_1"
		"vdata/signs/tutorial_popup_fail_fortitude_1.txt" : "tutorial_popup_fail_fortitude_1"
		"vdata/signs/tutorial_popup_fail_obfuscate_1.txt" : "tutorial_popup_fail_obfuscate_1"
		"vdata/signs/tutorial_popup_fail_potence_1.txt" : "tutorial_popup_fail_potence_1"
		"vdata/signs/tutorial_popup_fail_presence_1.txt" : "tutorial_popup_fail_presence_1"
		"vdata/signs/tutorial_popup_fail_protean_1.txt" : "tutorial_popup_fail_protean_1"
		"vdata/signs/tutorial_popup_fail_thaumaturgy_1.txt" : "tutorial_popup_fail_thaumaturgy_1"
		"vdata/signs/tutorial_popup_fail_thaumaturgy_2.txt" : "tutorial_popup_fail_thaumaturgy_2"
		"vdata/signs/tutorial_popup_feed1.txt" : "tutorial_popup_feed1"
		"vdata/signs/tutorial_popup_feed2.txt" : "tutorial_popup_feed2"
		"vdata/signs/tutorial_popup_feed_fail_1.txt" : "tutorial_popup_feed_fail_1"
		"vdata/signs/tutorial_popup_fortitude1.txt" : "tutorial_popup_fortitude1"
		"vdata/signs/tutorial_popup_fortitude2.txt" : "tutorial_popup_fortitude2"
		"vdata/signs/tutorial_popup_frenzy1.txt" : "tutorial_popup_frenzy1"
		"vdata/signs/tutorial_popup_frenzy2.txt" : "tutorial_popup_frenzy2"
		"vdata/signs/tutorial_popup_gangreldisc1.txt" : "tutorial_popup_gangreldisc1"
		"vdata/signs/tutorial_popup_get1.txt" : "tutorial_popup_get1"
		"vdata/signs/tutorial_popup_health1.txt" : "tutorial_popup_health1"
		"vdata/signs/tutorial_popup_health2.txt" : "tutorial_popup_health2"
		"vdata/signs/tutorial_popup_inspection1.txt" : "tutorial_popup_inspection1"
		"vdata/signs/tutorial_popup_inspection2.txt" : "tutorial_popup_inspection2"
		"vdata/signs/tutorial_popup_inventory1.txt" : "tutorial_popup_inventory1"
		"vdata/signs/tutorial_popup_jump1.txt" : "tutorial_popup_jump1"
		"vdata/signs/tutorial_popup_lockpicking1.txt" : "tutorial_popup_lockpicking1"
		"vdata/signs/tutorial_popup_lockpicking2.txt" : "tutorial_popup_lockpicking2"
		"vdata/signs/tutorial_popup_malkaviandisc1.txt" : "tutorial_popup_malkaviandisc1"
		"vdata/signs/tutorial_popup_masquerade1.txt" : "tutorial_popup_masquerade1"
		"vdata/signs/tutorial_popup_masquerade2.txt" : "tutorial_popup_masquerade2"
		"vdata/signs/tutorial_popup_masquerade3.txt" : "tutorial_popup_masquerade3"
		"vdata/signs/tutorial_popup_moving1.txt" : "tutorial_popup_moving1"
		"vdata/signs/tutorial_popup_nosferatudisc1.txt" : "tutorial_popup_nosferatudisc1"
		"vdata/signs/tutorial_popup_note1.txt" : "tutorial_popup_note1"
		"vdata/signs/tutorial_popup_obfuscate1.txt" : "tutorial_popup_obfuscate1"
		"vdata/signs/tutorial_popup_obfuscate2.txt" : "tutorial_popup_obfuscate2"
		"vdata/signs/tutorial_popup_obfuscate3.txt" : "tutorial_popup_obfuscate3"
		"vdata/signs/tutorial_popup_obfuscate4.txt" : "tutorial_popup_obfuscate4"
		"vdata/signs/tutorial_popup_physics1.txt" : "tutorial_popup_physics1"
		"vdata/signs/tutorial_popup_physics2.txt" : "tutorial_popup_physics2"
		"vdata/signs/tutorial_popup_pickup_1.txt" : "tutorial_popup_pickup_1"
		"vdata/signs/tutorial_popup_potence1.txt" : "tutorial_popup_potence1"
		"vdata/signs/tutorial_popup_potence2.txt" : "tutorial_popup_potence2"
		"vdata/signs/tutorial_popup_presence1.txt" : "tutorial_popup_presence1"
		"vdata/signs/tutorial_popup_presence2.txt" : "tutorial_popup_presence2"
		"vdata/signs/tutorial_popup_protean1.txt" : "tutorial_popup_protean1"
		"vdata/signs/tutorial_popup_protean2.txt" : "tutorial_popup_protean2"
		"vdata/signs/tutorial_popup_protean3.txt" : "tutorial_popup_protean3"
		"vdata/signs/tutorial_popup_questlog1.txt" : "tutorial_popup_questlog1"
		"vdata/signs/tutorial_popup_rangedcombat1.txt" : "tutorial_popup_rangedcombat1"
		"vdata/signs/tutorial_popup_rangedcombat2.txt" : "tutorial_popup_rangedcombat2"
		"vdata/signs/tutorial_popup_rats1.txt" : "tutorial_popup_rats1"
		"vdata/signs/tutorial_popup_rats2.txt" : "tutorial_popup_rats2"
		"vdata/signs/tutorial_popup_sneaking1.txt" : "tutorial_popup_sneaking1"
		"vdata/signs/tutorial_popup_sneaking2.txt" : "tutorial_popup_sneaking2"
		"vdata/signs/tutorial_popup_stealthkill1.txt" : "tutorial_popup_stealthkill1"
		"vdata/signs/tutorial_popup_thaumaturgy1.txt" : "tutorial_popup_thaumaturgy1"
		"vdata/signs/tutorial_popup_thaumaturgy2.txt" : "tutorial_popup_thaumaturgy2"
		"vdata/signs/tutorial_popup_thaumaturgy3.txt" : "tutorial_popup_thaumaturgy3"
		"vdata/signs/tutorial_popup_thirty_eight1.txt" : "tutorial_popup_thirty_eight1"
		"vdata/signs/tutorial_popup_tireiron1.txt" : "tutorial_popup_tireiron1"
		"vdata/signs/tutorial_popup_toreadordisc1.txt" : "tutorial_popup_toreadordisc1"
		"vdata/signs/tutorial_popup_tremeredisc1.txt" : "tutorial_popup_tremeredisc1"
		"vdata/signs/tutorial_popup_unarmedcombat1.txt" : "tutorial_popup_unarmedcombat1"
		"vdata/signs/tutorial_popup_unarmedcombat2.txt" : "tutorial_popup_unarmedcombat2"
		"vdata/signs/tutorial_popup_use1.txt" : "tutorial_popup_use1"
		"vdata/signs/tutorial_popup_ventruedisc1.txt" : "tutorial_popup_ventruedisc1"
		"vdata/signs/tutorial_popup_weapons1.txt" : "tutorial_popup_weapons1"
	]
	fade_in(float) : "Fade-In (secs)" : "0.5" : "Fade-in effect when sign opens."
	fade_out(float) : "Fade-Out (secs)" : "0.5" : "Fade-out effect when sign closes."
	pause(choices) : "Pause When Reading" : 1 : "Pauses game process when sign shows on-screen." =
	[
		0 : "No"
		1 : "Yes"
	]

	// fixme!
	spawnflags(flags) =
	[
		1: "1 (unknown yet)" : 0
		5: "Initial State" : 1
	]

	// inputs
	input ChangeFile(string) : "Changes sign definition file."
	input OpenWindow(void) : "Opens sign window."
	input CloseWindow(void) : "Closes sign window."
]




//===================================================================================================================
// hud_counter [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname) iconsprite("editor/logic_timer.vmt") = hud_counter : 
	"[VTMB] Show numerical value on screen.\nNOTE: Never have gotten it to work."
[
	setvalue(integer) : "Count Time" : 240 : "Set time value."
	setxpos(float) : "X Position" : -1 : "Set X position on screen."
	setypos(float) : "Y Position" : -1 : "Set Y position on screen."

	// inputs
	input setvalue(integer) : "Set time value."
	input setxpos(void) : "Set X position on screen."
	input setypos(void) : "Set Y position on screen."
	input TurnOn(void) : "Turn on the countdown."
	input TurnOff(void) : "Turn off the countdown."
]




//===================================================================================================================
// hud_timer [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname) iconsprite("editor/logic_timer.vmt") = hud_timer : 
	"[VTMB] Countdown timer that shows on hud and executes script when complete."
[
	count_time(integer) : "Count Time" : 240 : "Countdowns to script execution."
	count_type(choices) : "Count Type" : "-1" : "Sets the countdown method [not tested]." =
	[
		"-1" : "Default"
		0 : "Type 0 (unknown yet)"
		1 : "Type 1 (unknown yet)"
	]

	// inputs
	input count_time(integer) : "Set count time value."
	input RestartTimer(void) : "Restart timer."
	input ResetTimer(void) : "Reset timer to initial state."
	input StartTimer(void) : "Start timer."
	input PauseTimer(void) : "Pause timer."
	input Show(void) : "Display timer on screen."
	input Hide(void) : "Hide timer indication."

	// outputs
	output OnTimerComplete(void) : "Fired when countdown complete."
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// Hints & Nodes
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// CLASS: info_node_special [VTMB-specific]
//===================================================================================================================

@BaseClass base(Targetname,HintNode) = info_node_special : 
	"[VTMB] Special NPC-related node."
[
	group_id(integer) : "Group ID" : 1 : "[VTMB] Unknown..."
	hint_rating(integer) : "Hint Rating" : 3 : "[VTMB] Unknown..."
	target_name(target_destination) : "Target Name" : : "[VTMB] Not used at NPC-related nodes. Unknown..."
	target_angle_range(float) : "Target Angle Range" : 60 : "[VTMB] Unknown..."
	target_dist_min(integer) : "Target Max Distance" : 256 : "[VTMB] Unknown..."
	target_dist_max(integer) : "Target Min Distance" : 32000 : "[VTMB] Unknown..."
]



//===================================================================================================================
// info_node_crosswalk [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname,HintNode) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_crosswalk :
	"[VTMB] Unrecognized info_node..."
[
]



//===================================================================================================================
// specific nodes [VTMB-specific]
//===================================================================================================================

@PointClass base(info_node_special) studio("models/editor/ground_node_cover_med.mdl") = info_node_cover_med [	hinttype(choices) : "Hint" : 100 = [ 100 : "Untested VTMB's (100)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node_cover_low.mdl") = info_node_cover_low [	hinttype(choices) : "Hint" : 101 = [ 101 : "Untested VTMB's (101)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node_cover_corner.mdl") = info_node_cover_corner [	hinttype(choices) : "Hint" : 10200 = [ 10200 : "Untested VTMB's (10200)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") = info_node_shoot_at [	hinttype(choices) : "Hint" : 10400 = [ 10400 : "Untested VTMB's (10400)" ]]

@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_patrol_point
[
	hinttype(choices) : "Hint" : 10000 = [ 10000 : "Untested VTMB's (10000)" ]
	ip_percent(integer) : "ID Percent [-?]" : 100 : "[VTMB] Unknown..."
]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_kick_at
[
	hinttype(choices) : "Hint" : 10300 = [ 10300 : "Untested VTMB's (10300)" ]
	output OnNPCKicked(void) : "Fired when NPC killed [not tested]."
]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_kick_over
[
	hinttype(choices) : "Hint" : 10300 = [ 10300 : "Untested VTMB's (10300)" ]
	output OnNPCKicked(void) : "Fired when NPC killed [not tested]."
]




//===================================================================================================================
// specific_npc-based nodes [VTMB-specific]
//===================================================================================================================

@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_sabbat_top  [	hinttype(choices) : "Hint" : 16000 = [ 16000 : "Untested Sabbat's (16000)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_sabbat_bottom  [	hinttype(choices) : "Hint" : 16000 = [ 16000 : "Untested Sabbat's (16000)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_sabbat_arch [	hinttype(choices) : "Hint" : 16002 = [ 16002 : "Untested Sabbat's (16002)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_sabbat_dive [	hinttype(choices) : "Hint" : 16003 = [ 16003 : "Untested Sabbat's (16003)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_sabbat_nojump [	hinttype(choices) : "Hint" : 16004 = [ 16004 : "Untested Sabbat's (16004)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_sabbat_hide [	hinttype(choices) : "Hint" : 16005 = [ 16005 : "Untested Sabbat's (16005)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_bach_teleport_1 [	hinttype(choices) : "Hint" : 17000 = [ 17000 : "Untested Bach's (17000)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_bach_teleport_2 [	hinttype(choices) : "Hint" : 17001 = [ 17001 : "Untested Bach's (17001)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_bach_teleport_3 [	hinttype(choices) : "Hint" : 17002 = [ 17002 : "Untested Bach's (17002)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_bach_teleport_4 [	hinttype(choices) : "Hint" : 17003 = [ 17003 : "Untested Bach's (17003)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_bach_run_1 [	hinttype(choices) : "Hint" : 17004 = [ 17004 : "Untested Bach's (17004)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_bach_run_2 [	hinttype(choices) : "Hint" : 17005 = [ 17005 : "Untested Bach's (17005)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_chang_column [	hinttype(choices) : "Hint" : 18000 = [ 18000 : "Untested Chang's (18000)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_chang_jumpbase [	hinttype(choices) : "Hint" : 18001 = [ 18001 : "Untested Chang's (18001)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_chang_teleport [	hinttype(choices) : "Hint" : 18002 = [ 18002 : "Untested Chang's (18002)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_chang_ledge [	hinttype(choices) : "Hint" : 18003 = [ 18003 : "Untested Chang's (18003)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_manbat_fly_to_point [	hinttype(choices) : "Hint" : 20000 = [ 20000 : "Untested Manbat's (20000)" ]]

@PointClass base(Node) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_tzimisce []
@PointClass base(Node) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_tzimisce_claw_left []
@PointClass base(Node) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_tzimisce_claw_right []
@PointClass base(Node) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_werewolf []
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_werewolf_hint
[
	hinttype(choices) : "Hint" : 15000 = 
	[ 
		15000 : "Untested Werewolf's (15000)" 
		15001 : "Untested Werewolf's (15001)" 
		15002 : "Untested Werewolf's (15002)" 
		15003 : "Untested Werewolf's (15003)" 
		15004 : "Untested Werewolf's (15004)" 
		15005 : "Untested Werewolf's (15005)" 
		15006 : "Untested Werewolf's (15006)" 
		15008 : "Untested Werewolf's (15008)" 
		15011 : "Untested Werewolf's (15011)" 
		15012 : "Untested Werewolf's (15012)" 
		15013 : "Untested Werewolf's (15013)" 
		15014 : "Untested Werewolf's (15014)" 
		15015 : "Untested Werewolf's (15015)" 
		15016 : "Untested Werewolf's (15016)" 
		15017 : "Untested Werewolf's (15017)" 
		15018 : "Untested Werewolf's (15018)" 
	]
	UserData(string) : "User Data [-?]" : 200 : "[VTMB] Unknown..."
	output OnAnimEvent1(void) : "[VTMB: untested connection]"
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// INFO Entities
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// point_target [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname) iconsprite("editor/info_target.vmt") = point_target : 
	"[VTMB] Same as 'info_target'. An entity that does nothing. Very useful as a positioning entity for other entities to refer to (i.e. the endpoint of an env_beam)"
[
	spawnflags(Flags) =
	[
		1 : "1 (unknown yet)" : 0
	]
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// Inspections, Conversations
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// inspection_brush [VTMB-specific]
//===================================================================================================================

@SolidClass base(Targetname,Origin,VEnableDisable) = inspection_brush : 
	"[VTMB] Inspection brush (unfortunately, that's all I know about it)."
[
	inspection(choices) : "Inspection Type" : 7 : "[VTMB] Unknown yet..." = 
	[
		0 : "<none>"
		1 : "Type 1"
		2 : "Type 2"
		3 : "Type 3"
		4 : "Type 4"
		5 : "Type 5"
		6 : "Type 6"
		7 : "Type 7"
		8 : "Type 8"
		9 : "Type 9"
		10 : "Type 10"
	]

	// inputs
	input TurnOn(void): "Turns on the effect [-?]."
	input TurnOff(void): "Turns off the  effect [-?]."
	input SetAttachType(void): "Sets attach type [-?]."
	input SetRateScale(void): "Sets rate scale [-?]."
	input SetRampTime(void): "Sets ramp time [-?]."
]




//===================================================================================================================
// inspection_node [VTMB-specific]
//===================================================================================================================

@PointClass base(inspection_brush,Parentname) studio("models/editor/ground_node.mdl") = inspection_node : 
	"[VTMB] Inspection node.\nCreating an inspection_node and settings its parent to an object within the room is a fast way to add sparklies to objects you want the pc to always find."
[
	// inputs
	input TurnOn(void): "Turns on the effect [-?]."
	input TurnOff(void): "Turns off the  effect [-?]."
	input SetAttachType(void): "Sets attach type [-?]."
	input SetRateScale(void): "Sets rate scale [-?]."
	input SetRampTime(void): "Sets ramp time [-?]."
	
	// outputs
	output OnPlayerPickup(void): "[VTMB: unknown]."
]





//===================================================================================================================
// intersting_place [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname) = intersting_place : 
	"[VTMB] Interesting places can be visualized as phone booth sized boxes that attract NPCs that meet certain criteria.\n"+
	"When an eligible NPC enters the 'phone booth', they will perform whatever actions the interesting place has associated with it.\n"+
	"Interesting Places, their NPC types and their actions are defined in:\n\n"+
	"\t'vdata/system/InterestingPlaceTypeList.txt'\n\n"+
	"Interesting_places can't be instantiated dynamically. Ent_info doesn't even acknowledge the class exists.\n\n"+
	"NOTE: Entity not tested and some properties descriptions can be wrong or unfull."
[
	type(choices) : "Action Type" : "Idle" : "[VTMB] Unknown yet..." =
	[
		"arms_crossed" : "arms_crossed"
		"bed_sleep_left" : "bed_sleep_left"
		"bed_sleep_right" : "bed_sleep_right"
		"bum_idle" : "bum_idle"
		"bum_rest" : "bum_rest"
		"can_drink" : "can_drink"
		"cards_forward_left" : "cards_forward_left"
		"cards_forward_right" : "cards_forward_right"
		"cellphone" : "cellphone"
		"cigarette" : "cigarette"
		"Citizen_Idle" : "Citizen_Idle"
		"conversation_normal" : "conversation_normal"
		"couch_sit" : "couch_sit"
		"Dance" : "Dance"
		"Doggy" : "Doggy"
		"Doorknock" : "Doorknock"
		"Drama" : "Drama"
		"graffiti" : "graffiti"
		"guard_drunk" : "guard_drunk"
		"guard_whistling" : "guard_whistling"
		"id" : "id"
		"Idle" : "Idle"
		"madness" : "madness"
		"operate_computer" : "operate_computer"
		"operate_panel" : "operate_panel"
		"payphone" : "payphone"
		"piss" : "piss"
		"praying" : "praying"
		"ready_onehanded_weapon" : "ready_onehanded_weapon"
		"ready_twohanded_weapon" : "ready_twohanded_weapon"
		"wall_lean" : "wall_lean"
		"zombie_bang_gate" : "zombie_bang_gate"
		"zombie_reach_gate" : "zombie_reach_gate"
	]
	enabled(choices) : "Enabled" : 1 : "Enables this entity by default." = 
	[
		0 : "No"
		1 : "Yes"
	]
	group_id(string) : "Group ID" :	"1" : "[VTMB] Unknown yet..."
	holster_weapon(choices) : "Holster Weapon" : 1 : "[VTMB] Unknown yet..." = 
	[
		0 : "No"
		1 : "Yes"
	]
	match_orientation(choices) : "Match Orientation." : 1 : "[VTMB] Unknown yet..." = 
	[
		0 : "No"
		1 : "Yes"
	]
	min_bounds(angle) : "Min Bounds" : "0 0 0" : "[VTMB] Unknown yet..."
	max_bounds(angle) : "Max Bounds" : "0 0 0" : "[VTMB] Unknown yet..."
	min_time(float) : "Min Time" : 0 : "[VTMB] Unknown yet..."
	max_time(float) : "Min Time" : 10 : "[VTMB] Unknown yet..."
	max_npcs(integer) : "Max NPCs" : 1 : "[VTMB] Unknown yet..."
	rating(integer) : "Rating [-?]" : 3 : "[VTMB] Unknown yet..."
	testflags(integer) : "Test Flags [-?]" : 4 : "[VTMB] Unknown yet..."

	spawnflags(flags) = 
	[
		1 : "1 (unknown yet)" : 0
	]

	// inputs
	input Enable(void) : "Enable entity [-?]."
	input Disable(void) : "Disable entity [-?]."
	
	// outputs
	output OnNPCArrived(void) : "Fired when some NPC arrived [-?]."
	output OnNPCLeft(void) : "Fired when some NPC left [-?]."
	output OnAnimEvent1(void) : "[VTMB: untested connection]."
	output OnAnimEvent2(void) : "[VTMB: untested connection]."
	output OnAnimEvent3(void) : "[VTMB: untested connection]."
	output OnAnimEvent4(void) : "[VTMB: untested connection]."
	output OnAnimEvent5(void) : "[VTMB: untested connection]."
	output OnAnimEvent6(void) : "[VTMB: untested connection]."
	output OnAnimEvent7(void) : "[VTMB: untested connection]."
	output OnAnimEvent8(void) : "[VTMB: untested connection]."
]





//===================================================================================================================
// intersting_place_conversation [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname) = intersting_place_conversation : 
	"[VTMB] See Intersting_Place.\n\nConversation marks nodes that attract 2 NPCs at the same time..."
[
	interesting_places(choices) : "Interesting Places" : "generic conversation" : "[VTMB] Unknown yet..." =
	[
		"ash_convo" : "ash_convo"
		"bar_convo_spot" : "bar_convo_spot"
		"barconvo1" : "barconvo1"
		"barconvo2" : "barconvo2"
		"card_game" : "card_game"
		"cocktail_1" : "cocktail_1"
		"cocktail_2" : "cocktail_2"
		"conv1" : "conv1"
		"conversation_spot_1" : "conversation_spot_1"
		"conversation_spot_2" : "conversation_spot_2"
		"conversation_spot_3" : "conversation_spot_3"
		"conversation_spot_4" : "conversation_spot_4"
		"conversation_spot_4" : "conversation_spot_4"
		"conversation_spot_5" : "conversation_spot_5"
		"convo_ballroom_1" : "convo_ballroom_1"
		"convo_bar_1" : "convo_bar_1"
		"convo_spot_1" : "convo_spot_1"
		"convo_spot_2" : "convo_spot_2"
		"convo_spot_2" : "convo_spot_2"
		"convo_spot_3" : "convo_spot_3"
		"eneric conversation" : "generic conversation"
		"grate_convo" : "grate_convo"
		"initP_conversation_3_nodes" : "initP_conversation_3_nodes"
		"int_plc_party_1" : "int_plc_party_1"
		"int_plc_party_2" : "int_plc_party_2"
		"int_plc_party_3" : "int_plc_party_3"
		"int_plc_party_4" : "int_plc_party_4"
		"IntPlc_Conversation_1" : "IntPlc_Conversation_1"
		"IntPlc_Conversation_2" : "IntPlc_Conversation_2"
		"IntPlc_Conversation_3" : "IntPlc_Conversation_3"
		"IntrestingPlace_Conversation_BigDialog" : "IntrestingPlace_Conversation_BigDialog"
		"ip_1_dragon" : "ip_1_dragon"
		"ip_11" : "ip_11"
		"ip_conversation_1" : "ip_conversation_1"
		"ip_conversation_2" : "ip_conversation_2"
		"ip_glaze" : "ip_glaze"
		"monk_conversation_ip" : "monk_conversation_ip"
		"no_ash_convo" : "no_ash_convo"
		"Node_Conversation_Card_Game" : "Node_Conversation_Card_Game"
		"Node_Conversation_Trains" : "Node_Conversation_Trains"
		"thug_conversation" : "thug_conversation"
		"upstairs_conversation" : "upstairs_conversation"
	]
	enabled(choices) : "Enabled" : 1 : "Enables this entity by default." = 
	[
		0 : "No"
		1 : "Yes"
	]
	audible_dist(integer) : "Audible Distance" : 1000 : "Sets the conversation audiblity, in units."
	min_time(float) : "Min Time" : 0 : "[VTMB] Unknown yet..."
	max_time(float) : "Min Time" : 10 : "[VTMB] Unknown yet..."
	player_dist(float) : "Distance from Player" : 10 : "[VTMB] Unknown yet..."
	sound_loop(sound) : "Sound Loop" : "Environmental/People/Conversation1.wav" : "Sound played many times over."
	sound_once(sound) : "Sound Played Once" : "Character/Conversations/Warehouse/Coversations/Conversation1.wav" : "Sound played just once, then disable."
	sound_occluded(choices) : "Sound Occluded [-?]" : 1 : "[VTMB] Unknown yet..." = 
	[
		0 : "No"
		1 : "Yes"
	]
	turn_towards_talker(choices) : "Turn Towards Talker" : 1 : "[VTMB] Unknown yet..." = 
	[
		0 : "No"
		1 : "Yes"
	]
	
	// inputs
	input Enable(void) : "Enable entity [-?]."
	input Disable(void) : "Disable entity [-?]."

	// outputs
	output OnNPCArrived(void) : "Fired when some NPC arrived [-?]."
	output OnNPCLeft(void) : "Fired when some NPC left [-?]."
	output OnPlayerTooClose(void) : "Fired when player is too close to target [not tested]."
	output OnOneOffSoundComplete(void) : "[VTMB: untested connection]."
	output OnAnimEvent1(void) : "[VTMB: untested connection]."
	output OnAnimEvent2(void) : "[VTMB: untested connection]."
	output OnAnimEvent3(void) : "[VTMB: untested connection]."
	output OnAnimEvent4(void) : "[VTMB: untested connection]."
	output OnAnimEvent5(void) : "[VTMB: untested connection]."
	output OnAnimEvent6(void) : "[VTMB: untested connection]."
	output OnAnimEvent7(void) : "[VTMB: untested connection]."
	output OnAnimEvent8(void) : "[VTMB: untested connection]."
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// LOGICAL Entities
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// logic_case_toggle [VTMB-specific]
//===================================================================================================================

@PointClass base(logic_case) iconsprite("editor/ai_relationship.vmt") = logic_case_toggle : 
	"[VTMB] Toggleable logic_case [not tested]."
[
	InitialCase(integer) : "Initial Case (0-160" : 1 : "Defines initial case from which toggle starts."
	input InValueDelta(void) : "[VTMB: untested connection]"
]




//===================================================================================================================
// logic_pythoncheck [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname) iconsprite("editor/logic_branch.vmt") = logic_pythoncheck :
	"[VTMB] Checks python script states [-?]. Untested..."
[
	python_script(string) : "Python Script" : "FindPlayer().IsMale()" : "Defines checking condition."
	spawnflags(Flags) =
	[
		1 : "1 (unknown yet)" : 0
	]
	
	// connections
	input Test(void) : "[VTMB: untested conection]"
	output OnTrue(void) : "[VTMB: untested conection]"
	output OnFalse(void) : "[VTMB: untested conection]"
]




//===================================================================================================================
// logic_npc_condition [VTMB-specific]
//===================================================================================================================

@PointClass iconsprite("editor/ai_relationship.vmt") = logic_npc_condition :
	"[VTMB] Creates conditions for NPC-related events [not tested]."
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	condition(choices) : "Condition" : "COND_SEE_PLAYER" : "Condition definition name." =
	[
		"COND_SEE_PLAYER" : "COND_SEE_PLAYER"
		"COND_HEAR_PLAYER" : "COND_HEAR_PLAYER"
	]
	target_npc(target_destination) : "Target NPC" : : "The name of target NPC."
	
	// connections
	input Test(void) : "[VTMB: untested conection]"
	output OnTrue(void) : "[VTMB: untested conection]"
	output OnFalse(void) : "[VTMB: untested conection]"
]




//===================================================================================================================
// logic_squad_condition [VTMB-specific]
//===================================================================================================================

@PointClass iconsprite("editor/ai_relationship.vmt") = logic_squad_condition :
	"[VTMB] Creates conditions for Squad-related events [not tested]."
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	condition(choices) : "Condition" : "COND_SEE_PLAYER" : "Condition definition name." =
	[
		"COND_SEE_PLAYER" : "COND_SEE_PLAYER"
		"COND_HEAR_PLAYER" : "COND_HEAR_PLAYER"
	]
	squad_name(target_destination) : "Squad Name" : : "The name of Squad [-?]."
	spawnflags(Flags) =
	[
		1 : "1 (unknown yet)" : 0
	]
	
	// connections
	input Test(void) : "[VTMB: untested conection]"
	output OnTrue(void) : "[VTMB: untested conection]"
	output OnFalse(void) : "[VTMB: untested conection]"
]




//===================================================================================================================
// logic_visibility_test [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname) iconsprite("editor/logic_branch.vmt") = logic_visibility_test :
	"[VTMB] A point entity that checks visiblity between two entities [not tested].\nRarely used."
[
	source_ent(target_destination) : "Source Entity Name" : : "The source entity that will estimate visiblity of target [not tested]."
	target_ent(target_destination) : "Target Entity Name" : : "The target entity that's visiblity checks [not tested]."
	radius(integer) : "Activity Radius" : 768 : "Radius that logic_visibility_test active [not tested]."

	// connections
	input CheckVisibility(void) : "Check Visiblity of object."
	output OnCanSeeTarget(void) : "Fired when entity detects target in it's FOV."
	output OnNotSeeTarget(void) : "Fired when entity unable to detect target in it's FOV."
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
//
// Moving, Keyframes and Ropes
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// func_keyframed_mover [VTMB-specific]
//===================================================================================================================

@MoveClass base(Targetname,VMovingConnects) size(-8 -8 -8, 8 8 8) color(255 170 0) animator() = func_keyframed_mover : 
	"[VTMB] Keyframed Move Behavior"
[
	speed(integer) : "Moving Speed" : 128 : "Moving speed."
	direction(vector) : "Moving Direction" : 0 : "Set the moving direction [-?]."
	start_key(target_destination) : "Start Keyframe" : : "Start keyframe [-?]."
	
	// fixme!
	spawnflags(flags) =
	[
		1: "1 (unknown yet)" : 0
	]
	
	// inputs
	input MoveForwards(void) : "Starts move forwards."
	input MoveBackwards(void) : "Starts move backwards."
	input StopMoving(void) : "Stops moving."
	input SetSpeed(float) : "Set moving speed."
	input SnapToKeyframe(string) : "Snaps to selected keyframe [-?]."

	// outputs
	output OnReachedKeyframe(void) : "Fired when defined keyframe reached."
	output OnReachedEnd(void) : "Fired when moving reached its end [-?]."
	output OnReachedBeginning(void) : "Fired when moving reached its begining [-?]."
]




//===================================================================================================================
// mover_keyframe [VTMB-specific]
//===================================================================================================================

@MoveClass base(Targetname,KeyFrame) studio("models/editor/axis_helper.mdl") animator() = mover_keyframe : 
	"[VTMB] An entity that moves on it's keyframes (-? not tested)."
[
	output OnReached(void) : "Fired whenever the mover reaches a goal position."
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// PHYSICS Point Entities
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// phys_animlink [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname) iconsprite("editor/logic_relay.vmt") = phys_animlink : 
	"[VTMB] Rarely used, not tested yet..."
[
	animator(target_destination) : "Animator Entity" : : "[VTMB] Unknown yet..."
	animator_bone(string) : "Animator Bone" : "prop_static" : "[VTMB] Unknown yet..."
	attach_angle(angle) : "Attach Angle (Z X Y)" : "0 0 0" : "[VTMB] Unknown yet..."
	attach_offset(angle) : "Attach Offset (Z X Y)" : "0 0 0" : "[VTMB] Unknown yet..."
	attached(target_destination) : "Attached Entity" : : "[VTMB] Unknown yet..."
	attached_bone(string) : "Attached Bone" : "Bip01 Head" : "[VTMB] Unknown yet..."
]






































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// TRIGGERS
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// trigger_bomb_site [VTMB-specific]
//===================================================================================================================

@SolidClass base(VBaseTrigger,Parentname) = trigger_bomb_site : 
	"[VTMB] A trigger that defines the site for laying bomb (e.g. astrolite)."
[
 	StartHidden(choices) : "Start Hidden" : 0 : "[VTMB] Don't spawn the entity while the script comand didn't sent." = 
	[ 
		0 : "No"
		1 : "Yes"
	]

	// inputs
	input Enable(void) : "Enable this trigger."
	input Disable(void) : "Disable this trigger."
	input Toggle(void) : "Toggle trigger state between enabled / disabled."
	input ToggleFlagClient(void) : "Toggle client's ability to use this trigger."
	input ToggleFlagNPC(void) : "Toggle NPC's ability to use this trigger."
	input EnableFlagClient(void) : "Enable client's ability to use this trigger."
	input EnableFlagNPC(void) : "Enable NPC's ability to use this trigger."
	input DisableFlagClient(void) : "Disable client's ability to use this trigger."
	input DisableFlagNPC(void) : "Disable NPC's ability to use this trigger."
	
	// outputs
	output OnBombPlaced(void) : "Fired when the bomb placed."
	output OnBombDefused(void) : "Fired when the bomb defused."
	output OnStartTouch(void) : "Fired when an entity starts touching this trigger. The touching entity must pass this trigger's filter-flags to cause this output to fire."
	output OnEndTouch(void) : "Fired when an entity stops touching this trigger. Only entities that passed this trigger's filter-flags will cause this output to fire."
]




//===================================================================================================================
// trigger_checkvolume [VTMB-specific]
//===================================================================================================================

@SolidClass base(VBaseTrigger) = trigger_checkvolume : 
	"[VTMB] A trigger that checks entity volume [unknown yet]."
[
	// inputs
	input CheckNow(void) : "Check now [unknown yet]."
]




//===================================================================================================================
// trigger_discipline_context [VTMB-specific]
//===================================================================================================================

@SolidClass base(VBaseTrigger) = trigger_discipline_context : 
	"[VTMB] Untested trigger entity..."
[
	Discipline_Context(choices) : "Discipline Context" : 4 : "[VTMB] Unknwon yet..." =
	[
		0 : "Context 0 [-?]"
		1 : "Context 1 [-?]"
		2 : "Context 2 [-?]"
		3 : "Context 3 [-?]"
		4 : "Context 4 [-?]"
	]
	StartHidden(choices) : "Start Hidden" : 0 : "Don't spawn the entity while the script comand didn't sent." = 
	[ 
		0 : "No"
		1 : "Yes"
	]
	spawnflags(flags) =
	[
		2: "2 (unknown vtmb's)" : 0
	]
]




//===================================================================================================================
// trigger_electric_bugaloo [VTMB-specific]
//===================================================================================================================

@SolidClass base(VBaseTrigger) = trigger_electric_bugaloo : 
	"[VTMB] Untested trigger entity..."
[
]




//===================================================================================================================
// trigger_environmental_audio [VTMB-specific]
//===================================================================================================================

@SolidClass base(VBaseTrigger) = trigger_environmental_audio : 
	"[VTMB] A trigger that creates DSP environmental sound effects in it's volume (in HL2 it was using as part of 'env_soundscape' entity)."
[
	room_type(choices) : "DSP Room Type" : 1 : "DSP preset that creates any sound effects like echo, reverb, etc." =
	[
		0 : "Normal (off)"
		1 : "Generic (auto)"
		2 : "Metal Small"
		3 : "Metal Medium"
		4 : "Metal Large"
		5 : "Tunnel Small"
		6 : "Tunnel Medium"
		7 : "Tunnel Large"
		8 : "Chamber Small"
		9 : "Chamber Medium"
		10: "Chamber Large"
		11: "Bright Small"
		12: "Bright Medium"
		13: "Bright Large"
		14: "Water 1"
		15: "Water 2"
		16: "Water 3"
		17: "Concrete Small"
		18: "Concrete Medium"
		19: "Concrete Large"
		20: "Big 1"
		21: "Big 2"
		22: "Big 3"
		23: "Cavern Small"
		24: "Cavern Medium"
		25: "Cavern Large"
		26: "Weirdo 1"
		27: "Weirdo 2"
		28: "Weirdo 3"
		102: "ROOM EMPTY SMALL BRIGHT"
		103: "ROOM EMPTY HUGE DULL"
		104: "ROOM DIFFUSE SMALL BRIGHT"
		105: "ROOM DIFFUSE HUGE DULL"
		106: "DUCT EMPTY SMALL BRIGHT"
		107: "DUCT EMPTY HUGE DULL"
		108: "DUCT DIFFUSE SMALL BRIGHT"
		109: "DUCT DIFFUSE HUGE DULL"
		110: "HALL EMPTY SMALL BRIGHT"
		111: "HALL EMPTY HUGE DULL"
		112: "HALL DIFFUSE SMALL BRIGHT"
		113: "HALL DIFFUSE HUGE DULL"
		114: "TUNNEL EMPTY SMALL BRIGHT"
		115: "TUNNEL EMPTY HUGE DULL"
		116: "TUNNEL DIFFUSE SMALL BRIGHT"
		117: "TUNNEL DIFFUSE HUGE DULL"
		118: "STREET EMPTY SMALL BRIGHT"
		119: "STREET EMPTY HUGE DULL"
		120: "STREET DIFFUSE SMALL BRIGHT"
		121: "STREET DIFFUSE HUGE DULL"
		122: "ALLEY EMPTY SMALL BRIGHT"
		123: "ALLEY EMPTY HUGE DULL"
		124: "ALLEY DIFFUSE SMALL BRIGHT"
		125: "ALLEY DIFFUSE HUGE DULL"
		126: "COURTYARD EMPTY SMALL BRIGHT"
		127: "COURTYARD EMPTY HUGE DULL"
		128: "COURTYARD DIFFUSE SMALL BRIGHT"
		129: "COURTYARD DIFFUSE HUGE DULL"
		130: "OPENSPACE EMPTY SMALL BRIGHT"
		131: "OPENSPACE EMPTY HUGE DULL"
		132: "OPENSPACE DIFFUSE SMALL BRIGHT"
		133: "OPENSPACE DIFFUSE HUGE DULL"
		134: "TUNNEL EMPTY HUGE DULL"
	]
	StartHidden(choices) : "Start Hidden" : 0 : "Don't spawn the entity while the script comand didn't sent." = 
	[ 
		0 : "No"
		1 : "Yes"
	]
]




//===================================================================================================================
// trigger_inventory_check [VTMB-specific]
//===================================================================================================================

@SolidClass base(Trigger) = trigger_inventory_check : 
	"[VTMB] A trigger that checks specified inventory item availability and generate the dependent output."
[
	itemname(target_destination) : "Item to Check" : : "The name of an inventory item that will be checked by trigger."

	// connections
	output OnPlayerHasItem(void) : "Fired whether a player has selected item."
]




//===================================================================================================================
// trigger_player_activity_level [VTMB-specific]
//===================================================================================================================

@SolidClass base(Targetname,VBaseTrigger) = trigger_player_activity_level :
	"[VTMB] A trigger volume that sets player activity level (not tested)."
[
	criminal_level(float) : "Criminal Level" : "-1" : "Sets player's Criminal level to this value [not tested]."
	investigate_level(float) : "Investigate Level" : "-1" : "Sets player's Investigate level to this value [not tested]."
	supernatural_level(float) : "Supernatural Level" : "-1" : "Sets player's Supernatural level to this value [not tested]."

	// inputs
	input SetSupernaturalLevel(float) : "Set player's Supernatural level."
	input SetCriminalLevel(float) : "Set player's Criminal level."
	input SetInvestigateLevel(float) : "Set player's Investigate level."
]




//===================================================================================================================
// trigger_small_hull [VTMB-specific]
//===================================================================================================================

@SolidClass base(Targetname,VBaseTrigger) = trigger_small_hull :
	"[VTMB] A trigger that creates small hull (-? unknown yet)."
[
]




//===================================================================================================================
// trigger_stealth_mod [VTMB-specific]
//===================================================================================================================

@SolidClass base(Targetname,VBaseTrigger) = trigger_stealth_mod :
	"[VTMB] A trigger that modifies the player's stealth abilities (not tested)."
[
	stealth_modifier(choices) : "Stealth Modifier Type" : 1 : "Select stealth modifier type defined in 'vdata/systes/stealth.txt' (not tested)." =
	[
		1 : "Modifier #1"
		2 : "Modifier #2"
		3 : "Modifier #3"
		4 : "Modifier #4"
		5 : "Modifier #5"
		6 : "Modifier #6"
		7 : "Modifier #7"
		8 : "Modifier #8"
		9 : "Modifier #9"
		10 : "Modifier #10"
	]
]




//===================================================================================================================
// trigger_werewolf_zone [VTMB-specific]
//===================================================================================================================

@SolidClass base(Targetname,VBaseTrigger) = trigger_werewolf_zone :
	"[VTMB] A trigger that defines werewolf zones (not tested)."
[
	target_name(target_destination) : "Target Destination" : : "The name of target entity [not tested]."
	zone_type(choices) : "Zone Type" : 0 : "Defines type of werewolf zone [not tested]." =
	[
		0 : "Zone 0 [-?]"
		1 : "Zone 1 [-?]"
		2 : "Zone 2 [-?]"
		3 : "Zone 3 [-?]"
		4 : "Zone 4 [-?]"
		5 : "Zone 5 [-?]"
		6 : "Zone 6 [-?]"
		7 : "Zone 7 [-?]"
		8 : "Zone 8 [-?]"
	]
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// LOCKS
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//====================================================================================================================
// CLASS: VOpenable [VTMB-specific]
//====================================================================================================================

@BaseClass base(Targetname,Parentname,Studiomodel,VUseIcons,VLockedIcons,VBreakingConnects) = VOpenable
[
	difficulty(choices) : "Lock Difficulty" : 4 : "Entity's lock difficulty. Only with sufficient skill level, the player will be able to open it." =
	[
		0 : "<open anyway>"
		1 : "1"
		2 : "2"
		3 : "3"
		4 : "4"
		5 : "5"
		6 : "6"
		7 : "7"
		8 : "8"
		9 : "9"
		10 : "10"
	]
	key_name(target_destination) : "Open Key Name" : : "The name of key entity that unlock this."
	key_icon(choices) : "Key Icon" : 4 : "An icon that will be displayed near this entity when required key found." =
	[
		0: "None"
		0: " "
		0: " -- door icons --"
		10: "Door (Openable)"
		58: "Door (Player wanted)"
		59: "Door (Transition)"
		60: "Hatch (Transition)"
		0: " "
		0: " -- buttons, switches --"
		12: "Switch (wall)"
		64: "Switch (power)"
		31: "Elevator button: Up"
		32: "Elevator button: Down"
		21: "Elevator button: 1"
		22: "Elevator button: 2"
		23: "Elevator button: 3"
		24: "Elevator button: 4"
		25: "Elevator button: 5"
		26: "Elevator button: 6"
		27: "Elevator button: 7"
		28: "Elevator button: B"
		29: "Elevator button: G"
		49: "Elevator button: PH"
		30: "Elevator button: Locked"
		0: " "
		0: " -- locks, keys --"
		3:  "Default lock"
		4:  "Key"
		5:  "Access card"
		53: "Electronic lock"
		54: "Electronic lock (deny)"
		0: " "
		0: " -- sign icons --"
		18: "Note"
		40: "Clipboard"
		41: "Printed Papers"
		36: "Book"
		50: "Bus stop Map"
		51: "Sewer Transition map"
		57: "Sewer Lines map"
		46: "Giovanni book"
		0: " "
		0: " -- usable icons --"
		2:  "Computer"
		6:  "Lootable crate"
		7:  "TV monitor"
		43: "Phonograph"
		48: "Web camera"
		38: "Reel recorder"
		42: "Projector light"
		34: "Valve wheel"
		61: "Pedestal"
		35: "Stove"
		37: "Sconce"
		16: "Tubes"
		0: " "
		0: " -- talking icons --"
		15: "Talk NPC (Male)"
		14: "Talk NPC (Female)"
		8:  "Phone"
		47: "Payphone"
		0: " "
		0: " -- place icons --"
		17: "Use Bomb"
		55: "Breakable"
		62: "Dance (Male)"
		63: "Dance (Female)"
		0: " "
		0: " -- other icons --"
		9:  "Physic Hand"
		19: "Stealth succeed"
		20: "Stealth chance"
		33: "Sword"
		45: "Slaughter"
		52: "Skull"
		73: "Pushable prop"
		66: "Malk Chaos"
		67: "Malk Key"
		68: "Malk Mind"
		69: "Malk Order"
		70: "Malk Sight"
		71: "Malk Time"
		72: "Malk Mind"
		0: " "
		0: " -- unused icons --"
		1:  "Carry body (unused)"
		13: "Switch 1 (13)"
		39: "Key (39)"
		44: "Phonograph (44)"
		56: "Bus stop Map (56)"
		11: "Empty (11)"
		65: "Empty (65)"
	]
	delete_key(choices) : "Delete Key on Open" : 1 : "Removes key from the player's inventory when unlocked." =
	[
		0 : "No"
		1 : "Yes"
	]
	
	// inputs
 	input Lock(void) : "Lock the entity."
	input Unlock(void) : "Open the entity's lock."
	input ResetDifficulty(void) : "Reset lock's difficulty to default."
	input physdamagescale(float) : "Sets the value that scales damage energy when this character is hit by a physics object. NOTE: 0 means this feature is disabled for backwards compatibility."
	input FadeOutKill(void): "Kills entity when faded out."
	input SetDebris(string): "Sets debris spawned after entity breaks."

	// outputs
	output OnSkillSuccess(void) : "Fired when the skill level matches the player's one."
	output OnSkillFail(void) : "Fired when the skill level not matches the player's one."
	output OnSkillBotch(void) : "Fired when the skill level botched [-?]."
	output OnSkillAttemptBegin(void) : "Fired when player attempts to unlock entity."
	output OnSkillAttemptCycle(void) : "Fired when player in process of entity unlocking..."
]




//====================================================================================================================
// item_container_lock [VTMB-specific]
//====================================================================================================================

@PointClass base(Targetname,Parentname,VOpenable) studio() = item_container_lock : 
	"[VTMB] Lockable Item Container."
[
	model(studio) : "Model" : "models/scenery/misc/padlock1/padlock1.mdl" : "Container model."
	locksnd(sound) : "Locked Sound" : "environmental/electronic/button_click_1.wav" : "Sound played when the player tries to use entity, and fails because it's locked."
	requires_key(choices) : "Requires Key to Open" : 1 : "If 'Yes', item cannot be unlocked (or broken with lockpicks) without appropriate key." =
	[
		0 : "No"
		1 : "Yes"
	]
	electronic_key(choices) : "Electronic Keycard" : 0 : "Set 'yes' if this entity have an electronic lock that requires appropriate keycard." =
	[
		0 : "No"
		1 : "Yes"
	]
	skilltype(choices) : "Skill Type" : 1 : "Defines player's skill type, e.g. hacking, lockpicking, e.t.c. [not tested]." =
	[
		0 : "(unknown)"
		1 : "Lockpicking"
		2 : "Hacking"
	]
	diceroll(choices) : "DiceRoll [-?]" : 1 : "[VTMB] Unknown yet..." =
	[
		0 : "0 [unknown yet]"
		1 : "1 [unknown yet]"
	]
]




//===================================================================================================================
// prop_doorknob [VTMB-specific]
//===================================================================================================================

@PointClass base(VOpenable) studioprop() = prop_doorknob : 
	"[VTMB] A point entity for use as a player-useable doorknob." 
[
	model(studio) : "Model" : "models/scenery/structural/doorknoba/doorknoba.mdl" : "Knob model."
	locksnd(sound) : "Locked Sound" : "environmental/electronic/button_click_1.wav" : "Sound played when the player tries to use entity, and fails because it's locked."
	skilltype(choices) : "Skill Type" : 1 : "Defines player's skill type, e.g. hacking, lockpicking, etc. [not tested]." =
	[
		0 : "(unknown)"
		1 : "Lockpicking"
		2 : "Hacking"
	]
	diceroll(choices) : "DiceRoll [-?]" : 1 : "[VTMB] Unknown yet..." =
	[
		0 : "0 [unknown yet]"
		1 : "1 [unknown yet]"
	]
	spawnflags(flags) =
	[
		0 : "Only Break on Trigger" : 0
		1 : "Break on Touch" : 0
		4 : "Break on Pressure" : 0
	]
]





//===================================================================================================================
// prop_doorknob_electronic [VTMB-specific]
//===================================================================================================================

@PointClass base(VOpenable) studioprop() = prop_doorknob_electronic : 
	"[VTMB] A point entity for use as a player-useable electronic doorknob." 
[
	model(studio) : "Model" : "models/scenery/misc/lock/lock.mdl" : "Knob model."
	locksnd(sound) : "Locked Sound" : "environmental/electronic/button_click_1.wav" : "Sound played when the player tries to use entity, and fails because it's locked."
]





//===================================================================================================================
// prop_padlock [VTMB-specific]
//===================================================================================================================

@PointClass base(VOpenable) studioprop() = prop_padlock : 
	"[VTMB] A point entity for use as a player-useable electronic doorknob." 
[
	model(studio) : "Model" : "models/scenery/misc/padlock1/padlock1.mdl" : "Lock model."
	skilltype(choices) : "Skill Type" : 1 : "Defines player's skill type, e.g. hacking, lockpicking, etc. [not tested]." =
	[
		0 : "(unknown)"
		1 : "Lockpicking"
		2 : "Hacking"
	]
	health(integer) : "Health (shoot open?)" : 0 : "Lock's health."
	diceroll(choices) : "DiceRoll [-?]" : 1 : "[VTMB] Unknown yet..." =
	[
		0 : "0 [unknown yet]"
		1 : "1 [unknown yet]"
	]
	spawnflags(flags) =
	[
		0 : "Only Break on Trigger" : 0
		1 : "Break on Touch" : 0
		4 : "Break on Pressure" : 0
	]
]







































//*******************************************************************************************************************
//*******************************************************************************************************************
//
// Basic Props
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// prop_physics_contested [VTMB-specific]
//===================================================================================================================

@PointClass base(BasePropPhysics) studioprop() sphere(fademindist) sphere(fademaxdist) = prop_physics_contested :
	"[VTMB] Contested physics prop. Also see 'prop_physics'."
[
	break_sound(sound) : "Break Sound" : "debris/metal3.wav" : "Sound played when the prop breaks."
	required_strength(integer) : "Required Strength" : 2 : "Player's strength that required to break it."
	
	// outputs
	output OnBreakConstraint(void) : "Fired when this prop constrains to break."
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// VTMB Specific Props
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// prop_clockhand [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname,Studiomodel) sphere(fademindist) sphere(fademaxdist) studioprop() = prop_clockhand :
	"[VTMB] A prop that simulates clock's hand features."
[
	model(studio) : "Model" : "models/scenery/misc/clock/hand.mdl" : "Clock-hand model."
	units(integer) : "Units" : 0 : "Num of units to use -? [not tested]."
	units_per_rot(integer) : "Units per Rotation" : 240 : "Num of units that clockhand pass at full rotation."
	rotational_axis(choices) : "Rotation Axis" : 2 : "Hand's rotation axis." =
	[
		0 : "X [?]"
		1 : "Y [?]"
		2 : "Z [?]"
	]
	timer_elapsed(integer) : "Timer Elapsed" : 1 : "[VTMB] Unknown yet..."
	timer_entity(target_destination) : "Timer Entity" : : "A link to the timer entity to control."
]




//===================================================================================================================
// prop_destructable [VTMB-specific]
//===================================================================================================================

@PointClass base(BasePropPhysics,Studiomodel,VBasePhysParams,Shadow,VBreakingConnects) studioprop() sphere(fademindist) sphere(fademaxdist) = prop_destructable :
	"[VTMB] Destructable physics prop. Also see 'prop_physics'."
[
	model(studio) : "Model" : "models/scenery/misc/BoxesBreakable/BoxesBreakable_D0.mdl" : "Destructable prop model."
	break_on_end(choices) : "Break on End" : 0 : "[VTMB] Unknown yet..." =
	[
		0 : "No"
		1 : "Yes"
	]
	damage_absorption(integer) : "Damage Absorption" : 0 : "[VTMB] Unknown yet..."
	dmg_filter_name(target_destination) : "Damage Filter" : : "The name of entity that defines damage filtering."
	only_dmg_on_input(choices) : "Damage only on Input" : 1 : "Make damage only if input specified." =
	[
		0 : "No"
		1 : "Yes"
	]
	dmg_model_1(studio) : "Damage Model 1" : "models/scenery/misc/BoxesBreakable/BoxesBreakable_D1.mdl" : "Spawn random of these models when entity damaged."
	dmg_model_2(studio) : "Damage Model 2" : "models/scenery/misc/BoxesBreakable/BoxesBreakable_D2.mdl" : "Spawn random of these models when entity damaged."
	dmg_model_3(studio) : "Damage Model 3" : "models/scenery/misc/BoxesBreakable/BoxesBreakable_D3.mdl" : "Spawn random of these models when entity damaged."
	physics_level(integer) : "Physics Level" : 9999 : "[VTMB] Unknown yet..."
	
	spawnflags(flags) =
	[
		8192 : "8192 (unknown yet)" : 0
	]
 
	// inputs
	input SetToDamageLevel(string) : "Sets to specified damage level [not tested]."
	input PlayAnimation(string) : "Plays selected animation."
	
	// outputs
	output OnBreakLevel1(void) : "Fired when break level reaches present value [not tested]."
	output OnBreakLevel2(void) : "Fired when break level reaches present value [not tested]."
	output OnBreakLevel3(void) : "Fired when break level reaches present value [not tested]."
	output OnBreakLevel4(void) : "Fired when break level reaches present value [not tested]."
	output OnBreakLevel5(void) : "Fired when break level reaches present value [not tested]."
	output OnBreakLevel6(void) : "Fired when break level reaches present value [not tested]."
	output OnBreakLevel7(void) : "Fired when break level reaches present value [not tested]."
	output OnBreakLevel8(void) : "Fired when break level reaches present value [not tested]."
	output OnBreakLastLevel(void) : "Fired when break level reaches last value [not tested]."
]




//===================================================================================================================
// prop_hacking [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname,Studiomodel,VEnableDisable,VBreakingConnects) studioprop() = prop_hacking :
	"[VTMB] A point entity that used as a computer with useful information and can be hacked."
[
	model(studio) : "Screen Model" : "models/scenery/furniture/computer/monitor_useable.mdl" : "World model of hackable object, as usual - monitors, laptops, panes etc.\n\nYou can also define a custom model by pasting it's path here."
	hack_file(choices) : "Computer Script" : "vdata/HackTerminals/haven_pc.txt" : "This is 'vdata/HackTerminals/*.txt' related script file that contains the certain computer's data and it's interactions.\n\nFor custom script file use a full moddir-related path (e.g. 'vdata/HackTerminals/MyComputer.txt')." =
	[
		"vdata/hackterminals/asianvamp_laptop.txt" : "asianvamp_laptop"
		"vdata/hackterminals/beachouse_computer.txt" : "beachouse_computer"
		"vdata/hackterminals/bertrams_computer.txt" : "bertrams_computer"
		"vdata/hackterminals/blood_bank_computer.txt" : "blood_bank_computer"
		"vdata/hackterminals/carson_computer.txt" : "carson_computer"
		"vdata/hackterminals/clinic_administration_computer.txt" : "clinic_administration_computer"
		"vdata/hackterminals/clinic_cis_computer.txt" : "clinic_cis_computer"
		"vdata/hackterminals/clinic_security_computer.txt" : "clinic_security_computer"
		"vdata/hackterminals/confessione3_computer.txt" : "confessione3_computer"
		"vdata/hackterminals/dane_computer.txt" : "dane_computer"
		"vdata/hackterminals/empire_lobby_computer.txt" : "empire_lobby_computer"
		"vdata/hackterminals/fu_server.txt" : "fu_server"
		"vdata/hackterminals/fu_terminals.txt" : "fu_terminals"
		"vdata/hackterminals/fu_terminals2.txt" : "fu_terminals2"
		"vdata/hackterminals/hack_charlimits.txt" : "hack_charlimits"
		"vdata/hackterminals/hack_example.txt" : "hack_example"
		"vdata/hackterminals/haven_pc.txt" : "haven_pc"
		"vdata/hackterminals/jeanette_laptop.txt" : "jeanette_laptop"
		"vdata/hackterminals/kilpatricks_computer.txt" : "kilpatricks_computer"
		"vdata/hackterminals/krime_computer.txt" : "krime_computer"
		"vdata/hackterminals/library_computer.txt" : "library_computer"
		"vdata/hackterminals/lucky_pc.txt" : "lucky_pc"
		"vdata/hackterminals/malcolm_computer.txt" : "malcolm_computer"
		"vdata/hackterminals/milligan_computer.txt" : "milligan_computer"
		"vdata/hackterminals/morgue_computer.txt" : "morgue_computer"
		"vdata/hackterminals/museum_computer.txt" : "museum_computer"
		"vdata/hackterminals/museum_computer_2.txt" : "museum_computer_2"
		"vdata/hackterminals/museum_computer_3.txt" : "museum_computer_3"
		"vdata/hackterminals/museum_computer_4.txt" : "museum_computer_4"
		"vdata/hackterminals/netcafe_computer.txt" : "netcafe_computer"
		"vdata/hackterminals/netcafe_computer_2.txt" : "netcafe_computer_2"
		"vdata/hackterminals/netcafe_computer_3.txt" : "netcafe_computer_3"
		"vdata/hackterminals/netcafe_computer_4.txt" : "netcafe_computer_4"
		"vdata/hackterminals/prop_keypad.txt" : "prop_keypad"
		"vdata/hackterminals/shrekhub1_terminal.txt" : "shrekhub1_terminal"
		"vdata/hackterminals/shrekhub2_terminal.txt" : "shrekhub2_terminal"
		"vdata/hackterminals/shrekhub3_metalop.txt" : "shrekhub3_metalop"
		"vdata/hackterminals/shrekhub3_metalsec.txt" : "shrekhub3_metalsec"
		"vdata/hackterminals/shrekhub4_terminal1.txt" : "shrekhub4_terminal1"
		"vdata/hackterminals/shrekhub4_terminal2.txt" : "shrekhub4_terminal2"
		"vdata/hackterminals/shrekhub4_terminal3.txt" : "shrekhub4_terminal3"
		"vdata/hackterminals/shrekhub4_terminal4.txt" : "shrekhub4_terminal4"
		"vdata/hackterminals/shrekhub4_terminal5.txt" : "shrekhub4_terminal5"
		"vdata/hackterminals/shrekhub4_terminal6.txt" : "shrekhub4_terminal6"
		"vdata/hackterminals/sinbin.txt" : "sinbin"
		"vdata/hackterminals/skyline_apt3.txt" : "skyline_apt3"
		"vdata/hackterminals/skyline_security.txt" : "skyline_security"
		"vdata/hackterminals/soc_int_hack.txt" : "soc_int_hack"
		"vdata/hackterminals/tawni_terminal.txt" : "tawni_terminal"
		"vdata/hackterminals/therese_pc.txt" : "therese_pc"
		"vdata/hackterminals/tutorial_computer.txt" : "tutorial_computer"
		"vdata/hackterminals/ventruetower2_terminal.txt" : "ventruetower2_terminal"
		"vdata/hackterminals/warrens2_computer.txt" : "warrens2_computer"
	]	
	difficulty(choices) : "Hack Difficulty" : 4 : "Computer's breaking difficulty. Only with sufficient skill level, the player will be able to hack it." =
	[
		0 : "<hack anyway>"
		1 : "1"
		2 : "2"
		3 : "3"
		4 : "4"
		5 : "5"
		6 : "6"
		7 : "7"
		8 : "8"
		9 : "9"
		10 : "10"
	]
	global_email(choices) : "Send Global Emails" : 0 : "Allow global-spreaded emails sent to this object [not tested]." =
	[
		0 : "No"
		1 : "Yes"
	]
	textcolumns(choices) : "Num of Text Columns" : 36 : "The number of text columns located on screen." =
	[
		36 : "36 (default)"
		42 : "42"
		56 : "56"
		72 : "72"
	]
	textrows(choices) : "Num of Text Rows" : 24 : "The number of text columns located on screen." =
	[
		24 : "24 (default)"
		32 : "32"
	]
	colorscheme(choices) : "Screen's Color Scheme" : 3 : "Defines color gamma of hackable prop's screen." =
	[
		0 : "ColorScheme 0"
		1 : "ColorScheme 1"
		2 : "ColorScheme 2"
		3 : "ColorScheme 3"
	]
	soundgroup(choices) : "Sound Group" : "tech_computer" : "The group of sounds relative to 'sound/usable/computers/<groupname>/*.wav' that specifies action sounds." = 
	[
		"tech_computer" : "Tech Computer"
		"old_computer" : "Old Computer"
		"fancy_computer" : "Fancy Computer"
		"keypad" : "Keypad"
	]
	skilltype(choices) : "Skill Type" : 2 : "Defines player's skill type, e.g. hacking, lockpicking, etc. [not tested]." =
	[
		1 : "Lockpicking"
		2 : "Hacking"
		3 : "Code-breaking"
	]
	spawnflags(flags) =
	[
		1 : "(unknown vtmb's)" : 0
	]
	ss_start(float) : "SS Start [-?]" : "5.0" : "[VTMB] Unknown yet..."
	ss_delay(float) : "SS Delay [-?]" : "1.5" : "[VTMB] Unknown yet..."
	diceroll(choices) : "DiceRoll [-?]" : 1 : "[VTMB] Unknown yet..." =
	[
		0 : "0 [unknown yet]"
		1 : "1 [unknown yet]"
	]
	
	// inputs
	input ResetDifficulty(void) : "Reset hackable's difficulty level to default."
	input physdamagescale(float) : "Sets the value that scales damage energy when this character is hit by a physics object. NOTE: 0 means this feature is disabled for backwards compatibility."
	input FadeOutKill(void): "Kills entity when faded out."
	input SetDebris(string): "Sets debris spawned after entity breaks."

	// outputs
	output OnTrigger0(void) : "Fired when trigger 0 activates."
	output OnTrigger1(void) : "Fired when trigger 1 activates."
	output OnTrigger2(void) : "Fired when trigger 2 activates."
	output OnTrigger3(void) : "Fired when trigger 3 activates."
	output OnTrigger4(void) : "Fired when trigger 4 activates."
	output OnTrigger5(void) : "Fired when trigger 5 activates."
	output OnTrigger6(void) : "Fired when trigger 6 activates."
	output OnTrigger7(void) : "Fired when trigger 7 activates."
	output OnSkillSuccess(void) : "Fired when player's skill matches and hacking procedure was succesful."
	output OnSkillFail(void) : "Fired when player's skill doesn't match and hacking procedure failed."
	output OnSkillBotch(void) : "Fired when player's skill botched hacking procedure [-?]."
	output OnSkillAttemptBegin(void) : "Fired when player attempts to hack this object."
	output OnSkillAttemptCycle(void) : "Fired when player cycles his attempts to hack this object [-?]."
]




//===================================================================================================================
// prop_haunted [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname,Studiomodel,VBreakingConnects) studioprop() = prop_haunted :
	"[VTMB] Haunted prop.\n\nA point entity that responds to the player movement and flings itself to damage him."
[
	model(studio) : "Model"	: : "Haunted prop's world model."
	damage(integer) : "Damage" : 10 : "Amount of health taken away when the prop attacks player."
	health(integer) : "Prop's Health" : 0 : "Haunted prop health. '0' - don't breaks."

	// shake values
	max_shake(integer) : "Max Shake Space (units)" : 2 : "Maximum distance that prop will shake when player is near it."
	min_shake(integer) : "Min Shake Space (units)" : 2 : "Minimum distance that prop will shake when player is near it."
	shake_sound(sound) : "Shake Sound" : "Area/Santa_Monica/Ocean_House/Ethereal_Shake.wav" : "Sound played when the prop shakes."
	shake_particle(choices) : "Shake Particle" : "particles/Ethereal_Shake_Emitter.txt" : "The particle script that spawns the shake effect particle." =
	[
		"particles/Ethereal_Shake_Emitter.txt" : "particles/Ethereal_Shake_Emitter.txt"
	]
	stop_shake_fadeout(float) : "Stop Shake Fade-out (secs)" : "1.2" : "The time required for full stopping of shaking."

	// fling values
	fling_dest(origin) : "Fling Destination (Y Z X)" : "0 0 0" : "The point at which the prop will be flinged when player near it."
	fling_particle(choices) : "Fling Particle" : "particles/Ethereal_Fling_Emitter.txt" : "The particle script that spawns the fling effect particle." =
	[
		"particles/Ethereal_Fling_Emitter.txt" : "particles/Ethereal_Fling_Emitter.txt"
		"particles/Rivet_Pop_Emitter.txt" : "particles/Rivet_Pop_Emitter.txt"
	]
	fling_sound(sound) : "Fling Sound" : "Area/Santa_Monica/Ocean_House/Ethereal_Fling.wav" : "Sound played when the prop flings."
	velocity(integer) : "Fling Velocity (units/s)" : 1000 : "This is the speed which the object will fling to."
	target_player(choices) : "Fling to Player" : 0 : "If enabled, the player will be the fling target for this prop." =
	[
		0 : "No"
		1 : "Yes"
	]
	spin_pitch_scale(float) : "Spin Pitch Scale" : "1.0"
	spin_roll_scale(float) : "Spin Roll Scale" : "1.0"
	spin_yaw_scale(float) : "Spin Yaw Scale" : "1.0"

	break_sound(sound) : "Break Sound" : "Surfaces/Ceramic/Break.wav" : "Sound played when this prop breaks after flinging."

	spawnflags(flags) = 
	[
		0 : "(unknown vtmb's)" : 0
	]
	
	// inputs
	input FlingNow(void) : "Fling right now."
	input StopShaking(void) : "Stop shaking."
	input StartShaking(void) : "Start shaking."
	input ShakeAndFling(void) : "Start shake and fling."
	input physdamagescale(float) : "Sets the value that scales damage energy when this character is hit by a physics object. NOTE: 0 means this feature is disabled for backwards compatibility."
	input FadeOutKill(void): "Kills entity when faded out."
	input SetDebris(string): "Sets debris spawned after entity breaks."
	
	// outputs
	output OnFling(void) : "Fired when object flinging."
	output OnBeginShake(void) : "Fired when object begins to shake."
	output OnEndShake(void) : "Fired when object ends to shake."
]




//===================================================================================================================
// prop_keypad [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname,Studiomodel,VEnableDisable,VBreakingConnects) studioprop() = prop_keypad :
	"[VTMB] Simply put - code lock."
[
	model(studio) : "Keypad Model" : "models/scenery/furniture/AlarmKeypad/AlarmKeypad.mdl" : "Keypad's world model."
	colorscheme(choices) : "Screen's Color Scheme" : 3 : "Defines color gamma of hackable prop's screen." =
	[
		0 : "ColorScheme 0"
		1 : "ColorScheme 1"
		2 : "ColorScheme 2"
		3 : "ColorScheme 3"
	]
	diceroll(choices) : "DiceRoll [-?]" : 1 : "[VTMB] Unknown yet..." =
	[
		0 : "0 [unknown yet]"
		1 : "1 [unknown yet]"
	]
	difficulty(choices) : "Hack Difficulty" : 5 : "Code lock's breaking difficulty. Only with sufficient skill level, the player will be able to break it." =
	[
		0 : "<hack anyway>"
		1 : "1"
		2 : "2"
		3 : "3"
		4 : "4"
		5 : "5"
		6 : "6"
		7 : "7"
		8 : "8"
		9 : "9"
		10 : "10"
	]
	passcode(string) : "Pass Code" : "1234" : "Pass code that unlock linked door." 
	text_id(string) : "Text ID link" : "skyline_lootapt" : ""
	textcolumns(choices) : "Num of Text Columns" : 20 : "The number of text columns located on screen." =
	[
		16 : "16"
		20 : "20 (default)"
		24 : "24"
	]
	textrows(choices) : "Num of Text Rows" : 6 : "The number of text columns located on screen." =
	[
		4 : "4"
		6 : "6 (default)"
		8 : "8"
	]
	skilltype(choices) : "Skill Type" : 3 : "Defines player's skill type, e.g. hacking, lockpicking, etc. [not tested]." =
	[
		1 : "Lockpicking"
		2 : "Hacking"
		3 : "Code-breaking"
	]
	soundgroup(choices) : "Sound Group" : "keypad" : "The group of sounds relative to 'sound/usable/computers/<groupname>/*.wav' that specifies action sounds." = 
	[
		"keypad" : "Keypad"
		"elevator_button" : "Elevator Button"
		"old_computer" : "Old Computer"
		"tech_computer" : "Tech Computer"
	]
	spawnflags(flags) = 
	[
		0 : "(unknown vtmb's)" : 0
	]

	// inputs
	input ResetDifficulty(void) : "Reset hackable's difficulty level to default."
	input physdamagescale(float) : "Sets the value that scales damage energy when this character is hit by a physics object. NOTE: 0 means this feature is disabled for backwards compatibility."
	input FadeOutKill(void): "Kills entity when faded out."
	input SetDebris(string): "Sets debris spawned after entity breaks."

	// outputs
	output OnCorrectPassword(void) : "Fired when entered the correct pass code."
	output OnIncorrectPassword(void) : "Fired when entered pass code is incorrect."
	output OnSkillSuccess(void) : "Fired when player's skill matches and breaking procedure was succesful."
	output OnSkillFail(void) : "Fired when player's skill doesn't match and breaking procedure failed."
	output OnSkillBotch(void) : "Fired when player's skill botched breaking procedure [-?]."
	output OnSkillAttemptBegin(void) : "Fired when player attempts to break this lock."
	output OnSkillAttemptCycle(void) : "Fired when player cycles his attempts to break this lock [-?]."
]




//===================================================================================================================
// prop_largehull_ignore [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname,Studiomodel,VBreakingConnects) studioprop() = prop_largehull_ignore :
	"[VTMB] Prop that ignores large hull [-? not known properly yet].\n\nFound at the 'observatory' and 'pillar2'..."
[
	solid(choices) : "Collisions" : 0 =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
	]
]




//===================================================================================================================
// prop_mover [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname,Studiomodel) studioprop() = prop_mover :
	"[VTMB] Mover [-? not known properly yet].\n\nFound at the 'beachhouse'..."
[
	move_dest(angle) : "Move Destination (Y Z X)" : "0 0 0" : "This entity's move direction [not tested]."
	move_speed(integer) : "Move Speed (Units/Sec)" : 45 : "Speed of entity's moving."
	rot_axis(choices) : "Rotation Axis (Y/Z/X)" : 1 : "Defines axis if this prop rotates [not tested]." = 
	[
		0 : "Y"
		1 : "Z"
		2 : "X"
	]
	rot_dist(integer) : "Rotation Angle" : 90 : "Max allowed rotation angle [not tested]."
	rot_speed(integer) : "Rotation Speed" : 45 : "Speed of rotation moving [not tested]."
	solid(choices) : "Collisions" : 6 =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
	]
	use_pref(choices) : "Use Pref. [-?]" : 0 : "[VTMB] Unknown yet..." = 
	[
		0 : "0 [unknown]"
		1 : "1 [unknown]"
	]
	disablereceiveshadows(choices) : "Disable Receiving Shadows" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	solid(choices) : "Collisions" : 0 =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
	]
]




//===================================================================================================================
// prop_radio [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname,Studiomodel) studioprop() = prop_radio :
	"[VTMB] The storyline-dependent radio.\n\nIf you want the custom tracks to be playable, put it as 'sound/radio/*.mp3' files and use 'vdata/system/radio_data.txt' script to define tracks and story-line dependencies."
[
	model(studio) : "Model" : "models/scenery/misc/GehtoBlaster1/GehtoBlaster1.mdl" : "Stereo's world model."
	volume(float) : "Volume (1.0 = loudest)" : "0.5" : "The volume of playing tracks."
	radius(integer) : "Hearing Radius" : 800 : "The radio hearing radius, in units."
	
	spawnflags(flags) = 
	[
		1 : "Start turned off" : 0
	]
	
	//inputs
	input Activate(void) : "Activate radio."
	input Deactivate(void) : "Dectivate radio."
]




//===================================================================================================================
// prop_sign [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname,Studiomodel,VUseIcons) studioprop() = prop_sign :
	"[VTMB] An entity that dumps the misc signs (like hints and tables) on screen overlay."
[
	model(studio) : "Sign Model" : "models/items/Newspaper/Ground/Newspaper.mdl" : "Sign's world model."
	definition_file(choices) : "Sign Definition File" : "vdata/Signs/Newspaper_ALL.txt" : "Script that defines all current sign properties. This is 'vdata/signs/*.txt' related file. You can also specify a custom scripts." =
	[
		"vdata/Signs/childs_drawing.txt" : "Childs_Drawing"
		"vdata/Signs/Chinatown_A.txt" : "Chinatown_A"
		"vdata/Signs/Chinatown_B.txt" : "Chinatown_B"
		"vdata/Signs/Chinatown_C.txt" : "Chinatown_C"
		"vdata/Signs/Chinatown_D.txt" : "Chinatown_D"
		"vdata/Signs/chinatownsewer1.txt" : "ChinatownSewer1"
		"vdata/Signs/clinic_phil_note.txt" : "Clinic_Phil_Note"
		"vdata/Signs/downtownsewer1.txt" : "DowntownSewer1"
		"vdata/Signs/downtownsewer2.txt" : "DowntownSewer2"
		"vdata/Signs/downtownsewer3.txt" : "DowntownSewer3"
		"vdata/Signs/downtownsewer4.txt" : "DowntownSewer4"
		"vdata/Signs/Flynns_Password.txt" : "Flynns_Password"
		"vdata/Signs/Hollywood_A.txt" : "Hollywood_A"
		"vdata/Signs/Hollywood_B.txt" : "Hollywood_B"
		"vdata/Signs/Hollywood_C.txt" : "Hollywood_C"
		"vdata/Signs/hollywoodsewer1.txt" : "HollywoodSewer1"
		"vdata/Signs/hollywoodsewer2.txt" : "HollywoodSewer2"
		"vdata/Signs/LA_A.txt" : "LA_A"
		"vdata/Signs/LA_B.txt" : "LA_B"
		"vdata/Signs/LA_C.txt" : "LA_C"
		"vdata/Signs/LA_D.txt" : "LA_D"
		"vdata/Signs/LA_E.txt" : "LA_E"
		"vdata/Signs/LA_F.txt" : "LA_F"
		"vdata/Signs/malcolm_password_note.txt" : "Malcolm_Password_Note"
		"vdata/Signs/MalkMansion_Clue_1.txt" : "MalkMansion_Clue_1"
		"vdata/Signs/MalkMansion_Clue_2.txt" : "MalkMansion_Clue_2"
		"vdata/Signs/Mercurios_Note.txt" : "Mercurios_Note"
		"vdata/Signs/museum_note.txt" : "Museum_Note"
		"vdata/Signs/museum_note_2.txt" : "Museum_Note_2"
		"vdata/Signs/museum_note_3.txt" : "Museum_Note_3"
		"vdata/Signs/Newspaper_ALL.txt" : "Newspaper_ALL"
		"vdata/Signs/Newspaper_Epidemic.txt" : "Newspaper_Epidemic"
		"vdata/Signs/Newspaper_OH_1.txt" : "Newspaper_OH_1"
		"vdata/Signs/Newspaper_OH_3.txt" : "Newspaper_OH_3"
		"vdata/Signs/Newspaper_OH_4.txt" : "Newspaper_OH_4"
		"vdata/Signs/Newspaper_OH_5.txt" : "Newspaper_OH_5"
		"vdata/Signs/Newspaper_OH_6.txt" : "Newspaper_OH_6"
		"vdata/Signs/Newspaper_OH_7.txt" : "Newspaper_OH_7"
		"vdata/Signs/Newspaper_Serial_Killer.txt" : "Newspaper_Serial_Killer"
		"vdata/Signs/Newspaper_Tawni.txt" : "Newspaper_Tawni"
		"vdata/Signs/Regents_Invitation.txt" : "Regents_Invitation"
		"vdata/Signs/SantaMonica_A.txt" : "SantaMonica_A"
		"vdata/Signs/SantaMonica_B.txt" : "SantaMonica_B"
		"vdata/Signs/SantaMonica_C.txt" : "SantaMonica_C"
		"vdata/Signs/santamonicasewer1.txt" : "SantaMonicaSewer1"
		"vdata/Signs/santamonicasewer2.txt" : "SantaMonicaSewer2"
		"vdata/Signs/sarcophagus.txt" : "Sarcophagus"
		"vdata/Signs/Shub4_Name1.txt" : "Shub4_Name1"
		"vdata/Signs/Shub4_Name2.txt" : "Shub4_Name2"
		"vdata/Signs/Shub4_Name3.txt" : "Shub4_Name3"
		"vdata/Signs/Shub4_Name4.txt" : "Shub4_Name4"
		"vdata/Signs/Shub4_Name5.txt" : "Shub4_Name5"
		"vdata/Signs/Sinbin_Note.txt" : "Sinbin_Note"
		"vdata/Signs/tutorial_note.txt" : "Tutorial_Note"
	]
	pause(choices) : "Pause When Reading" : 0 : "Pauses game process when sign shows on-screen." =
	[
		0 : "No"
		1 : "Yes"
	]
	spawnflags(flags) =
	[
		0: "Initial State" : 0
	]
	
	// inputs
	input ChangeFile(string) : "Change sign's definition file by specified below."

	// outputs
	output OnReadBegin(void) : "Fired when player begins to read this sign."
	output OnReadEnd(void) : "Fired when player ends reading of this sign."
	output OnPressed(void) : "[hardly ever] Fired when player press this sign (e.g. nosferatu's sewer map)."
]




//===================================================================================================================
// prop_slashable [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname,Studiomodel) studioprop() = prop_slashable :
	"[VTMB] A prop that may be slashed (e.g. Art gallery pictures)."
[
	model(studio) : "Model" : "models/scenery/furniture/Wall_Art/frame.mdl" : "Slashable prop's world model."
	damaged_skin(integer) : "Damaged Skin" : 1 : "When prop damaged, it's model will turn into skin specified here."
	health(integer) : "Health" : 1 : "Number of points of damage to take before slashing."
	output OnSlashed(void) : "Fired when this prop damaged."
]




//===================================================================================================================
// prop_switch [VTMB-specific]
//===================================================================================================================

@PointClass base(Targetname,Parentname,Studiomodel,VUseIcons,VLockedIcons) studioprop() = prop_switch :
	"[VTMB] A prop that may be used as any action's state switch (e.g. light switching)."
[
	model(studio) : "Model" : "models/scenery/structural/switches/switch.mdl" : "Switch's world model."
	reset_state(choices) : "Initial State" : 0 : "State that entity will be use on spawn." = 
	[
		0 : "Off"
		1 : "On"
	]
	actsnd(sound) : "Activate Sound" : "environmental/electronic/button_click_1.wav" : "Sound played when the switch activates."
	deactsnd(sound) : "Dectivate Sound" : "environmental/electronic/button_click_1.wav" : "Sound played when the switch deactivates."
	locksnd(sound) : "Locked Sound" : "environmental/electronic/deny_beep.wav" : "Sound played when the switch activates but locked."
	soundgroup(choices) : "Sound Group" : "medium_metal_switch" : "The group of sounds relative to 'sound/usable/switches/<groupname>/*.wav' that specifies action sounds." = 
	[
		"elevator_button" : "Elevator Button"
		"large_metal_lever" : "Large Metal Lever"
		"manhole_cover" : "Manhole Cover"
		"medium_metal_switch" : "Medium Metal Switch"
		"small_metal_switch" : "Small Metal Switch"
		"wall_light_switch" : "Wall Light Switch"
		"radio" : "Radio"
		"tv" : "TV"
	]
	linkedswitch(target_destination) : "Linked Switch" : : "(Optional) The name of another switch entity that will be controlled by this one [-? not tested]."
	health(integer) : "Switch Health [-?]" : 0 : "Switch strength [-?]. 0 means don't break."
	solid(choices) : "Collisions" : 6 =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
	]
	collideable_gibs(choices) : "Collideable Gibs" : 0 : "[VTMB] Unknown yet..." = 
	[
		0 : "Type 0 (unknown)"
		1 : "Type 1 (unknown)"
		2 : "Type 2 (unknown)"
	]
	spawnflags(Flags) =
	[
		336 : "336 (unknown yet)" : 0
		8192 : "8192 (unknown yet)" : 0
		16384 : "16384 (unknown yet)" : 0
		24576 : "24576 (unknown yet)" : 0
		32768 : "32768 (unknown yet)" : 0
	]

	// inputs
 	input Toggle(void) : "Toggles the swich's state."
	input Lock(void) : "Lock the swich, preventing it from functioning."
	input Unlock(void) : "Unlock the swich, allowing it to function."
	input Activate(void) : "Activates the swich [not tested]."
	input Deactivate(void) :  "Deactivates the swich [not tested]."

	// outputs
	output OnActivate(void) : "Fired when activated [not tested]."
	output OnDeactivate(void) : "Fired when deactivated [not tested]."
	output OnUse(void) : "Fires when +used by the player."
	output OnLockedUse(void) : "Fired when used by player, but it's locked."
]













































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// NPCs
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// npc_maker_fleshpile [VTMB-specific]
//===================================================================================================================

@PointClass base(npc_maker) iconsprite("editor/npc_maker.vmt") = npc_maker_fleshpile : 
	"[VTMB] NPC Maker for flesh plies [not tested].\n\n"+
	"[VTMB] NOTES: See also 'npc_maker'."
[
	NPCType(npcclass) : "npc_VTzimisceRunner" : "Class name of spawned NPC"
	NPCTargetname(string) : "tzim_creation3" : "Childrens' Name"
	NPCSquadname(string) : "runners" : "Childrens' Squad Name"

	model(studio) : "Model" : "models/character/monster/undead/male/undead_Male.mdl"
	stattemplate(string) : "NPC Stat Template" : "TzimisceCreation3" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"\tD_LI [0-10] --> Likes Player (Will Defend)\n"+
		"\tD_NU [0-10] --> Neutral (Default)\n"+
		"\tD_HT [0-10] --> Hates Player (Will Attack)" =
	[
		"D_LI 0" : "D_LI 0"
		"D_NU 0" : "D_NU 0"
		"D_HT 0" : "D_HT 0"
		"D_HT 5" : "D_HT 5"
	]
]






//===================================================================================================================
// npc_maker_zombie [VTMB-specific]
//===================================================================================================================

@PointClass base(npc_maker) iconsprite("editor/npc_maker.vmt") = npc_maker_zombie : 
	"[VTMB] NPC Maker for NPCs with zombie AI type.\n\n"+
	"[VTMB] NOTES: See also 'npc_maker'."
[
	NPCType(npcclass) : "npc_VZombie" : "Class name of spawned NPC"
	NPCTargetname(string) : "zombie" : "Childrens' Name"
	NPCSquadname(string) : "spawned_zombies" : "Childrens' Squad Name"

	model(studio) : "Model" : "models/character/monster/undead/male/undead_Male.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_fists" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	cantdropweapons(choices) : "NPC Can't Drop Weapons" : 1 : "If set, all NPC's weapons won't be available when it dead." =
	[
		0 : "No"
		1 : "Yes"
	]
	stattemplate(string) : "NPC Stat Template" : "Zombie" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"\tD_LI [0-10] --> Likes Player (Will Defend)\n"+
		"\tD_NU [0-10] --> Neutral (Default)\n"+
		"\tD_HT [0-10] --> Hates Player (Will Attack)" =
	[
		"D_LI 0" : "D_LI 0"
		"D_NU 0" : "D_NU 0"
		"D_HT 0" : "D_HT 0"
		"D_HT 5" : "D_HT 5"
	]
	Flag_ZombieAIType(choices) : "Flag: Zombie AI Type" : 1 : "Applies the selected property." = 
	[ 
		0 : "Don not use" 
		1 : "Type 1 (unknown yet)" 
		2 : "Type 2 (unknown yet)" 
		3 : "Type 3 (unknown yet)" 
		4 : "Type 4 (unknown yet)" 
		5 : "Type 5 (unknown yet)" 
		6 : "Type 6 (unknown yet)" 
		7 : "Type 7 (unknown yet)" 
		8 : "Type 8 (unknown yet)" 
	]
	Flag_ViewCone(choices) : "Flag: View Cone" : 1 : "Applies the selected property." = [ 0 : "False" 1 : "True" ]
	allow_alert_lookaround(choices) : "Allow Alert on Lookaround" : 0 : "Defines, can NPC be alert if sees player at looks around [not tested]." =
	[
		0 : "No"
		1 : "Yes"
	]
	allow_kick_hint_use(choices) : "Allow Kick Hint Usage [-?]" : 0 : "[VTMB] Unknown yet..." =
	[
		0 : "No"
		1 : "Yes"
	]
	floatfreq(integer) : "Float Frequency [-?]" : 5 : "[VTMB] Unknown yet..."
	team_name(string) : "Team Name" : "zombies" : "[VTMB] Unknown yet..."
	
	// zombie-specific
	remove_distance(integer) : "Remove Distance" : 1024 : "[VTMB] Unknown yet..."
	should_ragdoll(choices) : "Should be Ragdolls [-?]" : 1 : "[VTMB] Unknown yet..." = [ 0 : "No" 1 : "Yes" ]
]






//===================================================================================================================
// npc_BaseVampAI [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC) studio() = npc_BaseVampAI : 
	"[VTMB] Base Vampire AI (Unrecognized; meet in Junk Yard -?)."
[
	model(studio) : "Model" : "models/character/npc/common/doppleganger/doppleganger_male.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_sw_m64" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	alternateequipment(choices) : "Alternate Equipment" : "item_w_katana" : "This is the weapon that NPC will use as alternative." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	dialogname(choices) : "Dialog Name" : "dlg/Santa Monica/Nightwatchman.dlg" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"" : "None"
		"dlg/Santa Monica/Nightwatchman.dlg" : "dlg/Santa Monica/Nightwatchman.dlg"
	]
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	hearing(float) : "Hearing Volume" : "1" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
	vision(float) : "Vision Radius" : "2048" : "NPC's vision radius (units). Set '-1' as default [not tested]."

	// npc-related
	usescript(string) : "Use Python Script" : "NightwatchmenDlg()" : "This is a Python script that defines additional dialog params [not tested]."

	// ai-related
	base_animal_ken(choices) : "Use Animal Ken" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_appearance(choices) : "Use Appearance" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_athletics(choices) : "Use Athletics" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_brawl(choices) : "Use Brawl" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_charisma(choices) : "Use Charisma" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_computers(choices) : "Use Computers" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_dexterity(choices) : "Use Dexterity" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_dodge(choices) : "Use Dodge" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_finance(choices) : "Use Finance" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_firearms(choices) : "Use Firearms" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_intelligence(choices) : "Use Intelligence" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_investigation(choices) : "Use Investigation" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_leadership(choices) : "Use Leadership" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_linguistics(choices) : "Use Linguistics" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_manipulation(choices) : "Use Manipulation" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_melee(choices) : "Use Melee" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_occult(choices) : "Use Occult" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_perception(choices) : "Use Perception" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_security(choices) : "Use Security" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_stamina(choices) : "Use Stamina" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_stealth(choices) : "Use Stealth" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_strength(choices) : "Use Strength" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_subterfuge(choices) : "Use Subterfuge" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_wits(choices) : "Use Wits" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
]
	
	

	
	

//===================================================================================================================
// npc_payphone [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_payphone : 
	"[VTMB] Payphone (fake NPC) entity that can engage in dialogue with player."
[
	model(studio) : "Model" : "models/scenery/street/payphone/payphonereceiver.mdl"
	dialogname(choices) : "Dialog Name" : "dlg/Santa Monica/Stan_Gimble.dlg" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"dlg/Santa Monica/Stan_Gimble.dlg" : "dlg/Santa Monica/Stan_Gimble.dlg"
		"dlg/Santa Monica/SMphone.dlg" : "dlg/Santa Monica/SMphone.dlg"
		"dlg/Chinatown/Garyphone.dlg" : "dlg/Chinatown/Garyphone.dlg"
		"dlg/Hollywood/Anoncaller.dlg" : "dlg/Hollywood/Anoncaller.dlg"
	]
]





//===================================================================================================================
// npc_VAndreiBlood [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC) studio() = npc_VAndreiBlood : 
	"[VTMB] Bloody Andrei transformation (meet in 609 Kings Way)."
[
	model(studio) : "Model" : "models/character/npc/unique/Hollywood/Andrei/Andrei.mdl"
	dialogname(choices) : "Dialog Name" : "dlg/Hollywood/Andrei.dlg" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"" : "None"
		"dlg/Hollywood/Andrei.dlg" : "dlg/Hollywood/Andrei.dlg"
	]
	stattemplate(string) : "NPC Stat Template" : "AndreiBlood" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1 (default)"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1 (default)"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1 (default)"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	vision(float) : "Vision Radius" : "2400" : "NPC's vision radius (units). Set '-1' as default [not tested]."

	// andrei-specific
	TeleportTime(integer) : "Teleport Time (sec)" : 35 : "A time interval between which Andrei makes teleportations."
	MaxLiveHeadrunners(integer) : "Max Headrunners Count" : 4 : "How many live headrunners (tzimisce creations) may be spawned around its boss."
	SummonTime(integer) : "Summon Time [-?]" : 35 : "[VTMB] Unknown yet..."
	SummonPercentage(integer) : "Summon Percentage [-?]" : 80 : "[VTMB] Unknown yet..."
	AndreiPauseTime(integer) : "Andrei Pause Time [-?]" : 85 : "[VTMB] Unknown yet..."
	AndreiPauseTime(integer) : "Andrei Pause Time [-?]" : 85 : "[VTMB] Unknown yet..."
	KillToPause(integer) : "Kill tp Pause [-?]" : 6 : "[VTMB] Unknown yet..."
]





//===================================================================================================================
// npc_VAsianVampire [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC) studio() = npc_VAsianVampire : 
	"[VTMB] Asian Vampire (meet in Santa Monica's Foxy Boxes)."
[
	model(studio) : "Model" : "models/character/npc/unique/Santa_Monica/AsianVampire/AsianVampire.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_avamp_blade" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	alternateequipment(choices) : "Alternate Equipment" : "item_w_crossbow" : "This is the weapon that NPC will use as alternative." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	cantdropweapons(choices) : "NPC Can't Drop Weapons" : 1 : "If set, all NPC's weapons won't be available when it dead." =
	[
		0 : "No"
		1 : "Yes"
	]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =
	[
		0 : "No"
		1 : "Yes"
	]
	stattemplate(string) : "NPC Stat Template" : "AsianVampire" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
]






//===================================================================================================================
// npc_VBach [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC) studio() = npc_VBach : 
	"[VTMB] Grunfield Bach, the Society of Leopold leader."
[
	model(studio) : "Model" : "models/character/npc/unique/Malkavian_Mansion/Bach/Bach.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_rem_m_700_bach" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	alternateequipment(choices) : "Alternate Equipment" : "item_w_katana" : "This is the weapon that NPC will use as alternative." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	cantdropweapons(choices) : "NPC Can't Drop Weapons" : 1 : "If set, all NPC's weapons won't be available when it dead." =
	[
		0 : "No"
		1 : "Yes"
	]
	demo_sequence(choices) : "Demo Animation" : "Idle01" : "Default animation sequence for the model to be playing after spawning." = 
	[
		"None" : "None"
		"idle01" : "Idle01"
	]
	dialogname(choices) : "Dialog Name" : "dlg/Main Characters/Bach.dlg" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"" : "None"
		"dlg/Main Characters/Bach.dlg" : "dlg/Main Characters/Bach.dlg"
	]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =
	[
		0 : "No"
		1 : "Yes"
	]
	stattemplate(string) : "NPC Stat Template" : "Bach" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	npc_perception(integer) : "NPC's Perception Level" : 10 : "Defines NPC's Perception ability level [1...10]."
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1 (default)"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1 (default)"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	hearing(float) : "Hearing Volume" : "3.0" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
]






//===================================================================================================================
// npc_VBrujah [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VBrujah : 
	"[VTMB] Generic Brujah NPC."
[
	model(studio) : "Model" : "models/character/npc/unique/Santa_Monica/Eugene/Eugene.mdl"
	cantdropweapons(choices) : "NPC Can't Drop Weapons" : 1 : "If set, all NPC's weapons won't be available when it dead." =
	[
		0 : "No"
		1 : "Yes"
	]
	invincible(choices) : "NPC is Invincible" : 1 : "If set, the player can't kill this NPC." =
	[
		0 : "No"
		1 : "Yes"
	]
	investigate_mode(choices): "Investigate Mode" : 0 : "[not tested] Measures your character's ability to notice minute or hidden details." =
	[
		0 : "Mode 0 (default)"
		1 : "Mode 1"
		2 : "Mode 2"
		3 : "Mode 3"
		4 : "Mode 4"
		5 : "Mode 5"
	]
	investigate_mode_combat(choices): "Combat Investigate Mode" : 0 : "[VTMB] Unknown yet..." =
	[
		0 : "Mode 0 (default)"
		1 : "Mode 1"
		2 : "Mode 2"
		3 : "Mode 3"
		4 : "Mode 4"
		5 : "Mode 5"
	]
]






//===================================================================================================================
// npc_VCamera [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VCamera : 
	"[VTMB] Tracking Camera entity (fake NPC)."
[
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"\tD_LI [0-10] --> Likes Player (Will Defend)\n"+
		"\tD_NU [0-10] --> Neutral (Default)\n"+
		"\tD_HT [0-10] --> Hates Player (Will Attack)" =
	[
		"D_LI 0" : "D_LI 0"
		"D_NU 0" : "D_NU 0"
		"D_HT 0" : "D_HT 0"
		"D_HT 5" : "D_HT 5"
	]
]








//===================================================================================================================
// npc_VCameraSecurity [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VCameraSecurity : 
	"[VTMB] Security Camera entity (fake NPC)."
[
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"\tD_LI [0-10] --> Likes Player (Will Defend)\n"+
		"\tD_NU [0-10] --> Neutral (Default)\n"+
		"\tD_HT [0-10] --> Hates Player (Will Attack)" =
	[
		"D_LI 0" : "D_LI 0"
		"D_NU 0" : "D_NU 0"
		"D_HT 0" : "D_HT 0"
		"D_HT 5" : "D_HT 5"
	]
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1 (default)"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	hearing(float) : "Hearing Volume" : "0" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
	vision(float) : "Vision Radius" : "750" : "NPC's vision radius (units). Set '-1' as default [not tested]."

	// camera-specific
	linked_camera(target_destination) : "Linked Camera" : : "Camera that inherits properties of this one [not tested]."
]






//===================================================================================================================
// npc_VChangBrosBlade [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC) studio() = npc_VChangBrosBlade : 
	"[VTMB] Blade-armed Chang brother (meet in Giovanni's basement)."
[
	model(studio) : "Model" : "models/character/npc/unique/Giovanni_Mansion/Chang_Brothers/chang1.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_chang_blade" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	cantdropweapons(choices) : "NPC Can't Drop Weapons" : 1 : "If set, all NPC's weapons won't be available when it dead." =
	[
		0 : "No"
		1 : "Yes"
	]
	default_camera(choices) : "Default Camera Shot" : "ChangDialog" : "Default camera-shot definition applied when player interacts with this NPC. Related to 'vdata/CameraShots/*.txt' path." =
	[
		"DialogDefault" : "Dialog Default"
		"ChangDialog" : "Chang Dialog"
		"vdata/CameraShots/dialogdefaultfastmove.txt" : "DialogDefaultFastMove"
		"vdata/CameraShots/dialogdefaultwoman.txt" : "DialogDefaultWoman"
		"vdata/CameraShots/dialoglowcenter.txt" : "DialogLowCenter"
		"vdata/CameraShots/dialoglowleft.txt" : "DialogLowLeft"
		"vdata/CameraShots/dialoglowright.txt" : "DialogLowRight"
		"vdata/CameraShots/dialogmediumshot.txt" : "DialogMediumShot"
		"vdata/CameraShots/dialogoverplayerleftshoulder.txt" : "DialogOverPlayerLeftShoulder"
		"vdata/CameraShots/dynamic1.txt" : "Dynamic1"
		"vdata/CameraShots/dynamic2.txt" : "Dynamic2"
		"vdata/CameraShots/dynamic3.txt" : "Dynamic3"
		"vdata/CameraShots/dynamic4.txt" : "Dynamic4"
		"vdata/CameraShots/dynamic5.txt" : "Dynamic5"
		"vdata/CameraShots/dynamic6.txt" : "Dynamic6"
		"vdata/CameraShots/dynamic7.txt" : "Dynamic7"
		"vdata/CameraShots/dynamic8.txt" : "Dynamic8"
		"vdata/CameraShots/dynamic9.txt" : "Dynamic9"
		"vdata/CameraShots/longapproachcloseup.txt" : "LongApproachCloseUp"
		"vdata/CameraShots/lookattarget.txt" : "LookAtTarget"
		"vdata/CameraShots/lookattarget_b.txt" : "LookAtTarget_B"
		"vdata/CameraShots/lookattarget_snap.txt" : "LookAtTarget_Snap"
		"vdata/CameraShots/lookattargethead_snap.txt" : "LookAtTargetHead_Snap"
		"vdata/CameraShots/center.txt" : "Center"
		"vdata/CameraShots/centerfullview.txt" : "CenterFullView"
		"vdata/CameraShots/lowcenter.txt" : "LowCenter"
		"vdata/CameraShots/mediumshot.txt" : "MediumShot"
		"vdata/CameraShots/npcfollow.txt" : "NPCFollow"
		"vdata/CameraShots/npcfollowcut.txt" : "NPCFollowCut"
		"vdata/CameraShots/npcfollowfromplayer.txt" : "NPCFollowFromPlayer"
		"vdata/CameraShots/npcfollowmove.txt" : "NPCFollowMove"
	]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =
	[
		0 : "No"
		1 : "Yes"
	]
	stattemplate(string) : "NPC Stat Template" : "ChangBros" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	npc_perception(integer) : "NPC's Perception Level" : 10 : "Defines NPC's Perception ability level [1...10]."
	hearing(float) : "Hearing Volume" : "3.0" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
	vision(float) : "Vision Radius" : "3600" : "NPC's vision radius (units). Set '-1' as default [not tested]."
]












//===================================================================================================================
// npc_VChangBrosClaw [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC) studio() = npc_VChangBrosClaw : 
	"[VTMB] Claw-armed Chang brother (meet in Giovanni's basement)."
[
	model(studio) : "Model" : "models/character/npc/unique/Giovanni_Mansion/Chang_Brothers/chang2.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_chang_claw" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	cantdropweapons(choices) : "NPC Can't Drop Weapons" : 1 : "If set, all NPC's weapons won't be available when it dead." =
	[
		0 : "No"
		1 : "Yes"
	]
	dialogname(choices) : "Dialog Name" : "dlg/Giovanni/Chang.dlg" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"" : "None"
		"dlg/Giovanni/Chang.dlg" : "dlg/Giovanni/Chang.dlg"
	]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =
	[
		0 : "No"
		1 : "Yes"
	]
	stattemplate(string) : "NPC Stat Template" : "ChangBrosClaw" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	npc_perception(integer) : "NPC's Perception Level" : 10 : "Defines NPC's Perception ability level [1...10]."
	hearing(float) : "Hearing Volume" : "3.0" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
	vision(float) : "Vision Radius" : "3600" : "NPC's vision radius (units). Set '-1' as default [not tested]."
]










//===================================================================================================================
// npc_VCop [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VCop : 
	"[VTMB] Generic police officer. Behave quietly..."
[
	model(studio) : "Model" : "models/character/npc/common/Cop_Variant/regular_cop/Regular_Cop.mdl"
	alternateequipment(choices) : "Alternate Equipment" : "item_w_thirtyeight" : "This is the weapon that NPC will use as alternative." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1 (default)"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "5" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5 (default)"
		"6" : "Mode 6"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1 (default)"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "4" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4 (default)"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	stattemplate(string) : "NPC Stat Template" : "OfficerGeneric" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	

	// npc-specific
	floatfreq(integer) : "Float Frequency [-?]" : 8 : "[VTMB] Unknown yet..."
	hearing(float) : "Hearing Volume" : "0" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
]






//===================================================================================================================
// npc_VDialogPedestrian [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VDialogPedestrian : 
	"[VTMB] A pedestrian NPC that can engage in dialogue with the player."
[
	model(studio) : "Model" : "models/character/npc/common/citizen/male2/male_citizen_2.mdl"
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]

	// ped-related
	usescript(string) : "Use Python Script" : : "This is a Python script that defines additional dialog params [not tested]."
	level_reset_type(choices) : "Level Reset Type" : 0 : "Defines dialog resetting mode depending on level changing or reloading [not tested]." =
	[
		0 : "Type 0 (unknown yet)"
		1 : "Type 1 (unknown yet)"
		2 : "Type 2 (unknown yet)"
	]
	spawnflags(Flags) = 
	[
		4 : "Fall to ground (unchecked means *teleport* to ground)" : 1
		8192: "8192 (unknown vtmb's)" : 1
	]
]







//===================================================================================================================
// npc_VGargoyle [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC) studio() = npc_VGargoyle : 
	"[VTMB] Gargoyle (meet in Asian Theatre, Hollywood)."
[
	model(studio) : "Model" : "models/character/monster/gargoyle/gargoyle.mdl"
	default_camera(choices) : "Default Camera Shot" : "vdata/CameraShots/Gargoyle.txt" : "Default camera-shot definition applied when player interacts with this NPC. Related to 'vdata/CameraShots/*.txt' path." =
	[
		"DialogDefault" : "Dialog Default"
		"vdata/CameraShots/Gargoyle.txt" : "Gargoyle"
		"vdata/CameraShots/dialogdefaultfastmove.txt" : "DialogDefaultFastMove"
		"vdata/CameraShots/dialogdefaultwoman.txt" : "DialogDefaultWoman"
		"vdata/CameraShots/dialoglowcenter.txt" : "DialogLowCenter"
		"vdata/CameraShots/dialoglowleft.txt" : "DialogLowLeft"
		"vdata/CameraShots/dialoglowright.txt" : "DialogLowRight"
		"vdata/CameraShots/dialogmediumshot.txt" : "DialogMediumShot"
		"vdata/CameraShots/dialogoverplayerleftshoulder.txt" : "DialogOverPlayerLeftShoulder"
		"vdata/CameraShots/dynamic1.txt" : "Dynamic1"
		"vdata/CameraShots/dynamic2.txt" : "Dynamic2"
		"vdata/CameraShots/dynamic3.txt" : "Dynamic3"
		"vdata/CameraShots/dynamic4.txt" : "Dynamic4"
		"vdata/CameraShots/dynamic5.txt" : "Dynamic5"
		"vdata/CameraShots/dynamic6.txt" : "Dynamic6"
		"vdata/CameraShots/dynamic7.txt" : "Dynamic7"
		"vdata/CameraShots/dynamic8.txt" : "Dynamic8"
		"vdata/CameraShots/dynamic9.txt" : "Dynamic9"
		"vdata/CameraShots/longapproachcloseup.txt" : "LongApproachCloseUp"
		"vdata/CameraShots/lookattarget.txt" : "LookAtTarget"
		"vdata/CameraShots/lookattarget_b.txt" : "LookAtTarget_B"
		"vdata/CameraShots/lookattarget_snap.txt" : "LookAtTarget_Snap"
		"vdata/CameraShots/lookattargethead_snap.txt" : "LookAtTargetHead_Snap"
		"vdata/CameraShots/center.txt" : "Center"
		"vdata/CameraShots/centerfullview.txt" : "CenterFullView"
		"vdata/CameraShots/lowcenter.txt" : "LowCenter"
		"vdata/CameraShots/mediumshot.txt" : "MediumShot"
		"vdata/CameraShots/npcfollow.txt" : "NPCFollow"
		"vdata/CameraShots/npcfollowcut.txt" : "NPCFollowCut"
		"vdata/CameraShots/npcfollowfromplayer.txt" : "NPCFollowFromPlayer"
		"vdata/CameraShots/npcfollowmove.txt" : "NPCFollowMove"
	]
	dialogname(choices) : "Dialog Name" : "dlg/Hollywood/Gargoyle.dlg" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"" : "None"
		"dlg/Hollywood/Gargoyle.dlg" : "dlg/Hollywood/Gargoyle.dlg"
	]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =
	[
		0 : "No"
		1 : "Yes"
	]
	stattemplate(string) : "NPC Stat Template" : "Gargoyle" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
]







//===================================================================================================================
// npc_VGhoulCroucher [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VGhoulCroucher : 
	"[VTMB] Crouched ghoul (meet in Malkavian Mansion)."
[
	model(studio) : "Model" : "models/character/npc/unique/Malkavian_Mansion/Stalker/Stalker.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_knife" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	stattemplate(string) : "NPC Stat Template" : "MalkMansionCroucher" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"\tD_LI [0-10] --> Likes Player (Will Defend)\n"+
		"\tD_NU [0-10] --> Neutral (Default)\n"+
		"\tD_HT [0-10] --> Hates Player (Will Attack)" =
	[
		"D_LI 0" : "D_LI 0"
		"D_NU 0" : "D_NU 0"
		"D_HT 0" : "D_HT 0"
		"D_HT 5" : "D_HT 5"
	]

	// croucher-specific
	disturbed(choices) : "Disturbed" : 0 : "Set this NPC disturbing state." =
	[
		0 : "No"
		1 : "Yes"
	]
	on_fire(choices) : "On Fire [-?]" : 0 : "Set this NPC burning state." =
	[
		0 : "No"
		1 : "Yes"
	]
]








//===================================================================================================================
// npc_VHengeyokai [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC) studio() = npc_VHengeyokai : 
	"[VTMB] Hengeyokai, Zygaena's tranformation (meet in chinese fish market)."
[
	model(studio) : "Model" : "models/character/npc/unique/Chinatown/Zygaena/Zygaena.mdl"
	dialogname(choices) : "Dialog Name" : "dlg/Chinatown/Zygaena.dlg" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"" : "None"
		"dlg/Chinatown/Zygaena.dlg" : "dlg/Chinatown/Zygaena.dlg"
	]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =
	[
		0 : "No"
		1 : "Yes"
	]
	stattemplate(string) : "NPC Stat Template" : "Hengeyokai" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
]





//===================================================================================================================
// npc_VHuman [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VHuman : 
	"[VTMB] A Human. Just a mortal, just a means..."
[
	model(studio) : "Model" : "models/character/npc/unique/Santa_Monica/Cal/Cal.mdl"
	default_camera(choices) : "Default Camera Shot" : "vdata/CameraShots/Cal.txt" : "Default camera-shot definition applied when player interacts with this NPC. Related to 'vdata/CameraShots/*.txt' path." =
	[
		"DialogDefault" : "Dialog Default"
		"vdata/CameraShots/Cal.txt" : "vdata/CameraShots/Cal.txt"
		"vdata/CameraShots/dialogdefaultwoman.txt" : "DialogDefaultWoman"
		"vdata/CameraShots/dialogdefaultfastmove.txt" : "DialogDefaultFastMove"
		"vdata/CameraShots/dialoglowcenter.txt" : "DialogLowCenter"
		"vdata/CameraShots/dialoglowleft.txt" : "DialogLowLeft"
		"vdata/CameraShots/dialoglowright.txt" : "DialogLowRight"
		"vdata/CameraShots/dialogmediumshot.txt" : "DialogMediumShot"
		"vdata/CameraShots/dialogoverplayerleftshoulder.txt" : "DialogOverPlayerLeftShoulder"
		"vdata/CameraShots/dynamic1.txt" : "Dynamic1"
		"vdata/CameraShots/dynamic2.txt" : "Dynamic2"
		"vdata/CameraShots/dynamic3.txt" : "Dynamic3"
		"vdata/CameraShots/dynamic4.txt" : "Dynamic4"
		"vdata/CameraShots/dynamic5.txt" : "Dynamic5"
		"vdata/CameraShots/dynamic6.txt" : "Dynamic6"
		"vdata/CameraShots/dynamic7.txt" : "Dynamic7"
		"vdata/CameraShots/dynamic8.txt" : "Dynamic8"
		"vdata/CameraShots/dynamic9.txt" : "Dynamic9"
		"vdata/CameraShots/longapproachcloseup.txt" : "LongApproachCloseUp"
		"vdata/CameraShots/lookattarget.txt" : "LookAtTarget"
		"vdata/CameraShots/lookattarget_b.txt" : "LookAtTarget_B"
		"vdata/CameraShots/lookattarget_snap.txt" : "LookAtTarget_Snap"
		"vdata/CameraShots/lookattargethead_snap.txt" : "LookAtTargetHead_Snap"
		"vdata/CameraShots/center.txt" : "Center"
		"vdata/CameraShots/centerfullview.txt" : "CenterFullView"
		"vdata/CameraShots/lowcenter.txt" : "LowCenter"
		"vdata/CameraShots/mediumshot.txt" : "MediumShot"
		"vdata/CameraShots/npcfollow.txt" : "NPCFollow"
		"vdata/CameraShots/npcfollowcut.txt" : "NPCFollowCut"
		"vdata/CameraShots/npcfollowfromplayer.txt" : "NPCFollowFromPlayer"
		"vdata/CameraShots/npcfollowmove.txt" : "NPCFollowMove"
	]	
	default_disposition(choices) : "Default Disposition" : "Bartender" : "Default NPC's disposition. Goes to 'vdata/system/dispositiontable.txt' definitions." =
	[
		"Neutral" : "Neutral"
		"Anger" : "Anger"
		"Joy" : "Joy"
		"Sad" : "Sad"
		"Fear" : "Fear"
		"Disgust" : "Disgust"
		"Apathy" : "Apathy"
		"Flirtatious" : "Flirtatious"
		"Confused" : "Confused"
		"Lay" : "Lay"
		"Damaged" : "Damaged"
		"Dead" : "Dead"
		"Sitting" : "Sitting"
		"ChairDamaged" : "ChairDamaged"
		"BehindBack" : "BehindBack"
		"Therese" : "Therese"
		"Bartender" : "Bartender"
		"Lily" : "Lily"
		"PrinceSitting" : "PrinceSitting"
	]
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "2" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2 (default)"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "4" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4 (default)"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "2" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2 (default)"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "3" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3 (default)"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]

	// human-related
	soundgroup(choices) : "Sound Group" : "Unique/Cal" : "The group of sounds relative to 'sound/character/*' that specifies base NPC action sounds. See 'vdata/system/sndscheme_char.txt' for more details." = 
	[
		"" : "None"
		"Unique/cal" : "Unique/Cal"
	]
]








//===================================================================================================================
// npc_VHumanCombatant [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VHumanCombatant : 
	"[VTMB] The combatant human NPC."
[
	model(studio) : "Model" : "models/character/npc/common/gangmember_male_1/sabbat_gangmember_1_Ref.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_thirtyeight" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	alternateequipment(choices) : "Alternate Equipment" : "item_w_knife" : "This is the weapon that NPC will use as alternative." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	stattemplate(string) : "NPC Stat Template" : "WarehouseThug" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	NPCSquadname(string) : "NPC Squad Name" : : "Childrens' Squad Name"
	
	// npc-related
	soundgroup(choices) : "Sound Group" : "Young_Thug" : "The group of sounds relative to 'sound/character/*' that specifies base NPC action sounds. See 'vdata/system/sndscheme_char.txt' for more details." = 
	[
		"" : "None"
		"Young_Thug" : "Young_Thug"
	]
	radius(integer) : "Radius [-?]" : : "[VTMB] Unknown yet..."
]








//===================================================================================================================
// npc_VHumanCombatPatrol [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VHumanCombatPatrol : 
	"[VTMB] The human combat patrol (like security guards, etc.)."
[
	model(studio) : "Model" : "models/character/npc/common/security_guard/security_guard_skinny/security_guard_skinny.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_thirtyeight" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	alternateequipment(choices) : "Alternate Equipment" : "item_w_baton" : "This is the weapon that NPC will use as alternative." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	stattemplate(string) : "NPC Stat Template" : "MuseumGuard" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"\tD_LI [0-10] --> Likes Player (Will Defend)\n"+
		"\tD_NU [0-10] --> Neutral (Default)\n"+
		"\tD_HT [0-10] --> Hates Player (Will Attack)" =
	[
		"D_LI 0" : "D_LI 0"
		"D_NU 0" : "D_NU 0"
		"D_HT 0" : "D_HT 0"
		"D_HT 5" : "D_HT 5"
	]
	
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1 (default)"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "5" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5 (default)"
		"6" : "Mode 6"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1 (default)"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1 (default)"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "5" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5 (default)"
		"6" : "Mode 6"
	]
]









//===================================================================================================================
// npc_VLasombra [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VLasombra : 
	"[VTMB] Lassombra clan members."
[
	model(studio) : "Model" : "models/character/npc/common/Sabbat_Henchman/Sabbat_Henchman.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_glock_17c" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]

	stattemplate(string) : "NPC Stat Template" : "VampireLasombra" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	npc_perception(integer) : "NPC's Perception Level" : 6 : "Defines NPC's Perception ability level [1...10]."
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"\tD_LI [0-10] --> Likes Player (Will Defend)\n"+
		"\tD_NU [0-10] --> Neutral (Default)\n"+
		"\tD_HT [0-10] --> Hates Player (Will Attack)" =
	[
		"D_LI 0" : "D_LI 0"
		"D_NU 0" : "D_NU 0"
		"D_HT 0" : "D_HT 0"
		"D_HT 5" : "D_HT 5"
	]
	allow_kick_hint_use(choices) : "Allow Kick Hint Usage [-?]" : 0 : "[VTMB] Unknown yet..." =
	[
		0 : "No"
		1 : "Yes"
	]
	percent_occluded_chase(integer) : "Percent Occluded Chase [-?]" : 0 : "[VTMB] Unknown yet..."
	percent_occluded_cover(integer) : "Percent Occluded Cover [-?]" : 0 : "[VTMB] Unknown yet..."
	percent_occluded_flank(integer) : "Percent Occluded Flank [-?]" : 0 : "[VTMB] Unknown yet..."
	percent_occluded_wait(integer) : "Percent Occluded Wait [-?]" : 100 : "[VTMB] Unknown yet..."
	percent_occluded_walk(integer) : "Percent Occluded Walk [-?]" : 0 : "[VTMB] Unknown yet..."
	bright_route_penalty(integer) : "Bright Route Penalty [-?]" : 10000 : "[VTMB] Unknown yet..."
	stay_entrenched(choices) : "Stay Entrenched [-?]" : 1 : "[VTMB] Unknown yet..." =
	[
		0 : "No"
		1 : "Yes"
	]
]









//===================================================================================================================
// npc_VManBat [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VManBat : 
	"[VTMB] Man-Bat monster NPC."
[
	model(studio) : "Model" : "models/character/monster/manbat/manbat.mdl"
	combat_start_activity(choices) : "Initial Combat Activity" : "ACT_INVALID" : "Defines NPC's combat animation when none of actions or outputs applied to him." =
	[
		"-1" : "None (default)"
		"ACT_INVALID" : "Invalid"
	]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =
	[
		0 : "No"
		1 : "Yes"
	]
	stattemplate(string) : "NPC Stat Template" : "ManBat" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
]







//===================================================================================================================
// npc_VMingXiao [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VMingXiao : 
	"[VTMB] Ming Xiao, the spiritual leader of Quei-Jin."
[
	model(studio) : "Model" : "models/character/npc/unique/Chinatown/Ming_Xiao/MingXiao.mdl"
	default_camera(choices) : "Default Camera Shot" : "vdata/CameraShots/DialogDefaultWoman.txt" : "Default camera-shot definition applied when player interacts with this NPC. Related to 'vdata/CameraShots/*.txt' path." =
	[
		"DialogDefault" : "Dialog Default"
		"vdata/CameraShots/dialogdefaultwoman.txt" : "DialogDefaultWoman"
		"vdata/CameraShots/dialogdefaultfastmove.txt" : "DialogDefaultFastMove"
		"vdata/CameraShots/dialoglowcenter.txt" : "DialogLowCenter"
		"vdata/CameraShots/dialoglowleft.txt" : "DialogLowLeft"
		"vdata/CameraShots/dialoglowright.txt" : "DialogLowRight"
		"vdata/CameraShots/dialogmediumshot.txt" : "DialogMediumShot"
		"vdata/CameraShots/dialogoverplayerleftshoulder.txt" : "DialogOverPlayerLeftShoulder"
		"vdata/CameraShots/dynamic1.txt" : "Dynamic1"
		"vdata/CameraShots/dynamic2.txt" : "Dynamic2"
		"vdata/CameraShots/dynamic3.txt" : "Dynamic3"
		"vdata/CameraShots/dynamic4.txt" : "Dynamic4"
		"vdata/CameraShots/dynamic5.txt" : "Dynamic5"
		"vdata/CameraShots/dynamic6.txt" : "Dynamic6"
		"vdata/CameraShots/dynamic7.txt" : "Dynamic7"
		"vdata/CameraShots/dynamic8.txt" : "Dynamic8"
		"vdata/CameraShots/dynamic9.txt" : "Dynamic9"
		"vdata/CameraShots/longapproachcloseup.txt" : "LongApproachCloseUp"
		"vdata/CameraShots/lookattarget.txt" : "LookAtTarget"
		"vdata/CameraShots/lookattarget_b.txt" : "LookAtTarget_B"
		"vdata/CameraShots/lookattarget_snap.txt" : "LookAtTarget_Snap"
		"vdata/CameraShots/lookattargethead_snap.txt" : "LookAtTargetHead_Snap"
		"vdata/CameraShots/center.txt" : "Center"
		"vdata/CameraShots/centerfullview.txt" : "CenterFullView"
		"vdata/CameraShots/lowcenter.txt" : "LowCenter"
		"vdata/CameraShots/mediumshot.txt" : "MediumShot"
		"vdata/CameraShots/npcfollow.txt" : "NPCFollow"
		"vdata/CameraShots/npcfollowcut.txt" : "NPCFollowCut"
		"vdata/CameraShots/npcfollowfromplayer.txt" : "NPCFollowFromPlayer"
		"vdata/CameraShots/npcfollowmove.txt" : "NPCFollowMove"
	]	
	stattemplate(string) : "NPC Stat Template" : "MingXiao" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	npc_perception(integer) : "NPC's Perception Level" : 9 : "Defines NPC's Perception ability level [1...10]."

	combat_start_activity(choices) : "Initial Combat Activity" : "ACT_INVALID" : "Defines NPC's combat animation when none of actions or outputs applied to him." =
	[
		"-1" : "None (default)"
		"ACT_INVALID" : "Invalid"
	]
]







//===================================================================================================================
// npc_VNewscaster [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC) studio() = npc_VNewscaster : 
	"[VTMB] The Newcaster. You could turn on the TV to see him..."
[
	model(studio) : "Model" : "models/character/npc/common/blueblood/male/Newscaster_Male.mdl"
]






//===================================================================================================================
// npc_VPedestrian [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VPedestrian : 
	"[VTMB] Generic city pedestrian."
[
	model(studio) : "Model" : "models/character/npc/common/citizen/male/male_citizen_1.mdl"
	stattemplate(string) : "NPC Stat Template" : "CivilianGeneric" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "2" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2 (default)"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1 (default)"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]

	// npc-specific
	level_reset_type(choices) : "Level Reset Type" : 0 : "Defines dialog resetting mode depending on level changing or reloading [not tested]." =
	[
		0 : "Type 0 (unknown yet)"
		1 : "Type 1 (unknown yet)"
		2 : "Type 2 (unknown yet)"
	]
 	spawnflags(Flags) = 
	[
		4 : "Fall to ground (unchecked means *teleport* to ground)" : 1
		8192: "8192 (unknown vtmb's)" : 1
	]
]







//===================================================================================================================
// npc_VProneDialog [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VProneDialog : 
	"[VTMB] Prone dialog NPC [unknown yet]."
[
	model(studio) : "Model" : "models/character/npc/unique/Santa_Monica/Mercurio/MercurioDamaged.mdl"
	default_camera(choices) : "Default Camera Shot" : "vdata/CameraShots/Mercurio.txt" : "Default camera-shot definition applied when player interacts with this NPC. Related to 'vdata/CameraShots/*.txt' path." =
	[
		"DialogDefault" : "Dialog Default"
		"vdata/CameraShots/dialogdefaultwoman.txt" : "DialogDefaultWoman"
		"vdata/CameraShots/dialogdefaultfastmove.txt" : "DialogDefaultFastMove"
		"vdata/CameraShots/dialoglowcenter.txt" : "DialogLowCenter"
		"vdata/CameraShots/dialoglowleft.txt" : "DialogLowLeft"
		"vdata/CameraShots/dialoglowright.txt" : "DialogLowRight"
		"vdata/CameraShots/dialogmediumshot.txt" : "DialogMediumShot"
		"vdata/CameraShots/dialogoverplayerleftshoulder.txt" : "DialogOverPlayerLeftShoulder"
		"vdata/CameraShots/dynamic1.txt" : "Dynamic1"
		"vdata/CameraShots/dynamic2.txt" : "Dynamic2"
		"vdata/CameraShots/dynamic3.txt" : "Dynamic3"
		"vdata/CameraShots/dynamic4.txt" : "Dynamic4"
		"vdata/CameraShots/dynamic5.txt" : "Dynamic5"
		"vdata/CameraShots/dynamic6.txt" : "Dynamic6"
		"vdata/CameraShots/dynamic7.txt" : "Dynamic7"
		"vdata/CameraShots/dynamic8.txt" : "Dynamic8"
		"vdata/CameraShots/dynamic9.txt" : "Dynamic9"
		"vdata/CameraShots/longapproachcloseup.txt" : "LongApproachCloseUp"
		"vdata/CameraShots/lookattarget.txt" : "LookAtTarget"
		"vdata/CameraShots/lookattarget_b.txt" : "LookAtTarget_B"
		"vdata/CameraShots/lookattarget_snap.txt" : "LookAtTarget_Snap"
		"vdata/CameraShots/lookattargethead_snap.txt" : "LookAtTargetHead_Snap"
		"vdata/CameraShots/center.txt" : "Center"
		"vdata/CameraShots/centerfullview.txt" : "CenterFullView"
		"vdata/CameraShots/lowcenter.txt" : "LowCenter"
		"vdata/CameraShots/mediumshot.txt" : "MediumShot"
		"vdata/CameraShots/npcfollow.txt" : "NPCFollow"
		"vdata/CameraShots/npcfollowcut.txt" : "NPCFollowCut"
		"vdata/CameraShots/npcfollowfromplayer.txt" : "NPCFollowFromPlayer"
		"vdata/CameraShots/npcfollowmove.txt" : "NPCFollowMove"
	]
	default_disposition(choices) : "Default Disposition" : "Damaged" : "Default NPC's disposition. Goes to 'vdata/system/dispositiontable.txt' definitions." =
	[
		"Neutral" : "Neutral"
		"Anger" : "Anger"
		"Joy" : "Joy"
		"Sad" : "Sad"
		"Fear" : "Fear"
		"Disgust" : "Disgust"
		"Apathy" : "Apathy"
		"Flirtatious" : "Flirtatious"
		"Confused" : "Confused"
		"Lay" : "Lay"
		"Damaged" : "Damaged"
		"Dead" : "Dead"
		"Sitting" : "Sitting"
		"ChairDamaged" : "ChairDamaged"
		"BehindBack" : "BehindBack"
		"Therese" : "Therese"
		"Bartender" : "Bartender"
		"Lily" : "Lily"
		"PrinceSitting" : "PrinceSitting"
	]
	stattemplate(string) : "NPC Stat Template" : "Mercurio" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]

	// npc-specific
	ignore_detected_attack(choices) : "Ignore Detected Attack" : 1 : "Ignores when detects attack from other side." =
	[
		0 : "No"
		1 : "Yes"
	]
	floatfreq(integer) : "Float Frequency [-?]" : 8 : "[VTMB] Unknown yet..."
]







//===================================================================================================================
// npc_VRat [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VRat : 
	"[VTMB] The rat. Player can feed them if humans are the great luxury at this moment."
[
	model(studio) : "Model" : "models/character/monster/rat/rat.mdl"
	stattemplate(string) : "NPC Stat Template" : "Rat" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]

	// rat-specific
	detection_distance(integer) : "Detection Distance" : 256 : "Defines distance rat can wind the player."
	friendship_level(integer) : "Friendship Level" : 1 : "The level of rat's friendliness in relation to player."
	ignore_nosferatu(choices) : "Ignore Nosferatu" : 1 : "If set, the rats don't run away from Nosferatu player." =
	[
		0 : "No"
		1 : "Yes"
	]
	must_detect(choices) : "Must Detect [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		0 : "No"
		1 : "Yes"
	]
	fright_distance(integer) : "Fright Distance" : 128 : "Distance that rat will frights the player."
	fright_duration(float) : "Fright Duration" : "5.0" : "Duration of rat's fright when it nearby the player."
	conflict_range(integer) : "Conflict Range" : 100 : "[VTMB] Unknown yet..."
	warn_range(integer) : "Warn Range" : 200 : "[VTMB] Unknown yet..."

	// npc-specific
	use_interesting(choices) : "Use Interesting Places [-?]" : 1 : "Make NPC to use Interesting Plases' features [not tested]." =
	[
		0 : "No"
		1 : "Yes"
	]
	interesting_place_groups(choices) : "Interesting Place Groups" : "20" : "[VTMB] Unknown yet. Type numbers of groups dividing with spaces." =
	[
		"0" : "None"
		"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32" : "All"
	]
]
	
	


	
	
	
	
//===================================================================================================================
// npc_VSabbatGunman [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VSabbatGunman : 
	"[VTMB] A Sabbat thug with the gunshot."
[
	model(studio) : "Model" : "models/character/npc/common/Sabbat_Henchman/Sabbat_Henchman.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_ithaca_m_37" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	stattemplate(string) : "NPC Stat Template" : "SabbatCelerityShottie" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"\tD_LI [0-10] --> Likes Player (Will Defend)\n"+
		"\tD_NU [0-10] --> Neutral (Default)\n"+
		"\tD_HT [0-10] --> Hates Player (Will Attack)" =
	[
		"D_LI 0" : "D_LI 0"
		"D_NU 0" : "D_NU 0"
		"D_HT 0" : "D_HT 0"
		"D_HT 5" : "D_HT 5"
	]
]
	
	
	
	
	
	
	
	
//===================================================================================================================
// npc_VSabbatLeader [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC) studio() = npc_VSabbatLeader : 
	"[VTMB] Andrei, the Tzimisce clan member and Sabbat leader."
[
	model(studio) : "Model" : "models/character/npc/unique/Hollywood/Andrei/Andrei.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_sabbatleader_attack" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	dialogname(choices) : "Dialog Name" : "dlg/Hollywood/Andrei.dlg" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"" : "None"
		"dlg/Hollywood/Andrei.dlg" : "dlg/Hollywood/Andrei.dlg"
	]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =
	[
		0 : "No"
		1 : "Yes"
	]
	stattemplate(string) : "NPC Stat Template" : "VampireSabbatLeader" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	npc_perception(integer) : "NPC's Perception Level" : 10 : "Defines NPC's Perception ability level [1...10]."
]
	
	
	
	
	
	
	
	
//===================================================================================================================
// npc_VScurrying [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VScurrying : 
	"[VTMB] Misc feedable scurrying creations, like rats, cats, snakes, etc."
[
	model(studio) : "Model" : "models/character/monster/rat/rat.mdl"
	default_camera(choices) : "Default Camera Shot" : "CabbieSewer" : "Default camera-shot definition applied when player interacts with this NPC. Related to 'vdata/CameraShots/*.txt' path." =
	[
		"DialogDefault" : "Dialog Default"
		"vdata/CameraShots/dialogdefaultwoman.txt" : "DialogDefaultWoman"
		"vdata/CameraShots/dialogdefaultfastmove.txt" : "DialogDefaultFastMove"
		"vdata/CameraShots/dialoglowcenter.txt" : "DialogLowCenter"
		"vdata/CameraShots/dialoglowleft.txt" : "DialogLowLeft"
		"vdata/CameraShots/dialoglowright.txt" : "DialogLowRight"
		"vdata/CameraShots/dialogmediumshot.txt" : "DialogMediumShot"
		"vdata/CameraShots/dialogoverplayerleftshoulder.txt" : "DialogOverPlayerLeftShoulder"
		"vdata/CameraShots/dynamic1.txt" : "Dynamic1"
		"vdata/CameraShots/dynamic2.txt" : "Dynamic2"
		"vdata/CameraShots/dynamic3.txt" : "Dynamic3"
		"vdata/CameraShots/dynamic4.txt" : "Dynamic4"
		"vdata/CameraShots/dynamic5.txt" : "Dynamic5"
		"vdata/CameraShots/dynamic6.txt" : "Dynamic6"
		"vdata/CameraShots/dynamic7.txt" : "Dynamic7"
		"vdata/CameraShots/dynamic8.txt" : "Dynamic8"
		"vdata/CameraShots/dynamic9.txt" : "Dynamic9"
		"vdata/CameraShots/longapproachcloseup.txt" : "LongApproachCloseUp"
		"vdata/CameraShots/lookattarget.txt" : "LookAtTarget"
		"vdata/CameraShots/lookattarget_b.txt" : "LookAtTarget_B"
		"vdata/CameraShots/lookattarget_snap.txt" : "LookAtTarget_Snap"
		"vdata/CameraShots/lookattargethead_snap.txt" : "LookAtTargetHead_Snap"
		"vdata/CameraShots/center.txt" : "Center"
		"vdata/CameraShots/centerfullview.txt" : "CenterFullView"
		"vdata/CameraShots/lowcenter.txt" : "LowCenter"
		"vdata/CameraShots/mediumshot.txt" : "MediumShot"
		"vdata/CameraShots/npcfollow.txt" : "NPCFollow"
		"vdata/CameraShots/npcfollowcut.txt" : "NPCFollowCut"
		"vdata/CameraShots/npcfollowfromplayer.txt" : "NPCFollowFromPlayer"
		"vdata/CameraShots/npcfollowmove.txt" : "NPCFollowMove"
	]	
	dialogname(choices) : "Dialog Name" : "dlg/Generic/CabbieSewer.dlg" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"" : "None"
		"dlg/Generic/CabbieSewer.dlg" : "dlg/Generic/CabbieSewer.dlg"
	]
	stattemplate(string) : "NPC Stat Template" : "Scurrying" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	hearing(float) : "Hearing Volume" : "0.1" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."

	// scurrying-specific
	detection_distance(integer) : "Detection Distance" : 0 : "Defines distance creation can wind the player."
	friendship_level(integer) : "Friendship Level" : 6 : "The level of creation's friendliness in relation to player."
	ignore_nosferatu(choices) : "Ignore Nosferatu" : 1 : "If set, the creations don't run away from Nosferatu player." =
	[
		0 : "No"
		1 : "Yes"
	]
	must_detect(choices) : "Must Detect [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		0 : "No"
		1 : "Yes"
	]
	fright_distance(integer) : "Fright Distance" : 128 : "Distance that creation will frights the player."
	fright_duration(float) : "Fright Duration" : "5.0" : "Duration of creation's fright when it nearby the player."
	conflict_range(integer) : "Conflict Range" : 100 : "[VTMB] Unknown yet..."
	warn_range(integer) : "Warn Range" : 200 : "[VTMB] Unknown yet..."

	// npc-specific
	use_interesting(choices) : "Use Interesting Places [-?]" : 1 : "Make NPC to use Interesting Plases' features [not tested]." =
	[
		0 : "No"
		1 : "Yes"
	]
	interesting_place_groups(choices) : "Interesting Place Groups" : "21" : "[VTMB] Unknown yet. Type numbers of groups dividing with spaces." =
	[
		"0" : "None"
		"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32" : "All"
	]
]







	
//===================================================================================================================
// npc_VSheriffMan [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VSheriffMan : 
	"[VTMB] The Sheriff man. You just *must* kill this bastard..."
[
	model(studio) : "Model" : "models/character/npc/unique/Downtown/Sheriff/Sheriff_Battle.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_sheriff_sword" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	combat_start_activity(choices) : "Initial Combat Activity" : "ACT_INVALID" : "Defines NPC's combat animation when none of actions or outputs applied to him." =
	[
		"-1" : "None (default)"
		"ACT_INVALID" : "Invalid"
	]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =
	[
		0 : "No"
		1 : "Yes"
	]
	stattemplate(string) : "NPC Stat Template" : "SheriffMan" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	npc_perception(integer) : "NPC's Perception Level" : 10 : "Defines NPC's Perception ability level [1...10]."
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1 (default)"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1 (default)"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	interesting_place_groups(choices) : "Interesting Place Groups" : "1" : "[VTMB] Unknown yet. Type numbers of groups dividing with spaces." =
	[
		"0" : "None"
		"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32" : "All"
	]

	// npc-related
	soundgroup(choices) : "Sound Group" : "Sheriff_Manbat" : "The group of sounds relative to 'sound/character/*' that specifies base NPC action sounds. See 'vdata/system/sndscheme_char.txt' for more details." = 
	[
		"" : "None"
		"Sheriff_Manbat" : "Sheriff_Manbat"
	]
	spawnflags(Flags) = 
	[
		4 : "Fall to ground (unchecked means *teleport* to ground)" : 1
		8192: "8192 (unknown vtmb's)" : 1
	]
]
	
	
	
	
	
	

	
//===================================================================================================================
// npc_VTaxiDriver [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VTaxiDriver : 
	"[VTMB] A Taxi driver NPC. Can transition the player between levels."
[
	model(studio) : "Model" : "models/character/npc/common/cabbie/Cabbie.mdl"
	default_camera(choices) : "Default Camera Shot" : "vdata/CameraShots/Cabbie.txt" : "Default camera-shot definition applied when player interacts with this NPC. Related to 'vdata/CameraShots/*.txt' path." =
	[
		"DialogDefault" : "Dialog Default"
		"vdata/CameraShots/Cabbie.txt" : "vdata/CameraShots/Cabbie.txt"
		"vdata/CameraShots/dialogdefaultwoman.txt" : "DialogDefaultWoman"
		"vdata/CameraShots/dialogdefaultfastmove.txt" : "DialogDefaultFastMove"
		"vdata/CameraShots/dialoglowcenter.txt" : "DialogLowCenter"
		"vdata/CameraShots/dialoglowleft.txt" : "DialogLowLeft"
		"vdata/CameraShots/dialoglowright.txt" : "DialogLowRight"
		"vdata/CameraShots/dialogmediumshot.txt" : "DialogMediumShot"
		"vdata/CameraShots/dialogoverplayerleftshoulder.txt" : "DialogOverPlayerLeftShoulder"
		"vdata/CameraShots/dynamic1.txt" : "Dynamic1"
		"vdata/CameraShots/dynamic2.txt" : "Dynamic2"
		"vdata/CameraShots/dynamic3.txt" : "Dynamic3"
		"vdata/CameraShots/dynamic4.txt" : "Dynamic4"
		"vdata/CameraShots/dynamic5.txt" : "Dynamic5"
		"vdata/CameraShots/dynamic6.txt" : "Dynamic6"
		"vdata/CameraShots/dynamic7.txt" : "Dynamic7"
		"vdata/CameraShots/dynamic8.txt" : "Dynamic8"
		"vdata/CameraShots/dynamic9.txt" : "Dynamic9"
		"vdata/CameraShots/longapproachcloseup.txt" : "LongApproachCloseUp"
		"vdata/CameraShots/lookattarget.txt" : "LookAtTarget"
		"vdata/CameraShots/lookattarget_b.txt" : "LookAtTarget_B"
		"vdata/CameraShots/lookattarget_snap.txt" : "LookAtTarget_Snap"
		"vdata/CameraShots/lookattargethead_snap.txt" : "LookAtTargetHead_Snap"
		"vdata/CameraShots/center.txt" : "Center"
		"vdata/CameraShots/centerfullview.txt" : "CenterFullView"
		"vdata/CameraShots/lowcenter.txt" : "LowCenter"
		"vdata/CameraShots/mediumshot.txt" : "MediumShot"
		"vdata/CameraShots/npcfollow.txt" : "NPCFollow"
		"vdata/CameraShots/npcfollowcut.txt" : "NPCFollowCut"
		"vdata/CameraShots/npcfollowfromplayer.txt" : "NPCFollowFromPlayer"
		"vdata/CameraShots/npcfollowmove.txt" : "NPCFollowMove"
	]	
	dialogname(choices) : "Dialog Name" : "dlg/Generic/Cabbie.dlg" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"" : "None"
		"dlg/Generic/Cabbie.dlg" : "dlg/Generic/Cabbie.dlg"
	]
	combat_start_activity(choices) : "Initial Combat Activity" : "ACT_INVALID" : "Defines NPC's combat animation when none of actions or outputs applied to him." =
	[
		"-1" : "None (default)"
		"ACT_INVALID" : "Invalid"
	]
	invincible(choices) : "NPC is Invincible" : 1 : "If set, the player can't kill this NPC." =
	[
		0 : "No"
		1 : "Yes"
	]
	stattemplate(string) : "NPC Stat Template" : "Cabbie" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	
	// taxi-related
	usescript(string) : "Use Python Script" : "1" : "This is a Python script that defines additional dialog params [not tested]."

	spawnflags(Flags) = 
	[
		4 : "Fall to ground (unchecked means *teleport* to ground)" : 1
		8 : "8 (unknown vtmb's)" : 1
		8192: "8192 (unknown vtmb's)" : 1
	]
]







	
//===================================================================================================================
// npc_VTzimisce [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VTzimisce : 
	"[VTMB] The Tzimisce's creations, type 1."
[
	model(studio) : "Model" : "models/character/monster/tzimisce/creation1/creation1_full.mdl"
	stattemplate(string) : "NPC Stat Template" : "TzimisceCreation1" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	player_reaction(choices) : "Reaction to Player" : "D_HT 10" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"\tD_LI [0-10] --> Likes Player (Will Defend)\n"+
		"\tD_NU [0-10] --> Neutral (Default)\n"+
		"\tD_HT [0-10] --> Hates Player (Will Attack)" =
	[
		"D_LI 0" : "D_LI 0"
		"D_NU 0" : "D_NU 0"
		"D_HT 0" : "D_HT 0"
		"D_HT 5" : "D_HT 5"
	]
	percent_occluded_chase(integer) : "Percent Occluded Chase [-?]" : 100 : "[VTMB] Unknown yet..."
	percent_occluded_cover(integer) : "Percent Occluded Cover [-?]" : 0 : "[VTMB] Unknown yet..."
	percent_occluded_flank(integer) : "Percent Occluded Flank [-?]" : 0 : "[VTMB] Unknown yet..."
	percent_occluded_wait(integer) : "Percent Occluded Wait [-?]" : 10 : "[VTMB] Unknown yet..."
	percent_occluded_walk(integer) : "Percent Occluded Walk [-?]" : 0 : "[VTMB] Unknown yet..."
	hearing(float) : "Hearing Volume" : "0.4" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
	vision(float) : "Vision Radius" : "1000" : "NPC's vision radius (units). Set '-1' as default [not tested]."
]







	
//===================================================================================================================
// npc_VTzimisceHeadClaw [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VTzimisceHeadClaw : 
	"[VTMB] The Tzimisce's creations, type 2."
[
	model(studio) : "Model" : "models/character/monster/tzimisce/creation2/creation2_full.mdl"
	stattemplate(string) : "NPC Stat Template" : "TzimisceCreation2" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	player_reaction(choices) : "Reaction to Player" : "D_HT 10" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"\tD_LI [0-10] --> Likes Player (Will Defend)\n"+
		"\tD_NU [0-10] --> Neutral (Default)\n"+
		"\tD_HT [0-10] --> Hates Player (Will Attack)" =
	[
		"D_LI 0" : "D_LI 0"
		"D_NU 0" : "D_NU 0"
		"D_HT 0" : "D_HT 0"
		"D_HT 5" : "D_HT 5"
	]
	allow_alert_lookaround(choices) : "Allow Alert on Lookaround" : 0 : "Defines, can NPC be alert if sees player at looks around [not tested]." =
	[
		0 : "No"
		1 : "Yes"
	]
	hearing(float) : "Hearing Radius" : "0.4" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
	vision(float) : "Vision Radius" : "1000" : "NPC's vision radius (units). Set '-1' as default [not tested]."
]







	
//===================================================================================================================
// npc_VTzimisceRunner [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VTzimisceRunner : 
	"[VTMB] The Tzimisce's creations, type 3."
[
	model(studio) : "Model" : "models/character/monster/tzimisce/creation3/tzim3.mdl"
	stattemplate(string) : "NPC Stat Template" : "TzimisceCreation3" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	player_reaction(choices) : "Reaction to Player" : "D_HT 10" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"\tD_LI [0-10] --> Likes Player (Will Defend)\n"+
		"\tD_NU [0-10] --> Neutral (Default)\n"+
		"\tD_HT [0-10] --> Hates Player (Will Attack)" =
	[
		"D_LI 0" : "D_LI 0"
		"D_NU 0" : "D_NU 0"
		"D_HT 0" : "D_HT 0"
		"D_HT 5" : "D_HT 5"
	]
	hearing(float) : "Hearing Radius" : "0.4" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
	vision(float) : "Vision Radius" : "1000" : "NPC's vision radius (units). Set '-1' as default [not tested]."
	radius(float) : "Radius [-?]" : : "[VTMB] Unknown yet..."
]







//===================================================================================================================
// npc_VVampire [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VVampire : 
	"[VTMB] Generic Vampire character."
[
	model(studio) : "Model" : "models/character/npc/unique/Santa_Monica/E/E.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_claws" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	dialogname(choices) : "Dialog Name" : "models/character/npc/unique/Santa_Monica/E/E.mdl" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"" : "None"
		"models/character/npc/unique/Santa_Monica/E/E.mdl" : "models/character/npc/unique/Santa_Monica/E/E.mdl"
	]
	stattemplate(string) : "NPC Stat Template" : "VampireGeneric" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	

	// vampire-specific
	soundgroup(choices) : "Sound Group" : "Unique/E" : "The group of sounds relative to 'sound/character/*' that specifies base NPC action sounds. See 'vdata/system/sndscheme_char.txt' for more details." = 
	[
		"" : "None"
		"Unique/e" : "Unique/E"
	]
	follower_boss(choices) : "Follower Boss [-?]" : "" : "[VTMB] Unknown yet..." =
	[
		"" : "None"
		"Default" : "Default"
		"!player" : "Player"
	]
]
	
	
	
	

//===================================================================================================================
// npc_VVampireBoss [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VVampireBoss : 
	"[VTMB] Vampire boss NPC."
[
	model(studio) : "Model" : "models/character/monster/wolf_form_2/Wolf_Form_2.mdl"
	MorphModel(studio) : "Morph Model" : "models/character/npc/unique/Santa_Monica/Beckett/Beckett.mdl" : "The model that renders at NPC transforms to another form."
	dialogname(choices) : "Dialog Name" : "dlg/Main Characters/Beckett.dlg" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"" : "None"
		"dlg/Main Characters/Beckett.dlg" : "dlg/Main Characters/Beckett.dlg"
	]

	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
]


	
	
	

//===================================================================================================================
// npc_VWerewolf [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC) studio() = npc_VWerewolf : 
	"[VTMB] Werewolf NPC (meet in Griffith's Park)."
[
	model(studio) : "Model" : "models/character/monster/werewolf/werewolf.mdl"
	
	// connections
	input ToggleDoorState(void) : "Toogle door state between 'can crush' and 'cannot crush'."
	output OnConditionDeathTriggered(void) : "[VTMB: untested connection]"
	output OnBeginCrushAnimation(void) : "Fired when crush animation begins."
	output OnFinishCrushAnimation(void) : "Fired when crush animation finish."
]
	
	
	
	
	
	
	

//===================================================================================================================
// npc_VYukie [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VYukie : 
	"[VTMB] Yukie (meet in Chinatown's Ramen Shop)."
[
	model(studio) : "Model" : "models/character/npc/unique/Chinatown/Yukie/Yukie.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_katana" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	alternateequipment(choices) : "Alternate Equipment" : "item_w_crossbow" : "This is the weapon that NPC will use as alternative." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	default_camera(choices) : "Default Camera Shot" : "DialogDefaultWoman" : "Default camera-shot definition applied when player interacts with this NPC. Related to 'vdata/CameraShots/*.txt' path." =
	[
		"DialogDefault" : "Dialog Default"
		"vdata/CameraShots/dialogdefaultwoman.txt" : "DialogDefaultWoman"
		"vdata/CameraShots/dialogdefaultfastmove.txt" : "DialogDefaultFastMove"
		"vdata/CameraShots/dialoglowcenter.txt" : "DialogLowCenter"
		"vdata/CameraShots/dialoglowleft.txt" : "DialogLowLeft"
		"vdata/CameraShots/dialoglowright.txt" : "DialogLowRight"
		"vdata/CameraShots/dialogmediumshot.txt" : "DialogMediumShot"
		"vdata/CameraShots/dialogoverplayerleftshoulder.txt" : "DialogOverPlayerLeftShoulder"
		"vdata/CameraShots/dynamic1.txt" : "Dynamic1"
		"vdata/CameraShots/dynamic2.txt" : "Dynamic2"
		"vdata/CameraShots/dynamic3.txt" : "Dynamic3"
		"vdata/CameraShots/dynamic4.txt" : "Dynamic4"
		"vdata/CameraShots/dynamic5.txt" : "Dynamic5"
		"vdata/CameraShots/dynamic6.txt" : "Dynamic6"
		"vdata/CameraShots/dynamic7.txt" : "Dynamic7"
		"vdata/CameraShots/dynamic8.txt" : "Dynamic8"
		"vdata/CameraShots/dynamic9.txt" : "Dynamic9"
		"vdata/CameraShots/longapproachcloseup.txt" : "LongApproachCloseUp"
		"vdata/CameraShots/lookattarget.txt" : "LookAtTarget"
		"vdata/CameraShots/lookattarget_b.txt" : "LookAtTarget_B"
		"vdata/CameraShots/lookattarget_snap.txt" : "LookAtTarget_Snap"
		"vdata/CameraShots/lookattargethead_snap.txt" : "LookAtTargetHead_Snap"
		"vdata/CameraShots/center.txt" : "Center"
		"vdata/CameraShots/centerfullview.txt" : "CenterFullView"
		"vdata/CameraShots/lowcenter.txt" : "LowCenter"
		"vdata/CameraShots/mediumshot.txt" : "MediumShot"
		"vdata/CameraShots/npcfollow.txt" : "NPCFollow"
		"vdata/CameraShots/npcfollowcut.txt" : "NPCFollowCut"
		"vdata/CameraShots/npcfollowfromplayer.txt" : "NPCFollowFromPlayer"
		"vdata/CameraShots/npcfollowmove.txt" : "NPCFollowMove"
	]
	dialogname(choices) : "Dialog Name" : "dlg/Chinatown/Yukie.dlg" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"" : "None"
		"dlg/Chinatown/Yukie.dlg" : "dlg/Chinatown/Yukie.dlg"
	]
	stattemplate(string) : "NPC Stat Template" : "Yukie" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	player_reaction(choices) : "Reaction to Player" : "D_LI 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"\tD_LI [0-10] --> Likes Player (Will Defend)\n"+
		"\tD_NU [0-10] --> Neutral (Default)\n"+
		"\tD_HT [0-10] --> Hates Player (Will Attack)" =
	[
		"D_LI 0" : "D_LI 0"
		"D_NU 0" : "D_NU 0"
		"D_HT 0" : "D_HT 0"
		"D_HT 5" : "D_HT 5"
	]
	pl_criminal_attack(choices) : "Player Criminal Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_criminal_flee(choices) : "Player Criminal Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_attack(choices) : "Player Supernatural Attack [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
	pl_supernatural_flee(choices) : "Player Supernatural Flee [-?]" : "6" : "[VTMB] Unknown yet..." =
	[
		"-1" : "None"
		"1" : "Mode 1"
		"2" : "Mode 2"
		"3" : "Mode 3"
		"4" : "Mode 4"
		"5" : "Mode 5"
		"6" : "Mode 6 (default)"
	]
]

	



	
	
	

//===================================================================================================================
// npc_VZombie [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VZombie : 
	"[VTMB] Zombie - that says it all."
[
	model(studio) : "Model" : "models/character/monster/undead/male/undead_Male.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_fists" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	cantdropweapons(choices) : "NPC Can't Drop Weapons" : 1 : "If set, all NPC's weapons won't be available when it dead." =
	[
		0 : "No"
		1 : "Yes"
	]
	stattemplate(string) : "NPC Stat Template" : "Zombie" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"\tD_LI [0-10] --> Likes Player (Will Defend)\n"+
		"\tD_NU [0-10] --> Neutral (Default)\n"+
		"\tD_HT [0-10] --> Hates Player (Will Attack)" =
	[
		"D_LI 0" : "D_LI 0"
		"D_NU 0" : "D_NU 0"
		"D_HT 0" : "D_HT 0"
		"D_HT 5" : "D_HT 5"
	]
	allow_alert_lookaround(choices) : "Allow Alert on Lookaround" : 0 : "Defines, can NPC be alert if sees player at looks around [not tested]." =
	[
		0 : "No"
		1 : "Yes"
	]

	// zombie-specific
	ZombieAIType(choices) : "Zombie AI Type" : 8 : "Type of AI (like actbusy, behaviors, reactions, etc.) that will be applied to zombie NPC." =
	[
		0 : "Do not use"
		1 : "Type 1 (unknown yet)"
		2 : "Type 2 (unknown yet)"
		3 : "Type 3 (unknown yet)"
		4 : "Type 4 (unknown yet)"
		5 : "Type 5 (unknown yet)"
		6 : "Type 6 (unknown yet)"
		7 : "Type 7 (unknown yet)"
		8 : "Type 8 (unknown yet)"
	]
	friendship_level(integer) : "Friendship Level" : 1 : "The level of NPC's friendliness in relation to player."
	conflict_range(integer) : "Conflict Range" : 100 : "[VTMB] Unknown yet..."
	warn_range(integer) : "Warn Range" : 200 : "[VTMB] Unknown yet..."
	remove_distance(integer) : "Remove Distance" : 1000 : "[VTMB] Unknown yet..."
	should_ragdoll(choices) : "Should be Ragdolls [-?]" : 1 : "[VTMB] Unknown yet..." = [ 0 : "No" 1 : "Yes" ]
]	




















//******************************************************************************************************************
//******************************************************************************************************************
// 
// End of FGD
// 
//******************************************************************************************************************
//******************************************************************************************************************
